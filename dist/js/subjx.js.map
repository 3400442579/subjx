{"version":3,"sources":["webpack://Subjx/webpack/bootstrap","webpack://Subjx/./src/js/core/util/util.js","webpack://Subjx/./src/js/core/observer/Observer.js","webpack://Subjx/./src/js/core/helper.js","webpack://Subjx/./src/js/core/util/css-util.js","webpack://Subjx/./src/js/core/transform/common.js","webpack://Subjx/./src/js/core/transform/subject.js","webpack://Subjx/./src/js/core/transform/html.js","webpack://Subjx/./src/js/core/transform/svg/util.js","webpack://Subjx/./src/js/core/transform/svg/path.js","webpack://Subjx/./src/js/core/transform/svg/index.js","webpack://Subjx/./src/js/core/transform/index.js","webpack://Subjx/./src/js/core/clone/clone.js","webpack://Subjx/./src/js/index.js","webpack://Subjx/./src/js/core/clone/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","requestAnimFrame","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","msRequestAnimationFrame","f","setTimeout","cancelAnimFrame","cancelAnimationFrame","mozCancelAnimationFrame","requestID","clearTimeout","arrSlice","Array","forEach","slice","arrMap","map","arrReduce","reduce","warn","console","isDef","val","isUndef","isFunc","Observable","_classCallCheck","this","observers","eventName","sub","obs","push","filter","subscriber","source","data","observer","onMove","onRotate","onResize","onApply","onGetState","Helper_","params","helper_classCallCheck","selector","document","querySelectorAll","length","count","nodeType","Subjx","_typeof","isArray","prop","methods","setStyle","options","obj","len","style","_setStyle","getStyle","currentStyle","defaultView","getComputedStyle","_getStyle","apply","arguments","concat","node","sel","Helper","fn","arr","_loop","index","events","addEventListener","attachEvent","listenerDelegate","removeEventListener","detachEvent","_sel","el","evt","handler","act","doit","event","target","matches","parentNode","getOffset","getBoundingClientRect","getTransform","css","parseMatrix","transform","match","item","parseFloat","addClass","cls","classList","indexOf","add","split","cl","unitRE","RAD","Math","PI","snapToGrid","snap","gridSize","result","round","rotatedTopLeft","x","y","width","height","rotationAngle","revX","revY","hw","hh","cx","cy","dx","dy","rotatedTopLeftAngle","atan2","radius","sqrt","pow","cos","sin","ry","left","floatToFixed","top","toPX","parent","test","fromPX","toUnit","getUnitDimension","Number","toFixed","Subject","subject_classCallCheck","constructor","TypeError","storage","Ob","_onMouseDown","_onTouchStart","_onMouseMove","_onTouchMove","_onMouseUp","_onTouchEnd","_animate","_load","_init","onExecution","_end","off","remove","removeClass","_destroy","_snap","angle","_each","move","resize","rotate","_showHandles","_restrict","_drop","_container","_proportions","each","showHandles","restrict","drop","container","proportions","e","subscribe","ctx","frame","doDraw","handle","handles","nx","ny","pressang","clientX","clientY","center","doDrag","doResize","doRotate","_storage$each","moveEach","resizeEach","rotateEach","_this$_pointToElement","_pointToElement","is","ml","mr","tl","tr","bl","br","bc","tc","_resize","notify","_drag","radians","_rotate","stopImmediatePropagation","computed","_compute","keys","onRightEdge","onBottomEdge","onTopEdge","onLeftEdge","factor","rotator","ctrlKey","_this$_cursorPoint","_cursorPoint","_this$_pointToElement2","_draw","preventDefault","_this$_cursorPoint2","action","_apply","_start","on","touches","_moving","changedTouches","dox","doy","actionName","Draggable","_this","html_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","enable","createElement","insertBefore","_sel$style","w","h","_parent","controls","innerHTML","appendChild","_controls","assign","find","_this$storage","removeChild","processMove","processRotate","processResize","ctm","_toConsumableArray","matrix","multiplyMatrixAndPoint","matrixInvert","globalMatrix","_el","cached","dimens","pW","pH","diffLeft","diffTop","matrixToCSS","store","recalc","getState","_computed","tl_off","tr_off","refang","cw","ch","offset_","center_x","center_y","styleList","parentMatrix","coords","newWidth","newHeight","newCoords","pctm","_multiplyMatrixAndPoi","n_matrix","resMatrix","mtrx1","mtrx2","m1","m2","j","k","sum","multiplyMatrix","join","webkitTranform","mozTransform","msTransform","otransform","point","_matrix","_slicedToArray","a","b","M","dim","I","C","ii","ALLOWED_ELEMENTS","createSVGElement","createElementNS","createSVGMatrix","getTransformToElement","toElement","g","getScreenCTM","inverse","multiply","matrixToString","pointTo","svg","pt","createSVGPoint","matrixTransform","cloneMatrix","dRE","sepRE","parsePath","path","lastIndex","serialized","exec","cmd","upCmd","toUpperCase","replace","relative","trim","isNaN","ROT_OFFSET","floatRE","DraggableSVG","svg_classCallCheck","svg_possibleConstructorReturn","svg_getPrototypeOf","wrapper","_sel$getBBox","getBBox","elCTM","box","setAttribute","handlesGroup","normalLineGroup","group","_box$getBBox2","bX","bY","bW","bH","boxCTM","theta","normalLine","x1","baseVal","y1","x2","y2","items","fill","stroke","vector-effect","_this$storage2","element","scaleX","scaleY","ox","oy","eM","translateMatrix","isGroup","checkChildElements","child","newPT","applyTranslate","_box$getBBox","applyTransformToHandles","applyResize","defaultCTM","__ctm__","bBox","eBBox","el_x","el_y","el_w","el_h","_box$getBBox3","c_left","c_top","elMatrix","boxGroup","wrapperMatrix","boxMatrix","trMatrix","scMatrix","rotMatrix","hW","hH","boxCenter","elementCenter","_this$storage3","ptX","ptY","_box$getBBox4","abs","res","_this$storage4","moveWrapper","_pointTo","moveElement","_this$storage5","wrapMatrix","resRotMatrix","attrs","tagName","toLowerCase","resX","getAttribute","resY","resX1","resY1","resX2","resY2","parsePoints","str","firstCommand","values","coordinates","_values$slice2","path_slicedToArray","set","path_toConsumableArray","_values$slice4","_values$slice6","err","movePath","boxW","boxH","localCTM","_pointTo2","newR","_pointTo3","_pointTo4","_pointTo5","newW","newH","rx","_pointTo6","cx1","cy1","_pointTo7","nRx","nRy","_pointTo8","resX1_","resY1_","_pointTo9","resX2_","resY2_","_pointTo10","_values$slice8","x_axis_rot","large_arc_flag","sweep_flag","mtrx","newRx","newRy","unshift","_values$slice10","_values$slice16","_values$slice18","_values$slice20","_pointTo11","_values$slice22","_pointTo12","_pointTo13","resizePath","attr","boxAttrs","hdl","arrOfElements","childNodes","svg_toConsumableArray","pts","array","SVGElement","Clone","clone_classCallCheck","_ctx$options","appendTo","stack","position","z-index","clone_typeof","dropZone","onDrop","_getOffset","aTop","aLeft","_getOffset2","bTop","bLeft","_a","_b","clone","body","offset","cloneNode","doMove","frameId","translate","_move","js_classCallCheck","js_possibleConstructorReturn","js_getPrototypeOf","method","__webpack_exports__"],"mappings":"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","file":"js/subjx.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export const requestAnimFrame = requestAnimationFrame ||\r\n        mozRequestAnimationFrame ||\r\n        webkitRequestAnimationFrame ||\r\n        msRequestAnimationFrame ||\r\n        function(f) {\r\n            return setTimeout(f, 1000 / 60);\r\n        };\r\n\r\nexport const cancelAnimFrame = cancelAnimationFrame ||\r\n        mozCancelAnimationFrame ||\r\n        function(requestID) {\r\n            clearTimeout(requestID);\r\n        };\r\n\r\nexport const forEach = Array.prototype.forEach,\r\n        arrSlice = Array.prototype.slice,\r\n        arrMap = Array.prototype.map,\r\n        arrReduce = Array.prototype.reduce,\r\n        warn = console.warn;\r\n\r\nexport function isDef(val) {\r\n    return val !== undefined && val !== null;\r\n}\r\n\r\nexport function isUndef(val) {\r\n    return val === undefined || val === null;\r\n}\r\n\r\nexport function isFunc(val) {\r\n    return typeof val === 'function';\r\n}","import { isUndef } from \"../util/util\";\r\n\r\nexport default class Observable {\r\n  \r\n    constructor() {\r\n        this.observers = {};\r\n    }\r\n  \r\n    subscribe(eventName, sub) {\r\n\r\n        const obs = this.observers;\r\n     \r\n        if (isUndef(obs[eventName])) {\r\n            Object.defineProperty(obs, eventName, {\r\n                value: []\r\n            });\r\n        }\r\n\r\n        obs[eventName].push(sub);\r\n    }\r\n  \r\n    unsubscribe(f) {\r\n       this.observers = this.observers.filter(subscriber => subscriber !== f);\r\n    }\r\n\r\n    notify(eventName, source, data) {\r\n        \r\n        if (isUndef(this.observers[eventName])) return;\r\n\r\n        this.observers[eventName].forEach(observer => {\r\n            if (source === observer) return;\r\n            switch (eventName) {\r\n                case 'onmove':\r\n                    observer.onMove(data);\r\n                    break;\r\n                case 'onrotate':\r\n                    observer.onRotate(data);\r\n                    break;\r\n                case 'onresize':\r\n                    observer.onResize(data);\r\n                    break;\r\n                case 'onapply':\r\n                    observer.onApply(data);\r\n                    break;\r\n                case 'ongetstate':\r\n                    observer.onGetState(data);\r\n                    break;\r\n                default: \r\n                    break;\r\n            }\r\n        });\r\n    }\r\n}","import {\r\n    arrSlice,\r\n    warn\r\n} from './util/util'\r\n\r\nexport class Helper_ {\r\n\r\n    constructor(params) {\r\n\r\n        if (!params) return this;\r\n\r\n        if (typeof params === 'string') {\r\n            let selector = document.querySelectorAll(params);\r\n            this.length = selector.length;\r\n            for (let count = 0; count < this.length; count++) {\r\n                this[count] = selector[count];\r\n            }\r\n        } else if (params.nodeType === 1 || params === document) {\r\n            this[0] = params;\r\n            this.length = 1;\r\n        } else if (params instanceof Subjx || typeof params === 'object') {\r\n            this.length = params.length;\r\n            for (let count = 0; count < this.length; count++) {\r\n                this[count] = params[count];\r\n            }\r\n        } else if (Array.isArray(params)) {\r\n            this.length = 0;\r\n            for (let count = 0; count < this.length; count++) {\r\n                if (params.nodeType === 1) {\r\n                    this[count] = params[count];\r\n                    this.length++;\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    css(property) {\r\n        return _css.call(this, property);\r\n    }\r\n    find(node) {\r\n        return _find.call(this, node);\r\n    }\r\n    each(fn) {\r\n        return _each.call(this, fn);\r\n    }\r\n    on() {\r\n        return _on.apply(this, arguments);\r\n    }\r\n    off() {\r\n        return _off.apply(this, arguments);\r\n    }\r\n    is(selector) {\r\n        return _is.call(this, selector);\r\n    }\r\n}\r\n\r\nfunction _css(prop) {\r\n\r\n    const methods = {\r\n        setStyle(options) {\r\n            return _setStyle(this, options);\r\n        },\r\n\r\n        getStyle() {\r\n            return _getStyle(this);\r\n        }\r\n    };\r\n\r\n    if (typeof prop === 'string') {\r\n        return methods.getStyle.apply(this, arrSlice.call(arguments, 1));\r\n    } else if (typeof prop === 'object' || !prop) {\r\n        return methods.setStyle.apply(this, arguments);\r\n    } else {\r\n        warn(`Method ${prop} does not exist`);\r\n    }\r\n    return false;\r\n\r\n\r\n    function _getStyle(obj) {\r\n\r\n        let len = obj.length;\r\n\r\n        while (len--) {\r\n            if (obj[len].currentStyle) {\r\n                return obj[len].currentStyle[prop];\r\n            } else if (document.defaultView && document.defaultView.getComputedStyle) {\r\n                return document.defaultView.getComputedStyle(obj[len], '')[prop];\r\n            } else {\r\n                return obj[len].style[prop];\r\n            }\r\n        }\r\n    }\r\n\r\n    function _setStyle(obj, options) {\r\n\r\n        let len = obj.length;\r\n\r\n        while (len--) {\r\n            for (let property in options) {\r\n                obj[len].style[property] = options[property];\r\n            }\r\n        }\r\n        return obj.style;\r\n    }\r\n}\r\n\r\nfunction _each(fn) {\r\n\r\n    const arr = arrSlice.call(this, 0);\r\n\r\n    for (let index = arr.length - 1; index >= 0; --index) {\r\n        let func = function() {\r\n            return arr[index];\r\n        };\r\n        fn.call(func());\r\n    }\r\n    return this;\r\n}\r\n\r\nfunction _find(sel) {\r\n\r\n    let len = this.length,\r\n        selector;\r\n\r\n    while (len--) {\r\n        selector = this[len].querySelectorAll(sel);\r\n        return Helper(selector);\r\n    }\r\n}\r\n\r\nfunction _on() {\r\n\r\n    let len = this.length;\r\n\r\n    while (len--) {\r\n\r\n        if (!this[len].events) {\r\n            this[len].events = {};\r\n            this[len].events[arguments[0]] = [];\r\n        }\r\n\r\n        if (arguments.length === 2) {\r\n\r\n            if (document.addEventListener) {\r\n                this[len].addEventListener(arguments[0], arguments[1], false);\r\n            } else if (document.attachEvent) {\r\n                this[len].attachEvent(`on${arguments[0]}`, arguments[1]);\r\n            } else {\r\n                this[len][`on${arguments[0]}`] = arguments[1];\r\n            }\r\n\r\n        } else if (arguments.length === 3 && typeof(arguments[1]) === 'string') {\r\n            listenerDelegate(this[len], arguments[0], arguments[1], arguments[2], true);\r\n        }\r\n    }\r\n    return this;\r\n}\r\n\r\nfunction _off() {\r\n\r\n    let len = this.length;\r\n\r\n    while (len--) {\r\n\r\n        if (!this[len].events) {\r\n            this[len].events = {};\r\n            this[len].events[arguments[0]] = [];\r\n        }\r\n\r\n        if (arguments.length === 2) {\r\n            if (document.removeEventListener) {\r\n                this[len].removeEventListener(arguments[0], arguments[1], false);\r\n            } else if (document.detachEvent) {\r\n                this[len].detachEvent(`on${arguments[0]}`, arguments[1]);\r\n            } else {\r\n                this[len][`on${arguments[0]}`] = null;\r\n            }\r\n\r\n        } else if (arguments.length === 3 && typeof(arguments[1]) === 'string') {\r\n            listenerDelegate(this[len], arguments[0], arguments[1], arguments[2], false);\r\n        }\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\nfunction _is(selector) {\r\n\r\n    const _sel = Helper(selector);\r\n    let len = this.length;\r\n\r\n    while (len--) {\r\n        if (this[len] === _sel[len]) return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction listenerDelegate(el, evt, sel, handler, act) {\r\n\r\n    const doit = function(event) {\r\n        let t = event.target;\r\n        while (t && t !== this) {\r\n            if (t.matches(sel)) {\r\n                handler.call(t, event);\r\n            }\r\n            t = t.parentNode;\r\n        }\r\n    };\r\n\r\n    if (act === true) {\r\n        if (document.addEventListener) {\r\n            el.addEventListener(evt, doit, false);\r\n        } else if (document.attachEvent) {\r\n            el.attachEvent(`on${evt}`, doit);\r\n        } else {\r\n            el[`on${evt}`] = doit;\r\n        }\r\n    } else {\r\n        if (document.removeEventListener) {\r\n            el.removeEventListener(evt, doit, false);\r\n        } else if (document.detachEvent) {\r\n            el.detachEvent(`on${evt}`, doit);\r\n        } else {\r\n            el[`on${evt}`] = null;\r\n        }\r\n    }\r\n}\r\n\r\nexport function Helper(params) {\r\n    return new Helper_(params);\r\n}","import { Helper } from '../helper'\r\n\r\nexport function getOffset(node) {\r\n    return node.getBoundingClientRect();\r\n}\r\n\r\nexport function getTransform(el) {\r\n    const transform = el.css('-webkit-transform') ||\r\n        el.css('-moz-transform') ||\r\n        el.css('-ms-transform') ||\r\n        el.css('-o-transform') ||\r\n        el.css('transform') ||\r\n        'none';\r\n    return transform;\r\n}\r\n\r\nexport function parseMatrix(value) {\r\n    \r\n    const transform = value.match(/-?\\d+\\.?\\d+|-?\\d+/g);\r\n\r\n    if (transform) {\r\n        return transform.map(item => {\r\n            return parseFloat(item);\r\n        });\r\n    } else {\r\n        return [1, 0, 0, 1, 0, 0];\r\n    }\r\n}\r\n\r\nexport function addClass(node, cls) {\r\n    if (!cls) return;\r\n\r\n    if (node.classList) {\r\n        if (cls.indexOf(' ') > -1) {\r\n            cls.split(/\\s+/).forEach(function(cl) {\r\n                return node.classList.add(cl);\r\n            });\r\n        } else {\r\n            return node.classList.add(cls);\r\n        }\r\n    }\r\n    return node;\r\n}\r\n\r\nexport function removeClass(node, cls) {\r\n    if (!cls) return;\r\n\r\n    if (node.classList) {\r\n        if (cls.indexOf(' ') > -1) {\r\n            cls.split(/\\s+/).forEach(function(cl) {\r\n                return node.classList.remove(cl);\r\n            });\r\n        } else {\r\n            return node.classList.remove(cls);\r\n        }\r\n    }\r\n    return node;\r\n}\r\n\r\nexport function objectsCollide(a, b) {\r\n\r\n    const { \r\n        top: aTop,\r\n        left: aLeft\r\n    } = getOffset(a),\r\n    {\r\n        top: bTop,\r\n        left: bLeft\r\n    } = getOffset(b),\r\n    _a = Helper(a),\r\n    _b = Helper(b);\r\n    \r\n    return !(\r\n        ((aTop < bTop) ||\r\n        (aTop + parseFloat(_a.css('height'))) > (bTop + parseFloat(_b.css('height')))) ||\r\n        ((aLeft < bLeft) ||\r\n        (aLeft + parseFloat(_a.css('width'))) > (bLeft + parseFloat(_b.css('width'))))\r\n    )\r\n}","export const unitRE = /px|em|%|ex|ch|rem|vh|vw|vmin|vmax|mm|cm|in|pt|pc|deg/;\r\nexport const RAD = Math.PI / 180;\r\nexport const DEG = 180 / Math.PI;\r\n\r\nexport function snapToGrid(value, snap) {\r\n    \r\n    if (snap === 0) {\r\n        return value;\r\n    } else {\r\n        const result = snapCandidate(value, snap);\r\n\r\n        if (result - value < snap) {\r\n            return result;\r\n        }\r\n    }\r\n}\r\n\r\nexport function snapCandidate(value, gridSize) {\r\n    if (gridSize === 0) return value;\r\n    return Math.round(value / gridSize) * gridSize;\r\n}\r\n\r\nexport function rotatedTopLeft(\r\n    x, \r\n    y, \r\n    width, \r\n    height, \r\n    rotationAngle, \r\n    revX, \r\n    revY\r\n) {\r\n\r\n    const hw = parseFloat(width) / 2,\r\n        hh = parseFloat(height) / 2;\r\n                \r\n    const cx = x + hw,\r\n        cy = y + hh;\r\n\r\n    const dx = x - cx,\r\n        dy = y - cy;\r\n\r\n    const originalTopLeftAngle = Math.atan2(dy, dx);\r\n\r\n    const rotatedTopLeftAngle = originalTopLeftAngle + rotationAngle;\r\n\r\n    const radius = Math.sqrt(Math.pow(hw, 2) + Math.pow(hh, 2));\r\n            \r\n    let cos = Math.cos(rotatedTopLeftAngle), \r\n        sin = Math.sin(rotatedTopLeftAngle);\r\n\r\n    cos = revX === true ? -cos : cos;\r\n    sin = revY === true ? -sin : sin;\r\n\r\n    const rx = cx + radius * cos,\r\n        ry = cy + radius * sin;\r\n\r\n    return {\r\n        left: floatToFixed(rx),\r\n        top: floatToFixed(ry)\r\n    }\r\n}\r\n\r\n// export function getRotatedPoint(\r\n//     cx, \r\n//     cy, \r\n//     x, \r\n//     y, \r\n//     angle, \r\n//     revX, \r\n//     revY\r\n// ) {\r\n\r\n//     let cos = Math.cos(angle),\r\n//         sin = Math.sin(angle);\r\n\r\n//     cos = revX === true ? -cos : cos;\r\n//     sin = revY === true ? -sin : sin;\r\n\r\n//     let nx = (cos * (x - cx)) + (sin * (y - cy)) + cx,\r\n//         ny = (cos * (y - cy)) - (sin * (x - cx)) + cy;\r\n\r\n//     return {\r\n//         left: floatToFixed(nx),\r\n//         top: floatToFixed(ny)\r\n//     }\r\n// }\r\n\r\nexport function toPX(value, parent) {\r\n    if (/px/.test(value)) {\r\n        return value;\r\n    }\r\n    if (/%/.test(value)) {\r\n        return `${(parseFloat(value) * parseFloat(parent) / 100)}px`;\r\n    }\r\n}\r\n\r\nexport function fromPX(value, parent, toUnit) {\r\n    if (/px/.test(toUnit)) {\r\n        return value;\r\n    }\r\n    if (/%/.test(toUnit)) {\r\n        return `${parseFloat(value) * 100 / parseFloat(parent)}%`;\r\n    }\r\n}\r\n\r\nexport function getUnitDimension(value) {\r\n    return value.match(unitRE)[0];\r\n}\r\n\r\nexport function floatToFixed(val) {\r\n    return Number(val.toFixed(6));\r\n}","import { Helper } from '../helper'\r\n\r\nimport {\r\n    requestAnimFrame,\r\n    cancelAnimFrame,\r\n    isDef,\r\n    isUndef,\r\n    isFunc,\r\n    warn\r\n} from '../util/util'\r\n\r\nimport {\r\n    addClass,\r\n    removeClass\r\n} from '../util/css-util'\r\n\r\nimport {\r\n    snapToGrid,\r\n    RAD\r\n} from './common'\r\n\r\nexport default class Subject {\r\n\r\n    constructor(el, Observable) {\r\n\r\n        if (this.constructor === Subject) {\r\n            throw new TypeError('Cannot construct Subject instances directly');\r\n        }\r\n\r\n        this.el = el;\r\n        this.storage = null;\r\n        this.Ob = Observable;\r\n\r\n        this._onMouseDown = this._onMouseDown.bind(this);\r\n        this._onTouchStart = this._onTouchStart.bind(this);\r\n        this._onMouseMove = this._onMouseMove.bind(this);\r\n        this._onTouchMove = this._onTouchMove.bind(this);\r\n        this._onMouseUp = this._onMouseUp.bind(this);\r\n        this._onTouchEnd = this._onTouchEnd.bind(this);\r\n        this._animate = this._animate.bind(this);\r\n    }\r\n\r\n    enable(options) {\r\n\r\n        if (isUndef(this.storage)) {\r\n            this._load(options);\r\n            this._init(this.el);\r\n        } else {\r\n            warn('Already enabled');\r\n        }\r\n    }\r\n\r\n    disable() {\r\n\r\n        const {\r\n            storage,\r\n            el\r\n        } = this;\r\n\r\n        if (isUndef(storage)) return;\r\n\r\n        // unexpected case\r\n        if (storage.onExecution) {\r\n            this._end();\r\n            Helper(document).off('mousemove', this._onMouseMove)\r\n                            .off('mouseup', this._onMouseUp)\r\n                            .off('touchmove', this._onTouchMove)\r\n                            .off('touchend', this._onTouchEnd);  \r\n        }\r\n\r\n        removeClass(el, 'dg-drag');\r\n        this._destroy();\r\n\r\n        delete this.storage;  \r\n    }\r\n\r\n    _init() {}\r\n\r\n    _destroy() {}\r\n\r\n    _drag() {}\r\n\r\n    _resize() {}\r\n\r\n    _rotate() {}\r\n\r\n    _cursorPoint() {}\r\n\r\n    _load(options) {\r\n\r\n        const { el, Ob } = this;\r\n\r\n        addClass(el, 'dg-drag');\r\n\r\n        const _snap = {\r\n            x: 10,\r\n            y: 10,\r\n            angle: 10 * RAD\r\n        };\r\n\r\n        const _each = {\r\n            move: false,\r\n            resize: false,\r\n            rotate: false\r\n        };\r\n\r\n        let _showHandles = true,\r\n            _restrict = null,\r\n            _drop = function() {};\r\n\r\n        let _container = el.parentNode;\r\n\r\n        let _proportions = false;\r\n\r\n        if (isDef(options)) {\r\n\r\n            const { \r\n                snap, \r\n                each, \r\n                showHandles,\r\n                restrict,\r\n                drop,\r\n                container,\r\n                proportions\r\n            } = options;\r\n\r\n            if (isDef(snap)) {\r\n\r\n                const { x, y, angle } = snap;\r\n\r\n                _snap.x = isUndef(x) ? 10 : x;\r\n                _snap.y = isUndef(y) ? 10 : y;\r\n                _snap.angle = isUndef(angle) \r\n                                ? _snap.angle \r\n                                : angle * RAD;\r\n            }\r\n            \r\n            if (isDef(each)) {\r\n\r\n                const { move, resize, rotate } = each;\r\n\r\n                _each.move = move || false;\r\n                _each.resize = resize || false;\r\n                _each.rotate = rotate || false; \r\n            }\r\n\r\n            if (isDef(restrict)) {\r\n                _restrict = restrict === 'parent'\r\n                    ? el.parentNode\r\n                    : Helper(restrict)[0] || document\r\n            }\r\n            \r\n            _drop = isFunc(options.drop)\r\n                    ? function(e) {\r\n                        drop(e, el);\r\n                    } \r\n                    : _drop;\r\n\r\n            _showHandles = isUndef(showHandles) ||\r\n                            showHandles === true;\r\n                            \r\n            _container = Helper(container)[0] || _container;\r\n\r\n            _proportions = proportions || false;\r\n        }\r\n\r\n        this.storage = {\r\n            showHandles: _showHandles,\r\n            restrict: _restrict,\r\n            container: _container,\r\n            drop: _drop,\r\n            snap: _snap,\r\n            each: _each,\r\n            proportions: _proportions\r\n        };\r\n\r\n        if (_each.move || _each.resize || _each.rotate) {\r\n            Ob.subscribe('ongetstate', this);\r\n            Ob.subscribe('onapply', this);\r\n        }\r\n\r\n        if (_each.move) {\r\n            Ob.subscribe('onmove', this);\r\n        }\r\n        if (_each.resize) {\r\n            Ob.subscribe('onresize', this);\r\n        }\r\n        if (_each.rotate) {\r\n            Ob.subscribe('onrotate', this);\r\n        }\r\n    }\r\n\r\n    _draw() {\r\n        this._animate();\r\n    }\r\n\r\n    _animate() {\r\n\r\n        const ctx = this;\r\n        const { storage } = ctx;\r\n\r\n        if (isUndef(storage)) return;\r\n\r\n        storage.frame = requestAnimFrame(ctx._animate);\r\n\r\n        if (!storage.doDraw) return;\r\n        storage.doDraw = false; \r\n\r\n        let {\r\n            e,\r\n            handle,\r\n            handles,\r\n            cx,\r\n            cy,\r\n            nx,\r\n            ny,\r\n            pressang,\r\n            clientX,\r\n            clientY,\r\n            center,\r\n            snap,\r\n            doDrag,\r\n            doResize,\r\n            doRotate,\r\n            revX,\r\n            revY\r\n        } = storage;\r\n\r\n        const { \r\n            move: moveEach, \r\n            resize: resizeEach, \r\n            rotate: rotateEach\r\n        } = storage.each;\r\n\r\n        if (doResize) {\r\n\r\n            const { x, y } = this._pointToElement(\r\n                {\r\n                    x: clientX,\r\n                    y: clientY\r\n                }\r\n            );\r\n\r\n            let dx = snapToGrid(x - cx, snap.x),\r\n                dy = snapToGrid(y - cy, snap.y);\r\n\r\n            const dox = handle.is(handles.ml) || \r\n                handle.is(handles.mr) ||\r\n                handle.is(handles.tl) ||\r\n                handle.is(handles.tr) ||\r\n                handle.is(handles.bl) ||\r\n                handle.is(handles.br);\r\n\r\n            const doy = handle.is(handles.br) ||\r\n                handle.is(handles.bl) ||\r\n                handle.is(handles.bc) ||\r\n                handle.is(handles.tr) ||\r\n                handle.is(handles.tl) ||\r\n                handle.is(handles.tc);\r\n\r\n            dx = dox ? (revX ? - dx : dx) : 0,\r\n            dy =  doy ? (revY ? - dy : dy) : 0;\r\n\r\n            ctx._resize(\r\n                dx,\r\n                dy\r\n            );\r\n\r\n            if (resizeEach) {\r\n\r\n                ctx.Ob.notify('onresize',\r\n                    ctx,\r\n                    {\r\n                        dx,\r\n                        dy\r\n                    }\r\n                );\r\n            }\r\n        }\r\n\r\n        if (doDrag) {\r\n\r\n            const dx = snapToGrid(clientX - nx, snap.x),\r\n                dy = snapToGrid(clientY - ny, snap.y);\r\n\r\n            ctx._drag(\r\n                dx,\r\n                dy\r\n            );\r\n\r\n            if (moveEach) {\r\n                ctx.Ob.notify('onmove',\r\n                    ctx,\r\n                    {\r\n                        dx,\r\n                        dy\r\n                    }\r\n                );\r\n            }\r\n        }\r\n\r\n        if (doRotate) {\r\n\r\n            const radians = Math.atan2(\r\n                clientY - center.y, \r\n                clientX - center.x\r\n            ) - pressang;\r\n\r\n            ctx._rotate(\r\n                snapToGrid(radians, snap.angle)\r\n            );\r\n\r\n            if (rotateEach) {\r\n                ctx.Ob.notify('onrotate',\r\n                    ctx,\r\n                    {\r\n                        radians\r\n                    }\r\n                );\r\n            }\r\n        }\r\n    }\r\n\r\n    _start(e) {\r\n\r\n        if (e.stopImmediatePropagation) {\r\n            e.stopImmediatePropagation();\r\n        }\r\n    \r\n        const { storage } = this; \r\n        const computed = this._compute(e);\r\n\r\n        Object.keys(computed).forEach(prop => {\r\n            storage[prop] = computed[prop];\r\n        });\r\n\r\n        const {\r\n            onRightEdge,\r\n            onBottomEdge,\r\n            onTopEdge,\r\n            onLeftEdge,\r\n            handle,\r\n            factor,\r\n            revX,\r\n            revY\r\n        } = computed;\r\n    \r\n        const doResize = onRightEdge ||\r\n                        onBottomEdge ||\r\n                        onTopEdge ||\r\n                        onLeftEdge;\r\n\r\n        const doRotate = handle.is(storage.handles.rotator);\r\n\r\n        const {\r\n            clientX,\r\n            clientY,\r\n            ctrlKey\r\n        } = e;\r\n\r\n        const { \r\n            x, \r\n            y \r\n        } = this._cursorPoint(\r\n            {\r\n                clientX, \r\n                clientY\r\n            }\r\n        );\r\n\r\n        const { \r\n            x: nx, \r\n            y: ny \r\n        } = this._pointToElement({ x, y });\r\n        \r\n        storage.clientX = clientX;\r\n        storage.clientY = clientY;\r\n        storage.nx = x;\r\n        storage.ny = y;\r\n        storage.cx = nx;\r\n        storage.cy = ny;\r\n        storage.ctrlKey = ctrlKey;\r\n        storage.doResize = doResize;\r\n        storage.doDrag = !doRotate && !doResize;\r\n        storage.doRotate = doRotate;\r\n        storage.onExecution = true;\r\n\r\n        this.Ob.notify(\r\n            'ongetstate',\r\n            this,\r\n            {\r\n                factor,\r\n                revX,\r\n                revY\r\n            }\r\n        );\r\n\r\n        this._draw();\r\n    }\r\n\r\n    _moving(e) {\r\n\r\n        if (e.preventDefault) {\r\n            e.preventDefault();\r\n        }\r\n        \r\n        const { storage } = this;\r\n\r\n        const { x, y } = this._cursorPoint(e);\r\n\r\n        storage.clientX = x;\r\n        storage.clientY = y;\r\n        storage.doDraw = true;\r\n    }\r\n    \r\n    _end(e) {\r\n\r\n        if (isDef(e) && e.stopImmediatePropagation) {\r\n            e.stopImmediatePropagation();\r\n        }\r\n\r\n        const { storage } = this;\r\n\r\n        const action = storage.doResize \r\n            ? 'resize' \r\n            : (storage.doDrag ? 'drag' : 'rotate');\r\n\r\n        storage.doResize = false;\r\n        storage.doDrag = false;\r\n        storage.doRotate = false;\r\n        storage.doDraw = false;\r\n        storage.onExecution = false;\r\n\r\n        this._apply(action);\r\n\r\n        this.Ob.notify(\r\n            'onapply',\r\n            this,\r\n            action\r\n        );\r\n\r\n        cancelAnimFrame(storage.frame);\r\n        storage.drop.call(this, e);\r\n    }\r\n\r\n    _onMouseDown(e) {\r\n        this._start(e);\r\n        Helper(document).on('mousemove', this._onMouseMove)\r\n                        .on('mouseup', this._onMouseUp);\r\n    }\r\n\r\n    _onTouchStart(e) {\r\n        this._start(e.touches[0]);\r\n        Helper(document).on('touchmove', this._onTouchMove)\r\n                        .on('touchend', this._onTouchEnd);\r\n    }\r\n\r\n    _onMouseMove(e) {\r\n        this._moving(\r\n            e, \r\n            this.el\r\n        );\r\n    }\r\n\r\n    _onTouchMove(e) {\r\n        this._moving(\r\n            e.touches[0], \r\n            this.el\r\n        );\r\n    }\r\n\r\n    _onMouseUp(e) {\r\n        Helper(document).off('mousemove', this._onMouseMove)\r\n                        .off('mouseup', this._onMouseUp);  \r\n        this._end(e, this.el);                                      \r\n    }\r\n\r\n    _onTouchEnd(e) {\r\n        Helper(document).off('touchmove', this._onTouchMove)\r\n                        .off('touchend', this._onTouchEnd);\r\n        if (e.touches.length === 0) {\r\n            this._end(e.changedTouches[0], this.el);\r\n        }\r\n    }\r\n\r\n    onMove(data) {\r\n\r\n        const { \r\n            dx,\r\n            dy \r\n        } = data;\r\n\r\n        this._drag(\r\n            dx,\r\n            dy\r\n        );\r\n    }\r\n\r\n    onRotate(data) {\r\n\r\n        const {\r\n            snap\r\n        } = this.storage;\r\n\r\n        this._rotate(\r\n            snapToGrid(data.radians, snap.angle)\r\n        );\r\n    }\r\n\r\n    onResize(data) {\r\n\r\n        const {\r\n            dx,\r\n            dy,\r\n            dox,\r\n            doy\r\n        } = data;\r\n\r\n        this._resize(\r\n            dx,\r\n            dy,\r\n            dox,\r\n            doy\r\n        );\r\n    }\r\n\r\n    onApply(actionName) {\r\n        this._apply(actionName);\r\n    }\r\n}","import { Helper } from '../helper'\r\nimport Subject from './subject'\r\n\r\nimport { \r\n    addClass,\r\n    getTransform,\r\n    parseMatrix,\r\n    getOffset\r\n} from '../util/css-util'\r\n\r\nimport {\r\n    rotatedTopLeft,\r\n    toPX,\r\n    fromPX,\r\n    getUnitDimension,\r\n    floatToFixed\r\n} from './common'\r\n\r\nconst MIN_SIZE = 2;\r\nconst BRACKETS = `\r\n        <div class=\"dg dg-normal\"></div>\r\n        <div class=\"dg-hdl dg-hdl-t dg-hdl-l dg-hdl-tl\"></div>\r\n        <div class=\"dg-hdl dg-hdl-t dg-hdl-r dg-hdl-tr\"></div>\r\n        <div class=\"dg-hdl dg-hdl-b dg-hdl-r dg-hdl-br\"></div>\r\n        <div class=\"dg-hdl dg-hdl-b dg-hdl-l dg-hdl-bl\"></div>\r\n        <div class=\"dg-hdl dg-hdl-t dg-hdl-c dg-hdl-tc\"></div>\r\n        <div class=\"dg-hdl dg-hdl-b dg-hdl-c dg-hdl-bc\"></div>\r\n        <div class=\"dg-hdl dg-hdl-m dg-hdl-l dg-hdl-ml\"></div>\r\n        <div class=\"dg-hdl dg-hdl-m dg-hdl-r dg-hdl-mr\"></div>\r\n        <div class=\"dg-hdl dg-rotator\"></div>`;\r\n\r\nexport default class Draggable extends Subject {\r\n\r\n    constructor(el, options, Observable) {\r\n        super(el, Observable);\r\n        this.enable(options);\r\n    }\r\n\r\n    _init(item) {\r\n        _init.call(this, item);\r\n    }\r\n\r\n    _destroy(item) {\r\n        _destroy.call(this, item);\r\n    }\r\n\r\n    _drag() {\r\n        processMove.call(this, ...arguments);\r\n    }\r\n\r\n    _rotate() {\r\n        processRotate.call(this, ...arguments);\r\n    }\r\n\r\n    _resize() {\r\n        processResize.call(this, ...arguments);\r\n    }\r\n\r\n    _compute() {\r\n        return _compute.call(this, ...arguments);\r\n    }\r\n\r\n    _pointToElement(data) {\r\n\r\n        const {\r\n            transform,\r\n        } = this.storage;\r\n\r\n        const { \r\n            x, \r\n            y \r\n        } = data;\r\n\r\n        const ctm = [...transform.matrix];\r\n        ctm[4] = ctm[5] = 0;\r\n\r\n        return multiplyMatrixAndPoint(\r\n            {\r\n                x,\r\n                y\r\n            },\r\n            matrixInvert(ctm)\r\n        );\r\n    }\r\n\r\n    _cursorPoint(e) {\r\n\r\n        const { \r\n            container\r\n        } = this.storage;\r\n\r\n        const globalMatrix = parseMatrix(\r\n            getTransform(Helper(container))\r\n        );\r\n\r\n        return multiplyMatrixAndPoint(\r\n            {\r\n                x: e.clientX,\r\n                y: e.clientY\r\n            },\r\n            matrixInvert(\r\n                globalMatrix\r\n            )\r\n        );\r\n    }\r\n\r\n    _apply() {\r\n\r\n        const {\r\n            storage,\r\n            el\r\n        } = this;\r\n\r\n        const _el = Helper(el);\r\n\r\n        const {\r\n            cached,\r\n            parent,\r\n            dimens,\r\n            controls\r\n        } = storage;\r\n\r\n        if (!cached) return;\r\n\r\n        const matrix = [...cached];\r\n\r\n        const pW = parent.css('width'),\r\n            pH = parent.css('height');\r\n\r\n        const diffLeft = matrix[4];\r\n        const diffTop = matrix[5];\r\n\r\n        matrix[4] = 0;\r\n        matrix[5] = 0;\r\n\r\n        const css = matrixToCSS(matrix);\r\n\r\n        const left = parseFloat(\r\n            toPX(\r\n                _el[0].style.left || _el.css('left'),\r\n                pW\r\n            )\r\n        );\r\n\r\n        const top = parseFloat(\r\n            toPX(\r\n                _el[0].style.top || _el.css('top'), \r\n                pH\r\n            )\r\n        );\r\n\r\n        css.left = fromPX(\r\n            left + diffLeft + 'px', \r\n            pW,\r\n            dimens.left\r\n        );\r\n\r\n        css.top = fromPX(\r\n            top + diffTop + 'px', \r\n            pH,\r\n            dimens.top\r\n        );\r\n\r\n        _el.css(css);\r\n        Helper(controls).css(css);\r\n\r\n        this.storage.cached = null;\r\n    }\r\n\r\n    onGetState(data) {\r\n\r\n        const store = this.storage;\r\n\r\n        const recalc = getState.call(\r\n            this,\r\n            data\r\n        );\r\n\r\n        Object.keys(recalc).forEach(key => {\r\n            store[key] = recalc[key];\r\n        });\r\n    }\r\n}\r\n\r\nfunction _init(sel) {\r\n\r\n    const { storage } = this;\r\n\r\n    const container = document.createElement('div');\r\n\r\n    addClass(container, 'dg-wrapper');\r\n    sel.parentNode.insertBefore(container, sel);\r\n\r\n    const _sel = Helper(sel);\r\n\r\n    const {\r\n        left,\r\n        top,\r\n        width,\r\n        height\r\n    } = sel.style;\r\n\r\n    const w = width || _sel.css('width'),\r\n        h = height || _sel.css('height'),\r\n        t = top || _sel.css('top'),\r\n        l = left || _sel.css('left');\r\n\r\n    const _parent = Helper(container.parentNode);\r\n\r\n    const css = {\r\n        top: t,\r\n        left: l,\r\n        width: w,\r\n        height: h,\r\n        transform: getTransform(_sel)\r\n    };\r\n\r\n    const controls = document.createElement('div');\r\n    controls.innerHTML = BRACKETS;\r\n    \r\n    addClass(controls, 'dg-controls');\r\n\r\n    container.appendChild(controls);\r\n\r\n    const _controls = Helper(controls);\r\n    _controls.css(css);\r\n\r\n    const _container = Helper(container);\r\n\r\n    Object.assign(storage, {\r\n        controls,\r\n        handles: {\r\n            tl: _container.find('.dg-hdl-tl'),\r\n            tr: _container.find('.dg-hdl-tr'),\r\n            br: _container.find('.dg-hdl-br'),\r\n            bl: _container.find('.dg-hdl-bl'),\r\n            tc: _container.find('.dg-hdl-tc'),\r\n            bc: _container.find('.dg-hdl-bc'),\r\n            ml: _container.find('.dg-hdl-ml'),\r\n            mr: _container.find('.dg-hdl-mr'),\r\n            rotator: _container.find('.dg-rotator')\r\n        },\r\n        parent: _parent\r\n    });\r\n\r\n    _controls.on('mousedown', this._onMouseDown)\r\n            .on('touchstart', this._onTouchStart);\r\n}\r\n\r\nfunction _destroy() {\r\n\r\n    const { \r\n        controls,\r\n        container \r\n    } = this.storage;\r\n\r\n    Helper(controls).off('mousedown', this._onMouseDown)\r\n                    .off('touchstart', this._onTouchStart);\r\n\r\n    container.removeChild(controls.parentNode);\r\n}\r\n\r\nfunction _compute(e) {\r\n\r\n    const {\r\n        handles,\r\n    } = this.storage;\r\n\r\n    const handle = Helper(e.target);\r\n\r\n    //reverse axis\r\n    const revX = handle.is(handles.tl) || \r\n                handle.is(handles.ml) || \r\n                handle.is(handles.bl) || \r\n                handle.is(handles.tc);\r\n\r\n    const revY = handle.is(handles.tl) || \r\n                handle.is(handles.tr) || \r\n                handle.is(handles.tc) || \r\n                handle.is(handles.ml);\r\n            \r\n    const onTopEdge = handle.is(handles.tl) || handle.is(handles.tc) || handle.is(handles.tr),\r\n        onLeftEdge = handle.is(handles.tl) || handle.is(handles.ml) || handle.is(handles.bl),\r\n        onRightEdge = handle.is(handles.tr) || handle.is(handles.mr) || handle.is(handles.br),\r\n        onBottomEdge = handle.is(handles.br) || handle.is(handles.bc) || handle.is(handles.bl);\r\n\r\n    //reverse angle\r\n    const factor = handle.is(handles.tr) || \r\n                    handle.is(handles.bl) \r\n                ? -1\r\n                : 1;\r\n\r\n    const _computed = getState.call(this, {\r\n        factor,\r\n        revX, \r\n        revY\r\n    });\r\n\r\n    const { \r\n        x: clientX, \r\n        y: clientY\r\n    } = this._cursorPoint(e);\r\n\r\n    const pressang = Math.atan2(\r\n        clientY - _computed.center.y,\r\n        clientX - _computed.center.x\r\n    );\r\n\r\n    _computed.onTopEdge = onTopEdge;\r\n    _computed.onLeftEdge = onLeftEdge;\r\n    _computed.onRightEdge = onRightEdge;\r\n    _computed.onBottomEdge = onBottomEdge;\r\n    _computed.handle = handle;\r\n    _computed.pressang = pressang;\r\n    \r\n    return _computed; \r\n}\r\n\r\nfunction getState(params) {\r\n\r\n    const {\r\n        factor,\r\n        revX,\r\n        revY\r\n    } = params;\r\n\r\n    const {\r\n        el,\r\n        storage\r\n    } = this;\r\n\r\n    const {\r\n        handles,\r\n        controls,\r\n        parent\r\n    } = storage;\r\n\r\n    const tl_off = getOffset(handles.tl[0]),\r\n        tr_off = getOffset(handles.tr[0]);\r\n\r\n    const refang = Math.atan2(\r\n        tr_off.top - tl_off.top, \r\n        tr_off.left - tl_off.left\r\n    ) * factor;\r\n\r\n    const cw = parseFloat(\r\n        toPX(controls.style.width, parent.css('width'))\r\n    );\r\n    const ch = parseFloat(\r\n        toPX(controls.style.height, parent.css('height'))\r\n    );\r\n\r\n    const offset_ = getOffset(controls);\r\n\r\n    const center_x = offset_.left + cw / 2,\r\n        center_y = offset_.top + ch / 2;\r\n\r\n    const _el = Helper(el);\r\n    const styleList = el.style;\r\n\r\n    const dimens = {\r\n        top: getUnitDimension(styleList.top || _el.css('top')),\r\n        left: getUnitDimension(styleList.left || _el.css('left')),\r\n        width: getUnitDimension(styleList.width || _el.css('width')),\r\n        height: getUnitDimension(styleList.height || _el.css('height'))\r\n    };\r\n\r\n    const transform = {\r\n        matrix: parseMatrix(\r\n            getTransform(Helper(controls))\r\n        ),\r\n        parentMatrix: parseMatrix(\r\n            getTransform(parent)\r\n        )\r\n    };\r\n\r\n    const ctm = [...transform.matrix];\r\n    ctm[4] = 0;\r\n    ctm[5] = 0;\r\n\r\n    //getting current coordinates considering rotation angle                                                                                                  \r\n    const coords = rotatedTopLeft(\r\n        transform.matrix[4],\r\n        transform.matrix[5],\r\n        cw,\r\n        ch,\r\n        refang,\r\n        revX,\r\n        revY\r\n    );\r\n\r\n    return {\r\n        transform,\r\n        cw,\r\n        ch,\r\n        coords,\r\n        center: {\r\n            x: center_x,\r\n            y: center_y\r\n        },\r\n        factor,\r\n        refang,\r\n        revX,\r\n        revY,\r\n        dimens\r\n    }\r\n}\r\n\r\nfunction processResize(\r\n   dx,\r\n   dy\r\n) {\r\n    const {\r\n        el,\r\n        storage\r\n    } = this;\r\n\r\n    const {\r\n        controls,\r\n        coords,\r\n        cw,\r\n        ch,\r\n        dimens,\r\n        parent,\r\n        transform,\r\n        refang,\r\n        revX,\r\n        revY\r\n    } = storage;\r\n\r\n    const { style } = controls;\r\n\r\n    const newWidth = cw + dx,\r\n        newHeight = ch + dy;\r\n\r\n    if (newWidth < MIN_SIZE || newHeight < MIN_SIZE) return;\r\n\r\n    style.width = `${newWidth}px`;\r\n    style.height = `${newHeight}px`;\r\n\r\n    const matrix = [...transform.matrix];\r\n                                                                                                \r\n    const newCoords = rotatedTopLeft(\r\n        matrix[4],\r\n        matrix[5],\r\n        newWidth,\r\n        newHeight,\r\n        refang,\r\n        revX,\r\n        revY\r\n    );\r\n\r\n    matrix[4] -= (newCoords.left - coords.left);\r\n    matrix[5] -= (newCoords.top - coords.top);\r\n    \r\n    const css = matrixToCSS(matrix);\r\n\r\n    Helper(controls).css(css);\r\n\r\n    css.width = fromPX(\r\n        style.width, \r\n        parent.css('width'), \r\n        dimens.width\r\n    );\r\n\r\n    css.height = fromPX(\r\n        style.height, \r\n        parent.css('height'), \r\n        dimens.height\r\n    );\r\n\r\n    Helper(el).css(css);\r\n    storage.cached = matrix;\r\n}\r\n\r\nfunction processMove(\r\n    dx,\r\n    dy\r\n) {\r\n    const {\r\n        el,\r\n        storage\r\n    } = this;\r\n\r\n    const {\r\n        controls,\r\n        transform\r\n    } = storage;\r\n\r\n    const {\r\n        matrix,\r\n        parentMatrix\r\n    } = transform;\r\n\r\n    const pctm = [...parentMatrix];\r\n    pctm[4] = pctm[5] = 0;\r\n\r\n    const { x, y } = multiplyMatrixAndPoint(\r\n        {\r\n            x: dx,\r\n            y: dy\r\n        },\r\n        matrixInvert(pctm)\r\n    );\r\n\r\n    const n_matrix = [...matrix]; \r\n\r\n    n_matrix[4] = matrix[4] + dx;\r\n    n_matrix[5] = matrix[5] + dy;\r\n        \r\n    const css = matrixToCSS(n_matrix);\r\n\r\n    Helper(controls).css(css);\r\n    Helper(el).css(css);\r\n\r\n    storage.cached = n_matrix;\r\n}\r\n\r\nfunction processRotate(radians) {\r\n\r\n    const {\r\n        el,\r\n        storage\r\n    } = this;\r\n\r\n    const {\r\n        controls,\r\n        transform\r\n    } = storage;\r\n\r\n    const {\r\n        matrix\r\n    } = transform;\r\n\r\n    const cos = floatToFixed(Math.cos(radians)),\r\n        sin = floatToFixed(Math.sin(radians));\r\n\r\n    const rotMatrix = [\r\n        cos,\r\n        sin,\r\n        -sin,\r\n        cos,\r\n        0,\r\n        0\r\n    ];\r\n\r\n    const resMatrix = multiplyMatrix(rotMatrix, matrix);\r\n    const css = matrixToCSS(resMatrix);\r\n\r\n    Helper(controls).css(css);\r\n    Helper(el).css(css);\r\n\r\n    storage.cached = resMatrix;\r\n}\r\n\r\nfunction matrixToCSS(arr) {\r\n\r\n    const style = `matrix(${arr.join()})`;\r\n\r\n    return {\r\n        transform: style,\r\n        webkitTranform: style,\r\n        mozTransform: style,\r\n        msTransform: style,\r\n        otransform: style                     \r\n    }\r\n}\r\n\r\nfunction multiplyMatrixAndPoint(point, matrix) {\r\n\r\n    const {\r\n        x, y\r\n    } = point;\r\n\r\n    const [ a, b, c, d, e, f ] = matrix;\r\n\r\n    return {\r\n        x: a * x + c * y + e,\r\n        y: b * x + d * y + f\r\n    };\r\n}\r\n\r\n//http://blog.acipo.com/matrix-inversion-in-javascript/\r\nfunction matrixInvert(ctm) {\r\n    // I use Guassian Elimination to calculate the inverse:\r\n    // (1) 'augment' the matrix (left) by the identity (on the right)\r\n    // (2) Turn the matrix on the left into the identity by elemetry row ops\r\n    // (3) The matrix on the right is the inverse (was the identity matrix)\r\n    // There are 3 elemtary row ops: (I combine b and c in my code)\r\n    // (a) Swap 2 rows\r\n    // (b) Multiply a row by a scalar\r\n    // (c) Add 2 rows\r\n\r\n    const M = [\r\n        [ctm[0], ctm[2], ctm[4]],\r\n        [ctm[1], ctm[3], ctm[5]],\r\n        [0, 0, 1]\r\n    ];\r\n\r\n    //if the matrix isn't square: exit (error)\r\n    if (M.length !== M[0].length) {\r\n        return;\r\n    }\r\n\r\n    //create the identity matrix (I), and a copy (C) of the original\r\n    const dim = M.length;\r\n\r\n    const I = [],\r\n        C = [];\r\n\r\n    for (let i = 0; i < dim; i += 1) {\r\n        // Create the row\r\n        I[I.length] = [];\r\n        C[C.length] = [];\r\n        for (let j = 0; j < dim; j += 1) {\r\n\r\n            //if we're on the diagonal, put a 1 (for identity)\r\n            if (i == j) {\r\n                I[i][j] = 1;\r\n            } else {\r\n                I[i][j] = 0;\r\n            }\r\n\r\n            // Also, make the copy of the original\r\n            C[i][j] = M[i][j];\r\n        }\r\n    }\r\n\r\n    // Perform elementary row operations\r\n    for (let i = 0; i < dim; i += 1) {\r\n        // get the element e on the diagonal\r\n        let e = C[i][i];\r\n\r\n        // if we have a 0 on the diagonal (we'll need to swap with a lower row)\r\n        if (e === 0) {\r\n            //look through every row below the i'th row\r\n            for (let ii = i + 1; ii < dim; ii += 1) {\r\n                //if the ii'th row has a non-0 in the i'th col\r\n                if (C[ii][i] !== 0) {\r\n                    //it would make the diagonal have a non-0 so swap it\r\n                    for (let j = 0; j < dim; j++) {\r\n                        e = C[i][j]; //temp store i'th row\r\n                        C[i][j] = C[ii][j]; //replace i'th row by ii'th\r\n                        C[ii][j] = e; //repace ii'th by temp\r\n                        e = I[i][j]; //temp store i'th row\r\n                        I[i][j] = I[ii][j]; //replace i'th row by ii'th\r\n                        I[ii][j] = e; //repace ii'th by temp\r\n                    }\r\n                    //don't bother checking other rows since we've swapped\r\n                    break;\r\n                }\r\n            }\r\n            //get the new diagonal\r\n            e = C[i][i];\r\n            //if it's still 0, not invertable (error)\r\n            if (e === 0) {\r\n                return\r\n            }\r\n        }\r\n\r\n        // Scale this row down by e (so we have a 1 on the diagonal)\r\n        for (let j = 0; j < dim; j++) {\r\n            C[i][j] = C[i][j] / e; //apply to original matrix\r\n            I[i][j] = I[i][j] / e; //apply to identity\r\n        }\r\n\r\n        // Subtract this row (scaled appropriately for each row) from ALL of\r\n        // the other rows so that there will be 0's in this column in the\r\n        // rows above and below this one\r\n        for (let ii = 0; ii < dim; ii++) {\r\n            // Only apply to other rows (we want a 1 on the diagonal)\r\n            if (ii == i) {\r\n                continue;\r\n            }\r\n\r\n            // We want to change this element to 0\r\n            e = C[ii][i];\r\n\r\n            // Subtract (the row above(or below) scaled by e) from (the\r\n            // current row) but start at the i'th column and assume all the\r\n            // stuff left of diagonal is 0 (which it should be if we made this\r\n            // algorithm correctly)\r\n            for (let j = 0; j < dim; j++) {\r\n                C[ii][j] -= e * C[i][j]; //apply to original matrix\r\n                I[ii][j] -= e * I[i][j]; //apply to identity\r\n            }\r\n        }\r\n    }\r\n\r\n    //we've done all operations, C should be the identity\r\n    //matrix I should be the inverse:\r\n    return [\r\n        I[0][0], I[1][0],\r\n        I[0][1], I[1][1],\r\n        I[0][2], I[1][2]\r\n    ];\r\n}\r\n\r\nfunction multiplyMatrix(mtrx1, mtrx2) {\r\n\r\n    const m1 =  [\r\n        [mtrx1[0], mtrx1[2], mtrx1[4]],\r\n        [mtrx1[1], mtrx1[3], mtrx1[5]],\r\n        [0, 0, 1]\r\n    ];\r\n\r\n    const m2 =  [\r\n        [mtrx2[0], mtrx2[2], mtrx2[4]],\r\n        [mtrx2[1], mtrx2[3], mtrx2[5]],\r\n        [0, 0, 1]\r\n    ];\r\n\r\n    const result = [];\r\n\r\n    for(let j = 0; j < m2.length; j++) {\r\n        result[j] = [];\r\n        for(let k = 0; k < m1[0].length; k++) {\r\n            let sum = 0;\r\n            for(let i = 0; i < m1.length; i++) {\r\n                sum += m1[i][k] * m2[j][i];\r\n            }\r\n            result[j].push(sum);\r\n        }\r\n    }\r\n\r\n    return [\r\n        result[0][0], result[1][0], \r\n        result[0][1], result[1][1], \r\n        result[0][2], result[1][2]\r\n    ];\r\n}","import { warn } from './../../util/util'\r\n\r\nexport const ALLOWED_ELEMENTS = [\r\n    'circle', 'ellipse', \r\n    'image', 'line', \r\n    'path', 'polygon',\r\n    'polyline', 'rect',\r\n    'text', 'g'\r\n];\r\n\r\nexport function createSVGElement(name) {\r\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\r\n}\r\n\r\nexport function createSVGMatrix() {\r\n    return createSVGElement('svg').createSVGMatrix();\r\n}\r\n\r\nexport function getTransformToElement(toElement, g) {\r\n    const gTransform = g.getScreenCTM() || createSVGMatrix();\r\n    return gTransform.inverse().multiply(\r\n        toElement.getScreenCTM() || createSVGMatrix()\r\n    );\r\n}\r\n\r\nexport function matrixToString(m) {\r\n    return `matrix(${m.a},${m.b},${m.c},${m.d},${m.e},${m.f})`;\r\n}\r\n\r\nexport function pointTo(ctm, svg, x, y) {\r\n    const pt = svg.createSVGPoint();\r\n    pt.x = x;\r\n    pt.y = y;\r\n    return pt.matrixTransform(ctm);\r\n}\r\n\r\nexport function cloneMatrix(b) {\r\n\r\n    const a = createSVGMatrix();\r\n\r\n    a.a = b.a;\r\n    a.b = b.b;\r\n    a.c = b.c;\r\n    a.d = b.d;\r\n    a.e = b.e;\r\n    a.f = b.f;\r\n    \r\n    return a;\r\n}\r\n\r\nexport function checkElement(sel) {\r\n\r\n    const tagName = sel.tagName.toLowerCase();\r\n\r\n    if (ALLOWED_ELEMENTS.indexOf(tagName) === -1) {\r\n        warn(\r\n            'Selected element is not allowed to transform. Allowed elements:\\n' +\r\n            'circle, ellipse, image, line, path, polygon, polyline, rect, text, g'\r\n        );\r\n        return false;\r\n    } else {\r\n        return true;\r\n    }\r\n}","import { \r\n    warn \r\n} from './../../util/util'\r\n\r\nimport {\r\n    pointTo,\r\n    cloneMatrix\r\n} from './util'\r\n\r\nconst dRE = /\\s*([achlmqstvz])([^achlmqstvz]*)\\s*/gi;\r\nconst sepRE = /\\s*,\\s*|\\s+/g;\r\n\r\nfunction parsePath(path)  {\r\n\r\n    let match = dRE.lastIndex = 0;\r\n\r\n    const serialized = [];\r\n\r\n    while ((match = dRE.exec(path))) {\r\n\r\n        const cmd = match[1];\r\n        const upCmd = cmd.toUpperCase();\r\n\r\n        // normalize the data\r\n\t\tconst data = match[2]\r\n                        .replace(/[^e\\s+]-/g, ' -')\r\n                        .replace(/ +/g, ' ');\r\n\r\n        serialized.push({\r\n            relative: cmd !== upCmd,\r\n            key: upCmd,\r\n            cmd: cmd,\r\n            value: data.trim().split(sepRE).map(val => { \r\n                if (!isNaN(val)) {\r\n                    return Number(val);\r\n                }\r\n            })\r\n        });\r\n    }\r\n\r\n    return serialized;\r\n}\r\n\r\nexport function movePath(params) {\r\n\r\n    const { \r\n        path, \r\n        dx, \r\n        dy \r\n    } = params;\r\n\r\n    try {\r\n\r\n        const serialized = parsePath(path);\r\n\r\n        let str = '';\r\n\r\n        let firstCommand = true;\r\n\r\n        for (let i = 0, len = serialized.length; i < len; i++) {\r\n\r\n            const item = serialized[i];\r\n\r\n            const { \r\n                value: values,\r\n                key: cmd,\r\n                relative\r\n            } = item;\r\n\r\n            const coordinates = [];\r\n\r\n            switch (cmd) {\r\n\r\n                case 'M': {\r\n\r\n                    for (let k = 0, len = values.length; k < len; k += 2) {\r\n\r\n                        const [ x, y ] = values.slice(k, k + 2);\r\n                    \r\n                        if (!(relative && !firstCommand)) {\r\n                            x += dx;\r\n                            y += dy;    \r\n                        }\r\n\r\n                        coordinates.push(\r\n                            x,\r\n                            y\r\n                        );\r\n\r\n                        firstCommand = false;\r\n                    }\r\n                    break;\r\n                }\r\n                case 'A': {\r\n\r\n                    for (let k = 0, len = values.length; k < len; k += 7) {\r\n\r\n                        const set = values.slice(k, k + 7);\r\n\r\n                        if (!relative) {\r\n                            set[5] = set[5] + dx;\r\n                            set[6] = set[6] + dy;\r\n                        }\r\n\r\n                        coordinates.push(...set);\r\n                    }\r\n                    break;\r\n                }\r\n                case 'C': {\r\n\r\n                    for (let k = 0, len = values.length; k < len; k += 6) {\r\n\r\n                        const set = values.slice(k, k + 6);\r\n\r\n                        if (!relative) {\r\n                            set[0] = set[0] + dx;\r\n                            set[1] = set[1] + dy;\r\n                            set[2] = set[2] + dx;\r\n                            set[3] = set[3] + dy;\r\n                            set[4] = set[4] + dx;\r\n                            set[5] = set[5] + dy;\r\n                        }\r\n\r\n                        coordinates.push(...set);\r\n                    }\r\n                    break;\r\n                }\r\n                case 'H': {\r\n\r\n                    for (let k = 0, len = values.length; k < len; k += 1) {\r\n\r\n                        const set = values.slice(k, k + 1);\r\n\r\n                        if (!relative) {\r\n                            set[0] += dx;\r\n                        }\r\n\r\n                        coordinates.push(set[0]);\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'V': {\r\n\r\n                    for (let k = 0, len = values.length; k < len; k += 1) {\r\n\r\n                        const set = values.slice(k, k + 1);\r\n\r\n                        if (!relative) {\r\n                            set[0] += dy;\r\n                        }\r\n                        coordinates.push(set[0]);\r\n                    }\r\n\r\n                    break;\r\n                }\r\n                case 'L':\r\n                case 'T': {\r\n\r\n                    for (let k = 0, len = values.length; k < len; k += 2) {\r\n\r\n                        const [ x, y ] = values.slice(k, k + 2);\r\n\r\n                        if (!relative) {\r\n                            x += dx;\r\n                            y += dy;\r\n                        }\r\n\r\n                        coordinates.push(\r\n                            x,\r\n                            y\r\n                        );\r\n                    }\r\n                    break;\r\n                }\r\n                \r\n                case 'Q':\r\n                case 'S': {\r\n\r\n                    for (let k = 0, len = values.length; k < len; k += 4) {\r\n\r\n                        const [ x1, y1, x2, y2 ] = values.slice(k, k + 4);\r\n\r\n                        if (!relative) {\r\n                            x1 += dx;\r\n                            y1 += dy;\r\n                            x2 += dx;\r\n                            y2 += dy;\r\n                        }\r\n\r\n                        coordinates.push(\r\n                            x1,\r\n                            y1,\r\n                            x2,\r\n                            y2\r\n                        );\r\n                    }\r\n                    break;\r\n                }\r\n                case 'Z':\r\n                    values[0] = '';\r\n                    break;\r\n            }\r\n\r\n            str += item.cmd + coordinates.join(',') + ' ';\r\n        }\r\n\r\n        return str;\r\n\r\n    } catch(err) {\r\n        warn('Path parsing error: ' + err);\r\n    } \r\n}\r\n\r\nexport function resizePath(params) {\r\n\r\n    const {\r\n        path,\r\n        localCTM,\r\n        container\r\n    } = params;\r\n\r\n    try {\r\n\r\n        const serialized = parsePath(path);\r\n\r\n        let str = '';\r\n        const res = [];\r\n    \r\n        let firstCommand = true;\r\n    \r\n        for (let i = 0, len = serialized.length; i < len; i++) {\r\n    \r\n            const item = serialized[i];\r\n    \r\n            const { \r\n                value: values,\r\n                key: cmd,\r\n                relative\r\n            } = item;\r\n                \r\n            switch (cmd) {\r\n    \r\n                case 'A': {\r\n    \r\n                    //A rx ry x-axis-rotation large-arc-flag sweep-flag x y\r\n                    const coordinates = [];\r\n                    \r\n                    for (let k = 0, len = values.length; k < len; k += 7) {\r\n    \r\n                        const [ rx, ry, x_axis_rot, large_arc_flag, sweep_flag, x, y ] = \r\n                            values.slice(k, k + 7);\r\n    \r\n                        const mtrx = cloneMatrix(localCTM);\r\n    \r\n                        if (relative) { \r\n                            mtrx.e = mtrx.f = 0;\r\n                        }\r\n    \r\n                        const {\r\n                            x: resX,\r\n                            y: resY\r\n                        } = pointTo(\r\n                            mtrx,\r\n                            container, \r\n                            x,\r\n                            y\r\n                        );\r\n    \r\n                        coordinates.push(\r\n                            resX,\r\n                            resY\r\n                        );\r\n    \r\n                        mtrx.e = mtrx.f = 0;\r\n    \r\n                        const {\r\n                            x: newRx,\r\n                            y: newRy\r\n                        } = pointTo(\r\n                            mtrx,\r\n                            container, \r\n                            rx,\r\n                            ry\r\n                        );\r\n    \r\n                        coordinates.unshift(\r\n                            newRx,\r\n                            newRy,\r\n                            x_axis_rot,\r\n                            large_arc_flag,\r\n                            sweep_flag\r\n                        );\r\n                    }\r\n    \r\n                    res.push(coordinates);\r\n                    break;\r\n                }\r\n    \r\n                case 'C': {\r\n    \r\n                    //C x1 y1, x2 y2, x y (or c dx1 dy1, dx2 dy2, dx dy)\r\n                    const coordinates = [];\r\n    \r\n                    for (let k = 0, len = values.length; k < len; k += 6) {\r\n    \r\n                        const [ x1, y1, x2, y2, x, y ] = values.slice(k, k + 6);\r\n    \r\n                        const mtrx = cloneMatrix(localCTM);\r\n    \r\n                        if (relative) { \r\n                            mtrx.e = mtrx.f = 0;\r\n                        }\r\n    \r\n                        const {\r\n                            x: resX1,\r\n                            y: resY1\r\n                        } = pointTo(\r\n                            mtrx,\r\n                            container, \r\n                            x1,\r\n                            y1\r\n                        );\r\n    \r\n                        const {\r\n                            x: resX2,\r\n                            y: resY2\r\n                        } = pointTo(\r\n                            mtrx,\r\n                            container, \r\n                            x2,\r\n                            y2\r\n                        );\r\n    \r\n                        const {\r\n                            x: resX,\r\n                            y: resY\r\n                        } = pointTo(\r\n                            mtrx,\r\n                            container, \r\n                            x,\r\n                            y\r\n                        );\r\n    \r\n                        coordinates.push(\r\n                            resX1,\r\n                            resY1,\r\n                            resX2,\r\n                            resY2,\r\n                            resX,\r\n                            resY\r\n                        );\r\n                    }\r\n    \r\n                    res.push(coordinates);\r\n                    break;\r\n                }\r\n    \r\n                case 'H': {\r\n    \r\n                    const coordinates = [];\r\n    \r\n                    for (let k = 0, len = values.length; k < len; k += 1) {\r\n    \r\n                        const [ x ] = values.slice(k, k + 1);\r\n    \r\n                        const mtrx = cloneMatrix(localCTM);\r\n    \r\n                        if (relative) { \r\n                            mtrx.e = mtrx.f = 0;\r\n                        }\r\n    \r\n                        const { \r\n                            x: resX\r\n                        } = pointTo(\r\n                            mtrx,\r\n                            container, \r\n                            x,\r\n                            0\r\n                        );\r\n    \r\n                        coordinates.push(\r\n                            resX\r\n                        );\r\n                    }\r\n                    \r\n                    res.push(coordinates);\r\n                    break;\r\n                }\r\n    \r\n                case 'V': {\r\n    \r\n                    const coordinates = [];\r\n    \r\n                    for (let k = 0, len = values.length; k < len; k += 1) {\r\n    \r\n                        const [ y ] = values.slice(k, k + 1);\r\n    \r\n                        const mtrx = cloneMatrix(localCTM);\r\n    \r\n                        if (relative) { \r\n                            mtrx.e = mtrx.f = 0;\r\n                        }\r\n    \r\n                        const { \r\n                            y: resY\r\n                        } = pointTo(\r\n                            mtrx,\r\n                            container, \r\n                            0,\r\n                            y\r\n                        );\r\n    \r\n                        coordinates.push(\r\n                            resY\r\n                        );\r\n                    }\r\n    \r\n                    res.push(coordinates);\r\n                    break;\r\n                }\r\n    \r\n                case 'T':\r\n                case 'L': {\r\n    \r\n                    const coordinates = [];\r\n    \r\n                    for (let k = 0, len = values.length; k < len; k += 2) {\r\n    \r\n                        const [ x, y ] = values.slice(k, k + 2);\r\n    \r\n                        const mtrx = cloneMatrix(localCTM);\r\n    \r\n                        if (relative) { \r\n                            mtrx.e = mtrx.f = 0;\r\n                        }\r\n    \r\n                        const { \r\n                            x: resX,\r\n                            y: resY\r\n                        } = pointTo(\r\n                            mtrx,\r\n                            container, \r\n                            x,\r\n                            y\r\n                        );\r\n    \r\n                        coordinates.push(\r\n                            resX, \r\n                            resY\r\n                        );\r\n                    }\r\n    \r\n                    res.push(coordinates);\r\n                    break;\r\n                }\r\n    \r\n                case 'M': {\r\n    \r\n                    // M x y (or dx dy)\r\n                    const coordinates = [];\r\n    \r\n                    for (let k = 0, len = values.length; k < len; k += 2) {\r\n    \r\n                        const [ x, y ] = values.slice(k, k + 2);\r\n    \r\n                        const mtrx = cloneMatrix(localCTM);\r\n    \r\n                        if (relative && !firstCommand) {\r\n                            mtrx.e = mtrx.f = 0;\r\n                        }\r\n    \r\n                        const { \r\n                            x: resX,\r\n                            y: resY\r\n                        } = pointTo(\r\n                            mtrx,\r\n                            container, \r\n                            x,\r\n                            y\r\n                        );\r\n    \r\n                        coordinates.push(\r\n                            resX, \r\n                            resY\r\n                        );\r\n    \r\n                        firstCommand = false;\r\n                    }\r\n    \r\n                    res.push(coordinates);\r\n                    break;\r\n                }\r\n    \r\n                case 'Q': {\r\n    \r\n                    //Q x1 y1, x y (or q dx1 dy1, dx dy)\r\n                    const coordinates = [];\r\n    \r\n                    for (let k = 0, len = values.length; k < len; k += 4) {\r\n    \r\n                        const [ x1, y1, x, y ] = values.slice(k, k + 4);\r\n    \r\n                        const mtrx = cloneMatrix(localCTM);\r\n    \r\n                        if (relative) { \r\n                            mtrx.e = mtrx.f = 0;\r\n                        }\r\n    \r\n                        const { \r\n                            x: resX1,\r\n                            y: resY1\r\n                        } = pointTo(\r\n                            mtrx,\r\n                            container, \r\n                            x1,\r\n                            y1\r\n                        );\r\n    \r\n                        const { \r\n                            x: resX,\r\n                            y: resY\r\n                        } = pointTo(\r\n                            mtrx,\r\n                            container, \r\n                            x,\r\n                            y\r\n                        );\r\n    \r\n                        coordinates.push(\r\n                            resX1, \r\n                            resY1,\r\n                            resX, \r\n                            resY\r\n                        );\r\n                    }\r\n    \r\n                    res.push(coordinates);     \r\n                    break;\r\n                }\r\n    \r\n                case 'S': {\r\n    \r\n                    //S x2 y2, x y (or s dx2 dy2, dx dy)\r\n                    const coordinates = [];\r\n    \r\n                    for (let k = 0, len = values.length; k < len; k += 4) {\r\n    \r\n                        const [ x2, y2, x, y ] = values.slice(k, k + 4);\r\n    \r\n                        const mtrx = cloneMatrix(localCTM);\r\n    \r\n                        if (relative) { \r\n                            mtrx.e = mtrx.f = 0;\r\n                        }\r\n    \r\n                        const { \r\n                            x: resX2,\r\n                            y: resY2\r\n                        } = pointTo(\r\n                            mtrx,\r\n                            container, \r\n                            x2,\r\n                            y2\r\n                        );\r\n    \r\n                        const { \r\n                            x: resX,\r\n                            y: resY\r\n                        } = pointTo(\r\n                            localCTM,\r\n                            container, \r\n                            x,\r\n                            y\r\n                        );\r\n    \r\n                        coordinates.push(\r\n                            resX2, \r\n                            resY2,\r\n                            resX, \r\n                            resY\r\n                        );\r\n                    }\r\n    \r\n                    res.push(coordinates);\r\n                    break;\r\n                }\r\n    \r\n                case 'Z': {\r\n                    res.push(['']);\r\n                    break;\r\n                }\r\n            }\r\n    \r\n            str += item.cmd + res[i].join(',') + ' ';\r\n        }\r\n    \r\n        return str;\r\n\r\n    } catch(err) {\r\n        warn('Path parsing error: ' + err);\r\n    }\r\n}","import { Helper } from '../../helper'\r\nimport Subject from '../subject'\r\n\r\nimport { \r\n    isUndef\r\n} from '../../util/util'\r\n\r\nimport {\r\n    floatToFixed\r\n} from '../common'\r\n\r\nimport {\r\n    movePath,\r\n    resizePath\r\n} from './path'\r\n\r\nimport {\r\n    ALLOWED_ELEMENTS,\r\n    createSVGElement,\r\n    createSVGMatrix,\r\n    getTransformToElement,\r\n    matrixToString,\r\n    pointTo\r\n} from './util'\r\n\r\nconst MIN_SIZE = 2;\r\nconst ROT_OFFSET = 50;\r\nconst floatRE = /[+-]?\\d+(\\.\\d+)?/g;\r\n\r\nexport default class DraggableSVG extends Subject {\r\n\r\n    constructor(el, options, Observable) {\r\n        super(el, Observable);\r\n        this.enable(options);\r\n    }\r\n\r\n    _init(item) {\r\n        _init.call(this, item);\r\n    }\r\n\r\n    _destroy(item) {\r\n        _destroy.call(this, item);\r\n    }\r\n\r\n    _drag() {\r\n        processMove.call(this, ...arguments);\r\n    }\r\n\r\n    _rotate() {\r\n        processRotate.call(this, ...arguments);\r\n    }\r\n\r\n    _resize() {\r\n        processResize.call(this, ...arguments);\r\n    }\r\n\r\n    _compute() {\r\n        return _compute.call(this, ...arguments);\r\n    }\r\n\r\n    _cursorPoint(e) {\r\n\r\n        const { \r\n            container\r\n        } = this.storage;\r\n\r\n        return pointTo(\r\n            container.getScreenCTM().inverse(), \r\n            container, \r\n            e.clientX, \r\n            e.clientY\r\n        );\r\n    }\r\n\r\n    _pointToElement(data) {\r\n\r\n        const {\r\n            transform,\r\n            container\r\n        } = this.storage;\r\n\r\n        const { \r\n            x, \r\n            y \r\n        } = data;\r\n\r\n        const { ctm } = transform;\r\n        const matrix = ctm.inverse();\r\n\r\n        const pt = container.createSVGPoint();\r\n        pt.x = x;\r\n        pt.y = y;\r\n        matrix.e = matrix.f = 0;\r\n\r\n        return pt.matrixTransform(matrix);\r\n    }\r\n\r\n    _apply(actionName) {\r\n\r\n        const { \r\n            el: element,\r\n            storage\r\n        } = this;\r\n\r\n        const {\r\n            container,\r\n            box,\r\n            handles,\r\n            normalLine,\r\n            cached,\r\n            transform\r\n        } = storage;\r\n\r\n        if (isUndef(cached)) return;\r\n\r\n        const {\r\n            scaleX,\r\n            scaleY,\r\n            dx,\r\n            dy,\r\n            ox,\r\n            oy\r\n        } = cached;\r\n\r\n        const {\r\n            matrix\r\n        } = transform;\r\n\r\n        if (actionName === 'drag') {\r\n        \r\n            if (dx === 0 && dy === 0) return;\r\n\r\n            // create translate matrix for an element\r\n            const eM = createSVGMatrix();\r\n\r\n            eM.e = dx;\r\n            eM.f = dy;\r\n\r\n            const translateMatrix = eM.multiply(matrix)\r\n                                        .multiply(eM.inverse());\r\n\r\n            element.setAttribute(\r\n                'transform', \r\n                matrixToString(translateMatrix)\r\n            );\r\n\r\n            if (isGroup(element)) {\r\n\r\n                const els = checkChildElements(element);\r\n\r\n                els.forEach(child => {\r\n\r\n                    const pt = container.createSVGPoint();\r\n                    const ctm = getTransformToElement(element.parentNode, container).inverse();\r\n                    pt.x = ox;\r\n                    pt.y = oy;\r\n                    ctm.e = ctm.f = 0;\r\n                    const newPT = pt.matrixTransform(ctm);\r\n\r\n                    // create translate matrix for an element\r\n                    const eM = createSVGMatrix();\r\n\r\n                    eM.e = dx;\r\n                    eM.f = dy;\r\n\r\n                    const translateMatrix = eM.multiply(\r\n                        getTransformToElement(child, child.parentNode)\r\n                    ).multiply(eM.inverse());\r\n\r\n                    child.setAttribute(\r\n                        'transform', \r\n                        matrixToString(translateMatrix)\r\n                    );   \r\n                    \r\n                    if (!isGroup(child)) {\r\n                        applyTranslate(child, {\r\n                            x: newPT.x,\r\n                            y: newPT.y\r\n                        });\r\n                    }\r\n                });\r\n\r\n            } else {\r\n                applyTranslate(element, {\r\n                    x: dx,\r\n                    y: dy\r\n                });\r\n            } \r\n        }\r\n\r\n        if (actionName === 'resize') {\r\n\r\n            const { \r\n                x, \r\n                y,\r\n                width: newWidth,\r\n                height: newHeight\r\n            } = box.getBBox();\r\n\r\n            applyTransformToHandles(\r\n                box, \r\n                handles, \r\n                normalLine, \r\n                {\r\n                    x,\r\n                    y,\r\n                    width: newWidth,\r\n                    height: newHeight\r\n                }, \r\n                container\r\n            );\r\n                \r\n            if (isGroup(element)) {\r\n\r\n                const els = checkChildElements(element);\r\n\r\n                els.forEach(child => {\r\n\r\n                    if (!isGroup(child)) {\r\n\r\n                        applyResize(child, {\r\n                            scaleX,\r\n                            scaleY,\r\n                            defaultCTM: child.__ctm__,\r\n                            bBox: transform.bBox,\r\n                            container,\r\n                            storage\r\n                        });\r\n                    }\r\n                });\r\n\r\n            } else {\r\n\r\n                applyResize(element, {\r\n                    scaleX,\r\n                    scaleY,\r\n                    defaultCTM: transform.ctm,\r\n                    bBox: transform.bBox,\r\n                    container,\r\n                    storage\r\n                });\r\n            }\r\n\r\n            element.setAttribute(\r\n                'transform',\r\n                matrixToString(matrix)\r\n            );\r\n        }\r\n        this.storage.cached = null;\r\n    }\r\n\r\n    onGetState(data) {\r\n\r\n        const store = this.storage;\r\n\r\n        const recalc = getState.call(\r\n            this,\r\n            data\r\n        );\r\n\r\n        Object.keys(recalc).forEach(key => {\r\n            store[key] = recalc[key];\r\n        });\r\n    }\r\n}\r\n\r\nfunction _init(sel) {\r\n\r\n    const { storage } = this;\r\n\r\n    const {\r\n        showHandles,\r\n        container\r\n    } = storage;\r\n\r\n    const wrapper = createSVGElement('g');\r\n    container.appendChild(wrapper);\r\n\r\n    const {\r\n        width: cw,\r\n        height: ch,\r\n        x: cx,\r\n        y: cy\r\n    } = sel.getBBox();\r\n\r\n    const elCTM = getTransformToElement(sel, container);\r\n    const box = createSVGElement('rect');\r\n\r\n    const attrs = [\r\n        ['width', cw],\r\n        ['height', ch],\r\n        ['x', cx],\r\n        ['y', cy],\r\n        ['fill', 'rgba(0, 168, 255, 0.2)'],\r\n        ['stroke', '#00a8ff'],\r\n        ['stroke-dasharray', '3 3'],\r\n        ['vector-effect', 'non-scaling-stroke'],\r\n        ['transform', matrixToString(elCTM)]\r\n    ];\r\n\r\n    attrs.forEach(item => {\r\n        box.setAttribute(item[0], item[1]);\r\n    });\r\n\r\n    const handlesGroup = createSVGElement('g'),\r\n        normalLineGroup = createSVGElement('g'),\r\n        group = createSVGElement('g');\r\n\r\n    group.appendChild(box);\r\n    wrapper.appendChild(group);\r\n    wrapper.appendChild(normalLineGroup);\r\n    wrapper.appendChild(handlesGroup);\r\n\r\n    const { \r\n        x: bX,\r\n        y: bY,\r\n        width: bW,\r\n        height: bH\r\n    } = box.getBBox();\r\n\r\n    const boxCTM = getTransformToElement(box, box.parentNode);\r\n\r\n    const handles = {\r\n        tl: pointTo(boxCTM, container, bX, bY),\r\n        tr: pointTo(boxCTM, container, bX + bW, bY),\r\n        br: pointTo(boxCTM, container, bX + bW, bY + bH),\r\n        bl: pointTo(boxCTM, container, bX, bY + bH),\r\n        tc: pointTo(boxCTM, container, bX + bW / 2, bY),\r\n        bc: pointTo(boxCTM, container, bX + bW / 2, bY + bH),\r\n        ml: pointTo(boxCTM, container, bX, bY + bH / 2),\r\n        mr: pointTo(boxCTM, container, bX + bW, bY + bH / 2),\r\n        //center: pointTo(boxCTM, container, bX + bW / 2, bY + bH / 2),\r\n        rotator: {}\r\n    };\r\n\r\n    const theta = Math.atan2(\r\n        handles.tl.y - handles.tr.y,\r\n        handles.tl.x - handles.tr.x\r\n    );\r\n\r\n    handles.rotator.x = handles.mr.x - ROT_OFFSET * Math.cos(theta);\r\n    handles.rotator.y = handles.mr.y - ROT_OFFSET * Math.sin(theta);\r\n\r\n    const normalLine = createSVGElement('line');\r\n\r\n    if (showHandles) {\r\n        \r\n        normalLine.x1.baseVal.value = handles.mr.x;\r\n        normalLine.y1.baseVal.value = handles.mr.y;\r\n        normalLine.x2.baseVal.value = handles.rotator.x;\r\n        normalLine.y2.baseVal.value = handles.rotator.y;\r\n\r\n        normalLine.setAttribute('stroke', '#00a8ff');\r\n        normalLine.setAttribute('stroke-dasharray', '3 3');\r\n        normalLine.setAttribute('vector-effect', 'non-scaling-stroke');\r\n\r\n        normalLineGroup.appendChild(normalLine);\r\n    }\r\n\r\n    Object.keys(handles).forEach(key => {\r\n        const data = handles[key];\r\n        handles[key] = createHandler(data.x, data.y);\r\n        if (showHandles) {\r\n            handlesGroup.appendChild(handles[key])\r\n        }\r\n    });\r\n\r\n    Object.assign(storage, {\r\n        wrapper,\r\n        box,\r\n        handles,\r\n        normalLine,\r\n        parent: sel.parentNode\r\n    });\r\n\r\n    Helper(wrapper).on('mousedown', this._onMouseDown)\r\n                    .on('touchstart', this._onTouchStart);               \r\n}\r\n\r\nfunction _compute(e) {\r\n\r\n    const {\r\n        storage\r\n    } = this;\r\n\r\n    const {\r\n        handles\r\n    } = storage;\r\n\r\n    const handle = Helper(e.target);\r\n\r\n    //reverse axis\r\n    const revX = handle.is(handles.tl) ||\r\n                handle.is(handles.ml) ||\r\n                handle.is(handles.bl) ||\r\n                handle.is(handles.tc);\r\n\r\n    const revY = handle.is(handles.tl) || \r\n                handle.is(handles.tr) || \r\n                handle.is(handles.tc) || \r\n                handle.is(handles.ml);\r\n\r\n    const onTopEdge = handle.is(handles.tl) || handle.is(handles.tc) || handle.is(handles.tr),\r\n        onLeftEdge = handle.is(handles.tl) || handle.is(handles.ml) || handle.is(handles.bl),\r\n        onRightEdge = handle.is(handles.tr) || handle.is(handles.mr) || handle.is(handles.br),\r\n        onBottomEdge = handle.is(handles.br) || handle.is(handles.bc) || handle.is(handles.bl);\r\n\r\n    const _computed = getState.call(this, {\r\n        revX, \r\n        revY\r\n    });\r\n\r\n    const { \r\n        x: clientX, \r\n        y: clientY\r\n    } = this._cursorPoint(e);\r\n\r\n    const pressang = Math.atan2(\r\n        clientY - _computed.center.y,\r\n        clientX - _computed.center.x\r\n    );\r\n\r\n    _computed.onTopEdge = onTopEdge;\r\n    _computed.onLeftEdge = onLeftEdge;\r\n    _computed.onRightEdge = onRightEdge;\r\n    _computed.onBottomEdge = onBottomEdge;\r\n    _computed.handle = handle;\r\n    _computed.pressang = pressang;\r\n   \r\n    return _computed;\r\n}\r\n\r\nfunction _destroy() {\r\n\r\n    const {\r\n        wrapper, \r\n        container \r\n    } = this.storage;\r\n\r\n    Helper(wrapper).off('mousedown', this._onMouseDown)\r\n                    .off('touchstart', this._onTouchStart);\r\n\r\n    container.removeChild(wrapper);\r\n}\r\n\r\nfunction getState(params) {\r\n\r\n    const {\r\n        revX,\r\n        revY\r\n    } = params;\r\n\r\n    const { \r\n        el: element,\r\n        storage\r\n    } = this;\r\n\r\n    const {\r\n        container,\r\n        box,\r\n        wrapper,\r\n        parent\r\n    } = storage;\r\n\r\n    const eBBox = this.el.getBBox();\r\n\r\n    const {\r\n        x: el_x,\r\n        y: el_y,\r\n        width: el_w,\r\n        height: el_h\r\n    } = eBBox;\r\n\r\n    const { \r\n        width: cw, \r\n        height: ch, \r\n        x: c_left, \r\n        y: c_top \r\n    } = box.getBBox();\r\n\r\n    const elMatrix = getTransformToElement(element, parent);\r\n    const boxGroup = box.parentNode;\r\n\r\n    const transform = {\r\n        matrix: elMatrix,\r\n        ctm: getTransformToElement(element, container),\r\n        wrapperMatrix: getTransformToElement(wrapper, wrapper.parentNode),\r\n        boxCTM: getTransformToElement(boxGroup, container),\r\n        boxMatrix: getTransformToElement(boxGroup, boxGroup.parentNode),\r\n        parentMatrix: getTransformToElement(parent, container),\r\n        trMatrix: createSVGMatrix(),\r\n        scMatrix: createSVGMatrix(),\r\n        rotMatrix: createSVGMatrix(),\r\n        scaleX: (revX ? el_w + el_x : el_x),\r\n        scaleY: (revY ? el_h + el_y : el_y),\r\n        bBox: eBBox\r\n    };\r\n\r\n    const hW = cw / 2,\r\n        hH = ch / 2;\r\n\r\n    const boxCenter = pointTo(\r\n        getTransformToElement(box, container), \r\n        container, \r\n        c_left + hW,\r\n        c_top + hH\r\n    );\r\n\r\n    const elementCenter = pointTo(\r\n        elMatrix, \r\n        container, \r\n        el_x + el_w / 2,\r\n        el_y + el_h / 2\r\n    );\r\n\r\n    checkChildElements(element).forEach(child => {\r\n        child.__ctm__ = getTransformToElement(child, container);\r\n    });\r\n\r\n    return {\r\n        transform,\r\n        cw,\r\n        ch,\r\n        center: {\r\n            x: boxCenter.x,\r\n            y: boxCenter.y,\r\n            el_x: elementCenter.x,\r\n            el_y: elementCenter.y\r\n        },\r\n        left: c_left,\r\n        top: c_top,\r\n        revX,\r\n        revY\r\n    };\r\n}\r\n\r\nfunction processResize(\r\n    dx,\r\n    dy\r\n) {\r\n\r\n    const {\r\n        container,\r\n        box,\r\n        handles,\r\n        normalLine,\r\n        left,\r\n        top,\r\n        cw,\r\n        ch,\r\n        transform,\r\n        revX,\r\n        revY\r\n    } = this.storage;\r\n\r\n    const { \r\n        matrix,\r\n        scMatrix,\r\n        trMatrix,\r\n        scaleX: ptX,\r\n        scaleY: ptY\r\n    } = transform;\r\n\r\n    const { el } = this;\r\n\r\n    let {\r\n        width: newWidth,\r\n        height: newHeight\r\n    } = box.getBBox();\r\n\r\n    newWidth = cw + dx;\r\n    newHeight = ch + dy;\r\n\r\n    if (Math.abs(newWidth) < MIN_SIZE || Math.abs(newHeight) < MIN_SIZE) return;\r\n\r\n    const scaleX = newWidth / cw,\r\n        scaleY = newHeight / ch;\r\n\r\n    // setup scale matrix\r\n    scMatrix.a = scaleX;\r\n    scMatrix.b = 0;\r\n    scMatrix.c = 0;\r\n    scMatrix.d = scaleY;\r\n    scMatrix.e = 0;\r\n    scMatrix.f = 0;\r\n\r\n    // translate compensation matrix\r\n    trMatrix.e = ptX;\r\n    trMatrix.f = ptY;\r\n\r\n    //now must to do: translate(x y) scale(sx sy) translate(-x -y)\r\n    const res = matrix.multiply(trMatrix)\r\n                        .multiply(scMatrix)\r\n                        .multiply(trMatrix.inverse());\r\n\r\n    el.setAttribute(\r\n        'transform', \r\n        matrixToString(res)\r\n    );\r\n\r\n    this.storage.cached = {\r\n        scaleX,\r\n        scaleY\r\n    };\r\n\r\n    applyTransformToHandles(\r\n        box,\r\n        handles,\r\n        normalLine,\r\n        {\r\n            x: revX ? left - dx : left,\r\n            y: revY ? top - dy : top,\r\n            width: newWidth,\r\n            height: newHeight,\r\n        },\r\n        container\r\n    );\r\n}\r\n\r\nfunction processMove(\r\n    dx,\r\n    dy\r\n) {\r\n    const {\r\n        container,\r\n        transform,\r\n        wrapper\r\n    } = this.storage;\r\n\r\n    const {\r\n        matrix,\r\n        trMatrix,\r\n        scMatrix,\r\n        wrapperMatrix,\r\n        parentMatrix\r\n    } = transform;\r\n\r\n    scMatrix.e = dx;\r\n    scMatrix.f = dy;\r\n\r\n    const moveWrapper = scMatrix.multiply(wrapperMatrix);\r\n\r\n    wrapper.setAttribute(\r\n        'transform',\r\n        matrixToString(moveWrapper)\r\n    );\r\n\r\n    parentMatrix.e = parentMatrix.f = 0;\r\n    const { x, y } = pointTo(\r\n        parentMatrix.inverse(), \r\n        container, \r\n        dx,\r\n        dy\r\n    );\r\n\r\n    trMatrix.e = x;\r\n    trMatrix.f = y;\r\n\r\n    const moveElement = trMatrix.multiply(matrix);\r\n\r\n    this.el.setAttribute(\r\n        'transform', \r\n        matrixToString(moveElement)\r\n    );\r\n\r\n    this.storage.cached = {\r\n        dx: x,\r\n        dy: y,\r\n        ox: dx,\r\n        oy: dy\r\n    }\r\n}\r\n\r\nfunction processRotate(radians) {\r\n\r\n    const {\r\n        center,\r\n        transform,\r\n        wrapper\r\n    } = this.storage;\r\n\r\n    const {\r\n        matrix,\r\n        wrapperMatrix,\r\n        parentMatrix,\r\n        trMatrix,\r\n        scMatrix,\r\n        rotMatrix\r\n    } = transform;\r\n\r\n    const cos = floatToFixed(Math.cos(radians)),\r\n        sin = floatToFixed(Math.sin(radians));\r\n\r\n    // rotate(a cx cy) is equivalent to translate(cx cy) rotate(a) translate(-cx -cy)\r\n    trMatrix.e = center.x;\r\n    trMatrix.f = center.y;\r\n    \r\n    rotMatrix.a = cos;\r\n    rotMatrix.b = sin;\r\n    rotMatrix.c = - sin;\r\n    rotMatrix.d = cos;\r\n    \r\n    const wrapMatrix = trMatrix.multiply(rotMatrix)\r\n                            .multiply(trMatrix.inverse())\r\n                            .multiply(wrapperMatrix);\r\n\r\n    wrapper.setAttribute(\r\n        'transform',\r\n        matrixToString(wrapMatrix)\r\n    );\r\n    \r\n    scMatrix.e = center.el_x;\r\n    scMatrix.f = center.el_y;\r\n\r\n    parentMatrix.e = parentMatrix.f = 0;\r\n    const resRotMatrix = parentMatrix.inverse()\r\n                            .multiply(rotMatrix)\r\n                            .multiply(parentMatrix);\r\n\r\n    const rotateMatrix = scMatrix.multiply(resRotMatrix)\r\n                                .multiply(scMatrix.inverse());\r\n                                                \r\n    const elMatrix = rotateMatrix.multiply(matrix);\r\n\r\n    this.el.setAttribute(\r\n        'transform',\r\n        matrixToString(elMatrix)\r\n    );\r\n}\r\n\r\nfunction applyTranslate(element, data) {\r\n\r\n    const {\r\n        x,\r\n        y\r\n    } = data;\r\n\r\n    const attrs = [];\r\n\r\n    switch(element.tagName.toLowerCase()) {\r\n\r\n        case 'use':\r\n        case 'image':\r\n        case 'text':\r\n        case 'rect': {\r\n\r\n                const resX = Number(element.getAttribute('x')) + x,\r\n                    resY = Number(element.getAttribute('y')) + y;\r\n\r\n                attrs.push(\r\n                    ['x', resX],\r\n                    ['y', resY]\r\n                );\r\n            }\r\n            break;\r\n\r\n        case 'circle':\r\n        case 'ellipse': {\r\n\r\n                const resX = Number(element.getAttribute('cx')) + x,\r\n                    resY = Number(element.getAttribute('cy')) + y;\r\n\r\n                attrs.push(\r\n                    ['cx', resX],\r\n                    ['cy', resY]\r\n                );\r\n            }\r\n            break;\r\n        \r\n        case 'line': {\r\n\r\n                const resX1 = Number(element.getAttribute('x1')) + x,\r\n                    resY1 = Number(element.getAttribute('y1')) + y,\r\n                    resX2 = Number(element.getAttribute('x2')) + x,\r\n                    resY2 = Number(element.getAttribute('y2')) + y;\r\n\r\n                attrs.push(\r\n                    ['x1', resX1],\r\n                    ['y1', resY1],\r\n                    ['x2', resX2],\r\n                    ['y2', resY2]\r\n                );\r\n            }\r\n            break;\r\n\r\n        case 'polygon':\r\n        case 'polyline': {\r\n\r\n                const points = parsePoints(element.getAttribute('points'));\r\n                const result = points.map(item => { \r\n\r\n                    item[0] = Number(item[0]) + x;\r\n                    item[1] = Number(item[1]) + y;\r\n\r\n                    return item.join(' ');\r\n                }).join(' '); \r\n\r\n                attrs.push(\r\n                    ['points', result]\r\n                );\r\n            }\r\n            break;\r\n        \r\n        case 'path': {\r\n\r\n                const path = element.getAttribute('d');\r\n\r\n                attrs.push(['d', movePath(\r\n                    {\r\n                        path, \r\n                        dx: x, \r\n                        dy: y\r\n                    }\r\n                )]);\r\n            }\r\n\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n\r\n    attrs.forEach(item => {\r\n        element.setAttribute(item[0], item[1]);\r\n    });\r\n}\r\n\r\nfunction applyResize(element, data) {\r\n\r\n    const {\r\n        scaleX,\r\n        scaleY,\r\n        bBox,\r\n        defaultCTM,\r\n        container\r\n    } = data;\r\n\r\n    const {\r\n        width: boxW, \r\n        height: boxH\r\n    } = bBox;\r\n\r\n    const attrs = [];\r\n\r\n    const ctm = getTransformToElement(element, container);\r\n    const localCTM = defaultCTM.inverse().multiply(ctm);\r\n\r\n    switch(element.tagName.toLowerCase()) {\r\n\r\n        case 'text': {\r\n\r\n            const x = element.x.baseVal.value,\r\n                y = element.y.baseVal.value;\r\n\r\n            const { \r\n                x: resX,\r\n                y: resY\r\n            } = pointTo(\r\n                localCTM, \r\n                container, \r\n                x, \r\n                y\r\n            );\r\n\r\n            attrs.push(\r\n                ['x', resX + (scaleX < 0 ? boxW : 0)],\r\n                ['y', resY + (scaleY < 0 ? boxH : 0)]\r\n            );\r\n        }\r\n        break;\r\n\r\n        case 'circle': {\r\n\r\n                const r = element.r.baseVal.value,\r\n                    cx = element.cx.baseVal.value,\r\n                    cy = element.cy.baseVal.value,\r\n                    newR = r * (Math.abs(scaleX) + Math.abs(scaleY)) / 2;\r\n\r\n                const { \r\n                    x: resX,\r\n                    y: resY\r\n                } = pointTo(\r\n                    localCTM, \r\n                    container, \r\n                    cx, \r\n                    cy\r\n                );\r\n\r\n                attrs.push(\r\n                    ['r', newR],\r\n                    ['cx', resX],\r\n                    ['cy', resY]\r\n                );\r\n            }\r\n            break;\r\n  \r\n        case 'image':\r\n        case 'rect': {\r\n\r\n                const width = element.width.baseVal.value,\r\n                    height = element.height.baseVal.value,\r\n                    x = element.x.baseVal.value,\r\n                    y = element.y.baseVal.value;\r\n\r\n                const { \r\n                    x: resX,\r\n                    y: resY\r\n                } = pointTo(\r\n                    localCTM, \r\n                    container, \r\n                    x, \r\n                    y\r\n                );\r\n\r\n                localCTM.e = localCTM.f = 0;\r\n\r\n                const { \r\n                    x: newW,\r\n                    y: newH\r\n                } = pointTo(\r\n                    localCTM, \r\n                    container, \r\n                    width,\r\n                    height\r\n                );\r\n\r\n                const newWidth = Math.abs(newW),\r\n                    newHeight = Math.abs(newH);\r\n\r\n                attrs.push(\r\n                    ['x', resX - (scaleX < 0 ? newWidth : 0)],\r\n                    ['y', resY - (scaleY < 0 ? newHeight : 0)],\r\n                    ['width', newWidth],\r\n                    ['height', newHeight]\r\n                );\r\n            }\r\n            break;\r\n    \r\n        case 'ellipse': {\r\n\r\n                const rx = element.rx.baseVal.value,\r\n                    ry = element.ry.baseVal.value,\r\n                    cx = element.cx.baseVal.value,\r\n                    cy = element.cy.baseVal.value;\r\n\r\n                const { \r\n                    x: cx1,\r\n                    y: cy1\r\n                } = pointTo(\r\n                    localCTM, \r\n                    container, \r\n                    cx, \r\n                    cy\r\n                );\r\n\r\n                localCTM.e = localCTM.f = 0;\r\n\r\n                const { \r\n                    x: nRx,\r\n                    y: nRy\r\n                } = pointTo(\r\n                    localCTM, \r\n                    container, \r\n                    rx, \r\n                    ry\r\n                );\r\n\r\n                attrs.push(\r\n                    ['rx', Math.abs(nRx)],\r\n                    ['ry', Math.abs(nRy)],\r\n                    ['cx', cx1],\r\n                    ['cy', cy1]\r\n                );\r\n            }\r\n            break;\r\n        \r\n        case 'line': {\r\n\r\n                const resX1 = element.x1.baseVal.value,\r\n                    resY1 = element.y1.baseVal.value,\r\n                    resX2 = element.x2.baseVal.value,\r\n                    resY2 = element.y2.baseVal.value;\r\n\r\n                const { \r\n                    x: resX1_,\r\n                    y: resY1_\r\n                } = pointTo(\r\n                    localCTM, \r\n                    container, \r\n                    resX1, \r\n                    resY1\r\n                );\r\n\r\n                const { \r\n                    x: resX2_,\r\n                    y: resY2_\r\n                } = pointTo(\r\n                    localCTM, \r\n                    container, \r\n                    resX2,\r\n                    resY2\r\n                );\r\n\r\n                attrs.push(\r\n                    ['x1', resX1_],\r\n                    ['y1', resY1_],\r\n                    ['x2', resX2_],\r\n                    ['y2', resY2_]\r\n                );\r\n            }\r\n            break;\r\n\r\n        case 'polygon':\r\n        case 'polyline': {\r\n\r\n                const points = parsePoints(element.getAttribute('points'));\r\n                const result = points.map(item => {\r\n\r\n                    const { \r\n                        x,\r\n                        y\r\n                    } = pointTo(\r\n                        localCTM, \r\n                        container, \r\n                        Number(item[0]), \r\n                        Number(item[1])\r\n                    );\r\n\r\n                    item[0] = x;\r\n                    item[1] = y;\r\n\r\n                    return item.join(' ');\r\n\r\n                }).join(' ');\r\n\r\n                attrs.push(['points', result]);\r\n            }\r\n            break;\r\n        \r\n        case 'path': {\r\n\r\n                const path = element.getAttribute('d');\r\n\r\n                attrs.push(['d', resizePath(\r\n                    {\r\n                        path,\r\n                        localCTM,\r\n                        container\r\n                    }\r\n                )]);\r\n            }\r\n            break;\r\n\r\n        default: {}\r\n            break;\r\n    }\r\n\r\n    attrs.forEach(attr => {\r\n        element.setAttribute(attr[0], attr[1]);\r\n    });\r\n}\r\n\r\nfunction applyTransformToHandles(\r\n    box, \r\n    handles, \r\n    normalLine, \r\n    data, \r\n    container\r\n) {\r\n\r\n    let { \r\n        x, \r\n        y, \r\n        width, \r\n        height\r\n    } = data;\r\n\r\n    const hW = width / 2,\r\n        hH = height / 2;\r\n\r\n    const boxCTM = getTransformToElement(\r\n        box, \r\n        box.parentNode.parentNode\r\n    );\r\n\r\n    const attrs = {\r\n        tl: pointTo(boxCTM, container, x, y),\r\n        tr: pointTo(boxCTM, container, x + width, y),\r\n        br: pointTo(boxCTM, container, x + width, y + height),\r\n        bl: pointTo(boxCTM, container, x, y + height),\r\n        tc: pointTo(boxCTM, container, x + hW, y),\r\n        bc: pointTo(boxCTM, container, x + hW, y + height),\r\n        ml: pointTo(boxCTM, container, x, y + hH),\r\n        mr: pointTo(boxCTM, container, x + width, y + hH),\r\n        //center: pointTo(boxCTM, container, x + hW, y + hH),\r\n        rotator: {}\r\n    };\r\n\r\n    const theta = Math.atan2(\r\n        attrs.tl.y - attrs.tr.y,\r\n        attrs.tl.x - attrs.tr.x\r\n    );\r\n\r\n    attrs.rotator.x = attrs.mr.x - ROT_OFFSET * Math.cos(theta);\r\n    attrs.rotator.y = attrs.mr.y - ROT_OFFSET * Math.sin(theta);\r\n\r\n    normalLine.x1.baseVal.value = attrs.mr.x;\r\n    normalLine.y1.baseVal.value = attrs.mr.y;\r\n    normalLine.x2.baseVal.value = attrs.rotator.x;\r\n    normalLine.y2.baseVal.value = attrs.rotator.y;\r\n\r\n    x = x + (width < 0 ? width : 0);\r\n    y = y + (height < 0 ? height : 0);\r\n\r\n    const boxAttrs = {\r\n        x,\r\n        y,\r\n        width: Math.abs(width),\r\n        height: Math.abs(height)\r\n    };\r\n\r\n    Object.keys(boxAttrs).forEach(attr => {\r\n        box.setAttribute(attr, boxAttrs[attr]);\r\n    });\r\n\r\n    Object.keys(handles).forEach(key => {\r\n        const hdl = handles[key];\r\n        hdl.setAttribute('cx', attrs[key].x);\r\n        hdl.setAttribute('cy', attrs[key].y);\r\n    });\r\n}\r\n\r\nfunction isGroup(element) {\r\n    return element.tagName.toLowerCase() === 'g';\r\n}\r\n\r\nfunction checkChildElements(element) {\r\n\r\n    const arrOfElements = [];\r\n\r\n    if (isGroup(element)) {\r\n\r\n        element.childNodes.forEach(item => {\r\n\r\n            if (item.nodeType === 1) {\r\n\r\n                const tagName = item.tagName.toLowerCase(); \r\n\r\n                if (ALLOWED_ELEMENTS.indexOf(tagName) !== -1) { \r\n                    if (tagName === 'g') {\r\n                        arrOfElements.push(...checkChildElements(item));\r\n                    }\r\n                    arrOfElements.push(item);\r\n                }\r\n            }\r\n        });\r\n\r\n    } else {\r\n        arrOfElements.push(element);\r\n    }\r\n\r\n    return arrOfElements;\r\n}\r\n\r\nfunction parsePoints(pts) {\r\n    return pts.match(floatRE).reduce(\r\n        (result, value, index, array) => {\r\n            if (index % 2 === 0) {\r\n                result.push(array.slice(index, index + 2));\r\n            } \r\n            return result; \r\n        },\r\n        []\r\n    );\r\n}\r\n\r\nfunction createHandler(l, t) {\r\n\r\n    const handler = createSVGElement('circle');\r\n    \r\n    const items = {\r\n        cx: l,\r\n        cy: t,\r\n        r: '5',\r\n        fill: 'rgba(0, 168, 255, 0.2)',\r\n        stroke: '#00a8ff',\r\n        'vector-effect': 'non-scaling-stroke'\r\n    };\r\n\r\n    Object.keys(items).map(key => {\r\n        handler.setAttribute(key, items[key]);\r\n    });\r\n\r\n    return handler;\r\n}","import Observable from '../observer/Observer'\r\nimport Draggable from './html'\r\nimport DraggableSVG from './svg/index'\r\n\r\nimport { checkElement } from './svg/util'\r\nimport { arrReduce } from '../util/util'\r\n\r\n// factory method for creating draggable elements\r\nexport default function _drag(options) {\r\n    if (this.length) {\r\n        const Ob = new Observable();\r\n        return arrReduce.call(this, (result, item) => {\r\n            if (!(item instanceof SVGElement)) {\r\n                result.push(\r\n                    new Draggable(item, options, Ob)\r\n                );\r\n            } else {\r\n                if (checkElement(item)) {\r\n                    result.push(\r\n                        new DraggableSVG(item, options, Ob)\r\n                    );\r\n                }\r\n            }\r\n            return result; \r\n        }, []);\r\n    }\r\n}","import { Helper } from '../helper'\r\n\r\nimport {\r\n    requestAnimFrame,\r\n    cancelAnimFrame,\r\n    warn,\r\n    isDef,\r\n    isUndef,\r\n    isFunc\r\n} from '../util/util'\r\n\r\nimport {\r\n   getOffset,\r\n   objectsCollide\r\n} from '../util/css-util'\r\n\r\nexport default class Clone {\r\n\r\n    constructor(el, options) {\r\n\r\n        this.el = el;\r\n        this.options = options || {};\r\n        this.storage = null;\r\n\r\n        this._onMouseDown = this._onMouseDown.bind(this);\r\n        this._onTouchStart = this._onTouchStart.bind(this);\r\n        this._onMouseMove = this._onMouseMove.bind(this);\r\n        this._onTouchMove = this._onTouchMove.bind(this);\r\n        this._onMouseUp = this._onMouseUp.bind(this);\r\n        this._onTouchEnd = this._onTouchEnd.bind(this);\r\n        this._animate = this._animate.bind(this);\r\n\r\n        this.enable();\r\n    }\r\n\r\n    enable() {\r\n        if (isUndef(this.storage)) {\r\n            this._init();\r\n        }  else {\r\n            warn('Already enabled');\r\n        }\r\n    }\r\n\r\n    disable() {\r\n        _destroy.call(this);\r\n    }\r\n\r\n    _init() {\r\n\r\n        const ctx = this;\r\n\r\n        const sel = ctx.el;\r\n        const _sel = Helper(sel);\r\n\r\n        const {\r\n            style,\r\n            drop,\r\n            appendTo,\r\n            stack\r\n        } = ctx.options;\r\n\r\n        const css = {\r\n            position: 'absolute',\r\n            'z-index': '2147483647'\r\n        };\r\n\r\n        if (isDef(style) && typeof style === 'object') {\r\n            Object.assign(css, style);\r\n        }\r\n\r\n        const dropZone = isDef(stack) \r\n                        ? Helper(stack)[0] \r\n                        : document;\r\n\r\n        const onDrop = isFunc(drop)\r\n            ? function(evt) {\r\n                const {\r\n                    clone\r\n                } = this.storage;\r\n\r\n                const result = objectsCollide(\r\n                    clone,\r\n                    dropZone\r\n                );\r\n\r\n                if (result) {\r\n                    drop.call(this, evt, this.el, clone);\r\n                }\r\n            }\r\n            : function() {};\r\n\r\n        ctx.storage = {\r\n            onDrop,\r\n            options: this.options,\r\n            css,\r\n            parent: Helper(appendTo)[0] || document.body,\r\n            stack: dropZone\r\n        };\r\n\r\n        _sel.on('mousedown', this._onMouseDown)\r\n            .on('touchstart', this._onTouchStart);\r\n    }\r\n\r\n    _start(e) {\r\n\r\n        if (e.stopImmediatePropagation) {\r\n            e.stopImmediatePropagation();\r\n        }\r\n        \r\n        const { \r\n            storage,\r\n            el\r\n        } = this;\r\n    \r\n        const {\r\n            parent,\r\n            css\r\n        } = storage; \r\n    \r\n        const offset = getOffset(parent);\r\n    \r\n        const { \r\n            clientX, \r\n            clientY \r\n        } = e; \r\n    \r\n        css.left = `${(clientX - offset.left)}px`;\r\n        css.top = `${(clientY - offset.top)}px`;\r\n    \r\n        const clone = el.cloneNode(true);\r\n        Helper(clone).css(css);\r\n    \r\n        storage.clientX = clientX;\r\n        storage.clientY = clientY;\r\n        storage.cx = clientX;\r\n        storage.cy = clientY;\r\n        storage.clone = clone;\r\n    \r\n        Helper(parent)[0].appendChild(clone);\r\n        this._draw();\r\n    }\r\n\r\n    _move(e) {\r\n\r\n        if (e.preventDefault) {\r\n            e.preventDefault();\r\n        }\r\n    \r\n        const { storage } = this;\r\n    \r\n        storage.clientX = e.clientX;\r\n        storage.clientY = e.clientY;\r\n        storage.doDraw = true;\r\n        storage.doMove = true;\r\n    }\r\n    \r\n    _end(e) {\r\n    \r\n        if (e.stopImmediatePropagation) {\r\n            e.stopImmediatePropagation();\r\n        }\r\n    \r\n        const { \r\n            storage\r\n        } = this;\r\n    \r\n        const {\r\n            clone,\r\n            frameId,\r\n            onDrop\r\n        } = storage;\r\n    \r\n        storage.doDraw = false;\r\n        cancelAnimFrame(frameId);\r\n    \r\n        if (isUndef(clone)) return;\r\n    \r\n        onDrop.call(this, e);\r\n        clone.parentNode.removeChild(clone);\r\n    \r\n        delete storage.clone;\r\n    }\r\n    \r\n    _draw() {\r\n        this._animate();\r\n    }\r\n\r\n    _animate() {\r\n\r\n        const { storage } = this;\r\n    \r\n        storage.frameId = requestAnimFrame(this._animate);\r\n\r\n        const {\r\n            doDraw,\r\n            clientX,\r\n            clientY,\r\n            cx,\r\n            cy,\r\n            clone\r\n        } = storage;\r\n\r\n        if (!doDraw) return;\r\n        storage.doDraw = false;\r\n\r\n        const translate = `translate(${clientX - cx}px, ${clientY - cy}px)`;\r\n\r\n        Helper(clone).css({\r\n            transform: translate,\r\n            webkitTranform: translate,\r\n            mozTransform: translate,\r\n            msTransform: translate,\r\n            otransform: translate \r\n        });\r\n    }\r\n    \r\n    _destroy() {\r\n    \r\n        if (isUndef(this.storage)) return;\r\n        Helper(this.el).off('mousedown', this._onMouseDown)\r\n                        .off('touchstart', this._onTouchStart);\r\n        delete this.storage;\r\n    }\r\n\r\n    _onMouseDown(e) {\r\n        this._start(e);\r\n        Helper(document).on('mousemove', this._onMouseMove)\r\n                        .on('mouseup', this._onMouseUp);\r\n    }\r\n\r\n    _onMouseMove(e) {\r\n        this._move(e);\r\n    }\r\n\r\n    _onMouseUp(e) {\r\n        this._end(e);\r\n        Helper(document).off('mousemove', this._onMouseMove)\r\n                        .off('mouseup', this._onMouseUp);\r\n    }\r\n\r\n    _onTouchStart(e) {\r\n        this._start(e.touches[0]);\r\n        Helper(document).on('touchmove', this._onTouchMove)\r\n                        .on('touchend', this._onTouchEnd);\r\n    }\r\n\r\n    _onTouchMove(e) {\r\n        this._move(e.touches[0]);\r\n    }\r\n\r\n    _onTouchEnd(e) {\r\n\r\n        if (e.touches.length === 0) {\r\n            this._end(e.changedTouches[0]);\r\n        }\r\n        Helper(document).off('touchmove', this._onTouchMove)\r\n                        .off('touchend', this._onTouchEnd);\r\n    }\r\n}","/* @license\r\n * Move/Rotate/Resize tool\r\n * Released under the MIT license, 2018-2019\r\n * nichollascarter@gmail.com\r\n*/\r\n\r\nimport '../style/subjx.css'\r\nimport _drag from './core/transform/index'\r\nimport _clone from './core/clone/index'\r\nimport { Helper_ } from './core/helper'\r\n\r\nclass Subjx extends Helper_ {\r\n\r\n    constructor(params) {\r\n        super(params);\r\n    }\r\n\r\n    drag(method) {\r\n        return _drag.call(this, method);\r\n    }\r\n    clone(method) {\r\n        return _clone.call(this, method);\r\n    }\r\n}\r\n\r\nexport default function(params) {\r\n    return new Subjx(params);\r\n}","import {\r\n    arrMap\r\n} from '../util/util'\r\n\r\nimport Clone from './clone'\r\n\r\nexport default function _clone(options) {\r\n    if (this.length) {\r\n        return arrMap.call(this, item => {\r\n            return new Clone(item, options);\r\n        });\r\n    }\r\n}"],"sourceRoot":""}