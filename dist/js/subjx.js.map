{"version":3,"sources":["webpack://Subjx/webpack/bootstrap","webpack://Subjx/./src/js/core/util/util.js","webpack://Subjx/./src/js/core/observer/Observer.js","webpack://Subjx/./src/js/core/helper.js","webpack://Subjx/./src/js/core/util/css-util.js","webpack://Subjx/./src/js/core/transform/common.js","webpack://Subjx/./src/js/core/transform/subject.js","webpack://Subjx/./src/js/core/transform/html.js","webpack://Subjx/./src/js/core/transform/svg/path.js","webpack://Subjx/./src/js/core/transform/svg/index.js","webpack://Subjx/./src/js/core/transform/index.js","webpack://Subjx/./src/js/core/clone/clone.js","webpack://Subjx/./src/js/core/clone/index.js","webpack://Subjx/./src/js/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","requestAnimFrame","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","msRequestAnimationFrame","f","setTimeout","cancelAnimFrame","cancelAnimationFrame","mozCancelAnimationFrame","requestID","clearTimeout","arrSlice","Array","forEach","slice","arrMap","map","warn","console","isDef","val","isUndef","isFunc","Observable","_classCallCheck","this","observers","eventName","sub","obs","push","filter","subscriber","source","data","observer","onMove","onRotate","onResize","onApply","onRefreshState","Helper_","params","helper_classCallCheck","selector","document","querySelectorAll","length","count","nodeType","Subjx","_typeof","isArray","prop","methods","setStyle","options","obj","len","style","_setStyle","getStyle","currentStyle","defaultView","getComputedStyle","_getStyle","apply","arguments","concat","node","sel","Helper","fn","arr","_loop","index","events","addEventListener","attachEvent","listenerDelegate","removeEventListener","detachEvent","_sel","el","evt","handler","act","doit","event","target","matches","parentNode","getOffset","getBoundingClientRect","getTransform","css","parseTransform","a","b","match","shift","item","Number","parseMatrix","transform","parseFloat","addClass","cls","classList","indexOf","add","split","cl","unitRE","RAD","Math","PI","DEG","recalcPoint","x","y","centerX","centerY","angle","newCenterX","newCenterY","oldCoords","getRotatedPoint","coords","nx","left","ny","top","resX","floatToFixed","resY","snapToGrid","snap","result","snapCandidate","gridSize","round","rotatedTopLeft","width","height","rotationAngle","revX","revY","cx","cy","dx","dy","rotatedTopLeftAngle","atan2","radius","sqrt","pow","cos","sin","ry","toPX","parent","test","fromPX","toUnit","getUnitDimension","toFixed","Subject","subject_classCallCheck","constructor","TypeError","storage","Ob","_onMouseDown","_onTouchStart","_onMouseMove","_onTouchMove","_onMouseUp","_onTouchEnd","_load","_init","remove","removeClass","_destroy","each","move","resize","rotate","_options$snap","_options$each","subscribe","drop","e","store","ctx","animate","frame","doDraw","handle","handles","ch","cw","refang","pressang","pageX","pageY","center","parentScale","scaleX","scaleY","_store$each","moveEach","resizeEach","rotateEach","doResize","pos","is","br","mr","tl","ml","tr","tc","dox","doy","bl","bc","_resize","notify","doDrag","diffTop","diffLeft","_drag","doRotate","radians","_rotate","stopImmediatePropagation","computed","_compute","ctrlKey","keys","onRightEdge","onBottomEdge","onTopEdge","onLeftEdge","factor","rotator","_draw","preventDefault","action","_apply","_start","on","touches","_moving","_end","off","changedTouches","w","h","actionName","html_Draggable","_Subject","_this","subject_Subject","createElement","wrapper","_parent","container","controls","innerHTML","_controls","_container","assign","find","processMove","ctrls","processRotate","processResize","dimens","matrix","_this$storage","cached","recalc","refreshState","tr_off","_this$storage2","styleList","coordX","tl_off","offset_","center_x","center_y","_el","coordY","resultY","matrixToCSS","resultX","_toConsumableArray","join","webkitTranform","mozTransform","_slicedToArray","_arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","iterator","next","done","err","_iterableToArrayLimit","_nonIterableRest","dRE","cmd","sepRE","upCmd","relative","path","lastIndex","isNaN","toUpperCase","serialized","trim","getFactor","diff","fixed","dist","abs","self","ReferenceError","svg_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","MIN_SIZE","svg_setPrototypeOf","floatRE","translateRE","svg_DraggableSVG","subClass","superClass","writable","configurable","DraggableSVG","appendChild","getAttribute","attrs","box","setAttribute","_sel$getBBox","group","createSVG","createHandler","ROT_OFFSET","items","fill","applyTranslate","removeChild","svg_compute2","translate","getBBox","newWidth","newHeight","applyTransformToHandles","els","removeAttribute","tagName","toLowerCase","childNodes","element","_resX","resX1","resX2","resY1","points","parsePoints","resY2","values","firstCommand","str","movePath","diffX","isGroup","diffY","bBox","boxX","boxY","boxW","boxH","fixedX","fixedY","baseData","setCoord","_recalcPoint","svg_objectSpread","_recalcPoint2","_resX2","_resY2","_x","_y","_resY3","_recalcPoint3","rx","_recalcPoint4","_cx","_resX4","_resY4","resX1_","resY1_","_recalcPoint5","resY2_","_recalcPoint6","resX2_","_recalcPoint7","parsePath","res","factorX","factorY","_values","newRx","newRy","setRelativeCoord","_params","large_arc_flag","sweep_flag","_objectSpread","x1","y1","_values2","factorX1","factorY2","_factorY","x2","_factorX","y2","factorY1","resY3","resX3","_factorX2","_factorY2","_resY","_x2","_values3","_y2","_recalcPoint8","_resX3","_values4","_x4","_y4","_factorX5","_factorY5","_x3","_y3","_recalcPoint9","_factorY6","_recalcPoint10","_resY5","_resX5","_values5","_x6","_y6","_factorX7","_factorY7","_x5","_y5","_recalcPoint11","_factorY8","_recalcPoint12","_resY7","_resX6","_resY6","_resX7","resizePath","attr","c_left","c_top","_this$storage3","orig","scale","_this$storage4","ptX","scaleString","ptY","oldTransform","replace","transformString","newTransform","originTransform","_this$storage5","hdl","_this$storage6","createElementNS","halfHeight","halfWidth","boxAttrs","pts","array","clone_typeof","Clone","clone_Clone","instance","Constructor","clone_classCallCheck","enable","aLeft","bTop","appendTo","margin","padding","_ctx$options","position","border","background","onDrop","clone","_getOffset","_getOffset2","bLeft","_b","stack","_clone","aTop","msTransform","otransform","_move","cloneNode","frameId","js_setPrototypeOf","js_Subjx","js_classCallCheck","Observer_Observable","method"],"mappings":"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","file":"js/subjx.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export const requestAnimFrame = requestAnimationFrame ||\r\n        mozRequestAnimationFrame ||\r\n        webkitRequestAnimationFrame ||\r\n        msRequestAnimationFrame ||\r\n        function(f) {\r\n            return setTimeout(f, 1000 / 60);\r\n        };\r\n\r\nexport const cancelAnimFrame = cancelAnimationFrame ||\r\n        mozCancelAnimationFrame ||\r\n        function(requestID) {\r\n            clearTimeout(requestID);\r\n        };\r\n\r\nexport const forEach = Array.prototype.forEach,\r\n        arrSlice = Array.prototype.slice,\r\n        arrMap = Array.prototype.map,\r\n        warn = console.warn;\r\n\r\nexport function isDef(val) {\r\n    return val !== undefined && val !== null;\r\n}\r\n\r\nexport function isUndef(val) {\r\n    return val === undefined || val === null;\r\n}\r\n\r\nexport function isFunc(val) {\r\n    return typeof val === 'function';\r\n}","import { isUndef } from \"../util/util\";\r\n\r\nexport default class Observable {\r\n  \r\n    constructor() {\r\n        this.observers = {};\r\n    }\r\n  \r\n    subscribe(eventName, sub) {\r\n\r\n        const obs = this.observers;\r\n     \r\n        if (isUndef(obs[eventName])) {\r\n            Object.defineProperty(obs, eventName, {\r\n                value: []\r\n            });\r\n        }\r\n\r\n        obs[eventName].push(sub);\r\n    }\r\n  \r\n    unsubscribe(f) {\r\n       this.observers = this.observers.filter(subscriber => subscriber !== f);\r\n    }\r\n\r\n    notify(eventName, source, data) {\r\n        if (isUndef(this.observers[eventName])) return;\r\n\r\n        this.observers[eventName].forEach(observer => {\r\n            if (source === observer) return;\r\n            switch (eventName) {\r\n                case 'onmove':\r\n                    observer.onMove(data);\r\n                    break\r\n                case 'onrotate':\r\n                    observer.onRotate(data);\r\n                    break\r\n                case 'onresize':\r\n                    observer.onResize(data);\r\n                    break\r\n                case 'onapply':\r\n                    observer.onApply(data);\r\n                    break\r\n                case 'onrefreshstate':\r\n                    observer.onRefreshState(data);\r\n                    break\r\n                default: \r\n                    break\r\n            }\r\n        });\r\n    }\r\n}","import {\r\n    arrSlice,\r\n    warn\r\n} from './util/util'\r\n\r\nexport class Helper_ {\r\n\r\n    constructor(params) {\r\n\r\n        if (!params) return this;\r\n\r\n        if (typeof params === 'string') {\r\n            let selector = document.querySelectorAll(params);\r\n            this.length = selector.length;\r\n            for (let count = 0; count < this.length; count++) {\r\n                this[count] = selector[count];\r\n            }\r\n        } else if (params.nodeType === 1 || params === document) {\r\n            this[0] = params;\r\n            this.length = 1;\r\n        } else if (params instanceof Subjx || typeof params === 'object') {\r\n            this.length = params.length;\r\n            for (let count = 0; count < this.length; count++) {\r\n                this[count] = params[count];\r\n            }\r\n        } else if (Array.isArray(params)) {\r\n            this.length = 0;\r\n            for (let count = 0; count < this.length; count++) {\r\n                if (params.nodeType === 1) {\r\n                    this[count] = params[count];\r\n                    this.length++;\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    css(property) {\r\n        return _css.call(this, property);\r\n    }\r\n    find(node) {\r\n        return _find.call(this, node);\r\n    }\r\n    each(fn) {\r\n        return _each.call(this, fn);\r\n    }\r\n    on() {\r\n        return _on.apply(this, arguments);\r\n    }\r\n    off() {\r\n        return _off.apply(this, arguments);\r\n    }\r\n    is(selector) {\r\n        return _is.call(this, selector);\r\n    }\r\n}\r\n\r\nfunction _css(prop) {\r\n\r\n    const methods = {\r\n        setStyle(options) {\r\n            return _setStyle(this, options);\r\n        },\r\n\r\n        getStyle() {\r\n            return _getStyle(this);\r\n        }\r\n    };\r\n\r\n    if (typeof prop === 'string') {\r\n        return methods.getStyle.apply(this, arrSlice.call(arguments, 1));\r\n    } else if (typeof prop === 'object' || !prop) {\r\n        return methods.setStyle.apply(this, arguments);\r\n    } else {\r\n        warn(`Method ${prop} does not exist`);\r\n    }\r\n    return false;\r\n\r\n\r\n    function _getStyle(obj) {\r\n\r\n        let len = obj.length;\r\n\r\n        while (len--) {\r\n            if (obj[len].currentStyle) {\r\n                return obj[len].currentStyle[prop];\r\n            } else if (document.defaultView && document.defaultView.getComputedStyle) {\r\n                return document.defaultView.getComputedStyle(obj[len], '')[prop];\r\n            } else {\r\n                return obj[len].style[prop];\r\n            }\r\n        }\r\n    }\r\n\r\n    function _setStyle(obj, options) {\r\n\r\n        let len = obj.length;\r\n\r\n        while (len--) {\r\n            for (let property in options) {\r\n                obj[len].style[property] = options[property];\r\n            }\r\n        }\r\n        return obj.style;\r\n    }\r\n}\r\n\r\nfunction _each(fn) {\r\n\r\n    const arr = arrSlice.call(this, 0);\r\n\r\n    for (let index = arr.length - 1; index >= 0; --index) {\r\n        let func = function() {\r\n            return arr[index];\r\n        };\r\n        fn.call(func());\r\n    }\r\n    return this;\r\n}\r\n\r\nfunction _find(sel) {\r\n\r\n    let len = this.length,\r\n        selector;\r\n\r\n    while (len--) {\r\n        selector = this[len].querySelectorAll(sel);\r\n        return Helper(selector);\r\n    }\r\n}\r\n\r\nfunction _on() {\r\n\r\n    let len = this.length;\r\n\r\n    while (len--) {\r\n\r\n        if (!this[len].events) {\r\n            this[len].events = {};\r\n            this[len].events[arguments[0]] = [];\r\n        }\r\n\r\n        if (arguments.length === 2) {\r\n\r\n            if (document.addEventListener) {\r\n                this[len].addEventListener(arguments[0], arguments[1], false);\r\n            } else if (document.attachEvent) {\r\n                this[len].attachEvent(`on${arguments[0]}`, arguments[1]);\r\n            } else {\r\n                this[len][`on${arguments[0]}`] = arguments[1];\r\n            }\r\n\r\n        } else if (arguments.length === 3 && typeof(arguments[1]) === 'string') {\r\n            listenerDelegate(this[len], arguments[0], arguments[1], arguments[2], true);\r\n        }\r\n    }\r\n    return this;\r\n}\r\n\r\nfunction _off() {\r\n\r\n    let len = this.length;\r\n\r\n    while (len--) {\r\n\r\n        if (!this[len].events) {\r\n            this[len].events = {};\r\n            this[len].events[arguments[0]] = [];\r\n        }\r\n\r\n        if (arguments.length === 2) {\r\n            if (document.removeEventListener) {\r\n                this[len].removeEventListener(arguments[0], arguments[1], false);\r\n            } else if (document.detachEvent) {\r\n                this[len].detachEvent(`on${arguments[0]}`, arguments[1]);\r\n            } else {\r\n                this[len][`on${arguments[0]}`] = null;\r\n            }\r\n\r\n        } else if (arguments.length === 3 && typeof(arguments[1]) === 'string') {\r\n            listenerDelegate(this[len], arguments[0], arguments[1], arguments[2], false);\r\n        }\r\n    }\r\n\r\n    return this;\r\n}\r\n\r\nfunction _is(selector) {\r\n\r\n    const _sel = Helper(selector);\r\n    let len = this.length;\r\n\r\n    while (len--) {\r\n        if (this[len] === _sel[len]) return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction listenerDelegate(el, evt, sel, handler, act) {\r\n\r\n    const doit = function(event) {\r\n        let t = event.target;\r\n        while (t && t !== this) {\r\n            if (t.matches(sel)) {\r\n                handler.call(t, event);\r\n            }\r\n            t = t.parentNode;\r\n        }\r\n    };\r\n\r\n    if (act === true) {\r\n        if (document.addEventListener) {\r\n            el.addEventListener(evt, doit, false);\r\n        } else if (document.attachEvent) {\r\n            el.attachEvent(`on${evt}`, doit);\r\n        } else {\r\n            el[`on${evt}`] = doit;\r\n        }\r\n    } else {\r\n        if (document.removeEventListener) {\r\n            el.removeEventListener(evt, doit, false);\r\n        } else if (document.detachEvent) {\r\n            el.detachEvent(`on${evt}`, doit);\r\n        } else {\r\n            el[`on${evt}`] = null;\r\n        }\r\n    }\r\n}\r\n\r\nexport function Helper(params) {\r\n    return new Helper_(params);\r\n}","export function getOffset(node) {\r\n    return node.getBoundingClientRect();\r\n}\r\n\r\nexport function getTransform(el) {\r\n    const transform = el.css('-webkit-transform') ||\r\n        el.css('-moz-transform') ||\r\n        el.css('-ms-transform') ||\r\n        el.css('-o-transform') ||\r\n        el.css('transform') ||\r\n        'none';\r\n    return transform;\r\n}\r\n\r\nexport function parseTransform(a) {\r\n    const b = {};\r\n\r\n    for (let i in a = a.match(/(\\w+\\((\\-?\\d+\\.?\\d*e?\\-?\\d*(?:,|\\s)?)+\\))+/g)) {\r\n        const c = a[i].match(/[\\w\\.\\-]+/g);\r\n        b[c.shift()] = c.map(item => { return Number(item); });\r\n    }\r\n    return b;\r\n}\r\n\r\nexport function parseMatrix(el) {\r\n    // matrix(scaleX(),skewY(),skewX(),scaleY(),translateX(),translateY())\r\n    const transform = getTransform(el).match(/-?\\d+\\.?\\d+|-?\\d+/g);\r\n\r\n    if (transform) {\r\n        return transform.map(item => {\r\n            return parseFloat(item);\r\n        });\r\n    } else {\r\n        return [1, 0, 0, 1, 0, 0];\r\n    }\r\n}\r\n\r\nexport function addClass(node, cls) {\r\n    if (!cls) return;\r\n\r\n    if (node.classList) {\r\n        if (cls.indexOf(' ') > -1) {\r\n            cls.split(/\\s+/).forEach(function(cl) {\r\n                return node.classList.add(cl);\r\n            });\r\n        } else {\r\n            return node.classList.add(cls);\r\n        }\r\n    }\r\n    return node;\r\n}\r\n\r\nexport function removeClass(node, cls) {\r\n    if (!cls) return;\r\n\r\n    if (node.classList) {\r\n        if (cls.indexOf(' ') > -1) {\r\n            cls.split(/\\s+/).forEach(function(cl) {\r\n                return node.classList.remove(cl);\r\n            });\r\n        } else {\r\n            return node.classList.remove(cls);\r\n        }\r\n    }\r\n    return node;\r\n}","export const unitRE = /px|em|%|ex|ch|rem|vh|vw|vmin|vmax|mm|cm|in|pt|pc|deg/;\r\nexport const RAD = Math.PI / 180;\r\nexport const DEG = 180 / Math.PI;\r\n\r\nexport function recalcPoint(params) {\r\n\r\n    const { \r\n        x, \r\n        y, \r\n        centerX,\r\n        centerY,\r\n        angle,\r\n        newCenterX,\r\n        newCenterY\r\n    } = params;\r\n\r\n    const oldCoords = getRotatedPoint(\r\n        centerX,\r\n        centerY,\r\n        x,\r\n        y,\r\n        angle,\r\n        false,\r\n        false\r\n    );\r\n\r\n    const coords = getRotatedPoint(\r\n        newCenterX,\r\n        newCenterY,\r\n        x,\r\n        y,\r\n        angle,\r\n        false,\r\n        false\r\n    );\r\n\r\n    const nx = x - (oldCoords.left - coords.left),\r\n        ny = y - (oldCoords.top - coords.top);\r\n\r\n    return {\r\n        resX: floatToFixed(nx),\r\n        resY: floatToFixed(ny)\r\n    }\r\n}\r\n\r\nexport function snapToGrid(value, snap) {\r\n    \r\n    if (snap === 0) {\r\n        return value;\r\n    } else {\r\n        const result = snapCandidate(value, snap);\r\n\r\n        if (result - value < snap) {\r\n            return result;\r\n        }\r\n    }\r\n}\r\n\r\nexport function snapCandidate(value, gridSize) {\r\n    if (gridSize === 0) return value;\r\n    return gridSize * Math.round(value / gridSize);\r\n}\r\n\r\nexport function rotatedTopLeft(\r\n    x, \r\n    y, \r\n    width, \r\n    height, \r\n    rotationAngle, \r\n    revX, \r\n    revY\r\n) {\r\n                \r\n    const cx = x + parseFloat(width) / 2,\r\n        cy = y + parseFloat(height) / 2;\r\n\r\n    const dx = x - cx,\r\n        dy = y - cy;\r\n\r\n    const originalTopLeftAngle = Math.atan2(dy, dx);\r\n\r\n    const rotatedTopLeftAngle = originalTopLeftAngle + rotationAngle;\r\n\r\n    const radius = Math.sqrt(Math.pow(parseFloat(width) / 2, 2) + Math.pow(parseFloat(height) / 2, 2));\r\n            \r\n    let cos = Math.cos(rotatedTopLeftAngle), \r\n        sin = Math.sin(rotatedTopLeftAngle);\r\n\r\n    cos = revX === true ? -cos : cos;\r\n    sin = revY === true ? -sin : sin;\r\n\r\n    const rx = cx + radius * cos,\r\n        ry = cy + radius * sin;\r\n\r\n    return {\r\n        left: floatToFixed(rx),\r\n        top: floatToFixed(ry)\r\n    }\r\n}\r\n\r\nexport function getRotatedPoint(\r\n    cx, \r\n    cy, \r\n    x, \r\n    y, \r\n    angle, \r\n    revX, \r\n    revY\r\n) {\r\n\r\n    let cos = Math.cos(angle),\r\n        sin = Math.sin(angle);\r\n\r\n    cos = revX === true ? -cos : cos;\r\n    sin = revY === true ? -sin : sin;\r\n\r\n    let nx = (cos * (x - cx)) + (sin * (y - cy)) + cx,\r\n        ny = (cos * (y - cy)) - (sin * (x - cx)) + cy;\r\n\r\n    return {\r\n        left: floatToFixed(nx),\r\n        top: floatToFixed(ny)\r\n    }\r\n}\r\n\r\nexport function toPX(value, parent) {\r\n    if (/px/.test(value)) {\r\n        return value;\r\n    }\r\n    if (/%/.test(value)) {\r\n        return `${parseFloat(value) * parseFloat(parent) / 100}px`;\r\n    }\r\n}\r\n\r\nexport function fromPX(value, parent, toUnit) {\r\n    if (/px/.test(toUnit)) {\r\n        return value;\r\n    }\r\n    if (/%/.test(toUnit)) {\r\n        return `${parseFloat(value) * 100 / parseFloat(parent)}%`;\r\n    }\r\n}\r\n\r\nexport function getUnitDimension(value) {\r\n    return value.match(unitRE)[0];\r\n}\r\n\r\nexport function floatToFixed(val) {\r\n    return Number(val.toFixed(6));\r\n}","import { Helper } from '../helper'\r\n\r\nimport {\r\n    requestAnimFrame,\r\n    cancelAnimFrame,\r\n    isDef,\r\n    isUndef,\r\n    isFunc\r\n} from '../util/util'\r\n\r\nimport {\r\n    addClass,\r\n    removeClass\r\n} from '../util/css-util'\r\n\r\nimport {\r\n    getRotatedPoint,\r\n    RAD\r\n} from './common'\r\n\r\nexport default class Subject {\r\n\r\n    constructor(el, Observable) {\r\n\r\n        if (this.constructor === Subject) {\r\n            throw new TypeError('Cannot construct Subject instances directly');\r\n        }\r\n\r\n        this.el = el;\r\n        this.storage = null;\r\n        this.Ob = Observable;\r\n\r\n        this._onMouseDown = this._onMouseDown.bind(this);\r\n        this._onTouchStart = this._onTouchStart.bind(this);\r\n        this._onMouseMove = this._onMouseMove.bind(this);\r\n        this._onTouchMove = this._onTouchMove.bind(this);\r\n        this._onMouseUp = this._onMouseUp.bind(this);\r\n        this._onTouchEnd = this._onTouchEnd.bind(this);\r\n    }\r\n\r\n    enable(options) {\r\n\r\n        if (isUndef(this.storage)) {\r\n            this._load(options);\r\n            this._init(this.el);\r\n        } else {\r\n            warn('Already enabled');\r\n        }\r\n    }\r\n\r\n    disable() {\r\n\r\n        const {\r\n            storage,\r\n            el\r\n        } = this;\r\n\r\n        if (isUndef(storage)) return;\r\n\r\n        removeClass(el, 'dg-drag');\r\n        this._destroy(); \r\n\r\n        delete this.storage;  \r\n    }\r\n\r\n    _load(options) {\r\n        loadOptions.call(this, options);\r\n    }\r\n\r\n    _draw() {\r\n\r\n        const ctx = this;\r\n    \r\n        function animate() {\r\n    \r\n            const store = ctx.storage;\r\n    \r\n            store.frame = requestAnimFrame(animate);\r\n    \r\n            if (!store.doDraw) return;\r\n            store.doDraw = false;\r\n    \r\n            let { \r\n                handle,\r\n                handles,\r\n                cx,\r\n                cy,\r\n                ch,\r\n                cw,\r\n                refang,\r\n                pressang,\r\n                pageX,\r\n                pageY,\r\n                center,\r\n                snap,\r\n                parentScale\r\n            } = store;\r\n    \r\n            const scaleX = parentScale[0],\r\n                scaleY = parentScale[1];\r\n    \r\n            let { \r\n                    move: moveEach, \r\n                    resize: resizeEach, \r\n                    rotate: rotateEach\r\n                } = store.each;\r\n    \r\n            if (store.doResize) {\r\n    \r\n                let revX, revY, x, y, pos;\r\n    \r\n                let width = null,\r\n                    height = null;\r\n    \r\n                if (handle.is(handles.br) || handle.is(handles.mr)) {\r\n    \r\n                    pos = getRotatedPoint(\r\n                        cx, \r\n                        cy,\r\n                        pageX,\r\n                        pageY,\r\n                        refang,\r\n                        false, \r\n                        false\r\n                    );\r\n    \r\n                    pageY = pos.top;\r\n                    pageX = pos.left;\r\n    \r\n                    y = (pageY - cy) / scaleY;\r\n                    x = (pageX - cx) / scaleX;\r\n    \r\n                    let doy = handle.is(handles.br);\r\n    \r\n                    if (doy) { height = y + ch; }\r\n                    width = x + cw;\r\n    \r\n                    revX = false;\r\n                    revY = false;\r\n    \r\n                } else if (handle.is(handles.tl) || handle.is(handles.ml)) {\r\n    \r\n                    pos = getRotatedPoint(\r\n                        cx, \r\n                        cy, \r\n                        pageX, \r\n                        pageY, \r\n                        refang, \r\n                        false, \r\n                        false\r\n                    );\r\n    \r\n                    pageY = pos.top;\r\n                    pageX = pos.left;\r\n    \r\n                    y = - (pageY - cy) / scaleY;\r\n                    x = - (pageX - cx) / scaleX;\r\n    \r\n                    let doy = handle.is(handles.tl);\r\n    \r\n                    width = x + cw;\r\n                    if (doy) { height = y + ch; }\r\n    \r\n                    revX = true;\r\n                    revY = true;\r\n    \r\n                } else if (handle.is(handles.tr) || handle.is(handles.tc)) {\r\n    \r\n                    let dox = handle.is(handles.tr);\r\n                    let doy = handle.is(handles.tc);\r\n    \r\n                    pos = getRotatedPoint(\r\n                        cx, \r\n                        cy, \r\n                        pageX, \r\n                        pageY, \r\n                        refang, \r\n                        dox, \r\n                        false\r\n                    );\r\n    \r\n                    pageY = pos.top;\r\n                    pageX = pos.left;\r\n    \r\n                    y = - (pageY - cy) / scaleY;\r\n                    x = - (pageX - cx) / scaleX;\r\n    \r\n                    if (dox) { y = -y; }\r\n    \r\n                    height = y + ch;\r\n                    if (dox) { width = x + cw; }\r\n    \r\n                    revX = doy;\r\n                    revY = true;\r\n    \r\n                } else if (handle.is(handles.bl) || handle.is(handles.bc)) {\r\n    \r\n                    let dox = handle.is(handles.bl);\r\n    \r\n                    pos = getRotatedPoint(\r\n                        cx, \r\n                        cy, \r\n                        pageX, \r\n                        pageY, \r\n                        refang, \r\n                        false, \r\n                        dox\r\n                    );\r\n    \r\n                    pageY = pos.top;\r\n                    pageX = pos.left;\r\n    \r\n                    y = (pageY - cy) / scaleY;\r\n                    x = - (pageX - cx) / scaleX;\r\n    \r\n                    height = y + ch;\r\n                    if (dox) { width = x + cw; }\r\n    \r\n                    revX = dox;\r\n                    revY = false;\r\n                }\r\n    \r\n                ctx._resize(\r\n                    width,\r\n                    height,\r\n                    revX,\r\n                    revY,\r\n                    x,\r\n                    y\r\n                );\r\n    \r\n                if (resizeEach) { \r\n                    ctx.Ob.notify('onresize',\r\n                        ctx,\r\n                        {\r\n                            width: width,\r\n                            height: height,\r\n                            x: x,\r\n                            y: y,\r\n                            revX: revX,\r\n                            revY: revY,\r\n                            snap: snap\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n    \r\n            if (store.doDrag) {\r\n    \r\n                const diffTop = (pageY - cy) / scaleY, \r\n                    diffLeft = (pageX - cx) / scaleX; \r\n\r\n                ctx._drag(\r\n                    diffTop, \r\n                    diffLeft,\r\n                );\r\n    \r\n                if (moveEach) {\r\n                    ctx.Ob.notify('onmove',\r\n                        ctx,\r\n                        {\r\n                            diffTop: diffTop,\r\n                            diffLeft: diffLeft\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n    \r\n            if (store.doRotate) {\r\n    \r\n                const radians = Math.atan2(\r\n                    pageY - center.y, \r\n                    pageX - center.x\r\n                ) - pressang;\r\n    \r\n                ctx._rotate(\r\n                    radians\r\n                );\r\n    \r\n                if (rotateEach) {\r\n                    ctx.Ob.notify('onrotate',\r\n                        ctx,\r\n                        {\r\n                            radians: radians\r\n                        }\r\n                    );\r\n                }\r\n            }\r\n        }\r\n        animate();\r\n    }\r\n\r\n    _start(e) {\r\n\r\n        if (e.stopImmediatePropagation) {\r\n            e.stopImmediatePropagation();\r\n        }\r\n    \r\n        const store = this.storage; \r\n        const computed = this._compute(e);\r\n\r\n        store.pageX = e.pageX;\r\n        store.pageY = e.pageY;\r\n        store.cx = e.pageX;\r\n        store.cy = e.pageY;\r\n        store.ctrlKey = e.ctrlKey;\r\n\r\n        Object.keys(computed).forEach(prop => {\r\n            store[prop] = computed[prop];\r\n        });\r\n\r\n        const {\r\n            onRightEdge,\r\n            onBottomEdge,\r\n            onTopEdge,\r\n            onLeftEdge,\r\n            handle,\r\n            factor,\r\n            revX,\r\n            revY\r\n        } = computed;\r\n    \r\n        const doResize = onRightEdge ||\r\n                        onBottomEdge ||\r\n                        onTopEdge ||\r\n                        onLeftEdge;\r\n\r\n        const doRotate = handle.is(store.handles.rotator);\r\n        \r\n        store.doResize = doResize;\r\n        store.doDrag = !doRotate && !doResize;\r\n        store.doRotate = doRotate;\r\n\r\n        if (this.Ob) {\r\n            this.Ob.notify(\r\n                'onrefreshstate',\r\n                this,\r\n                {\r\n                    factor,\r\n                    revX,\r\n                    revY,\r\n                    onTopEdge,\r\n                    onLeftEdge,\r\n                    onRightEdge,\r\n                    onBottomEdge\r\n                }\r\n            );\r\n        }\r\n\r\n        this._draw();\r\n    }\r\n\r\n    _moving(e) {\r\n\r\n        if (e.preventDefault) {\r\n            e.preventDefault();\r\n        }\r\n        \r\n        const store = this.storage;\r\n        store.pageX = e.pageX;\r\n        store.pageY = e.pageY;\r\n        store.doDraw = true;\r\n    }\r\n    \r\n    _end(e) {\r\n\r\n        if (e.stopImmediatePropagation) {\r\n            e.stopImmediatePropagation();\r\n        }\r\n\r\n        const store = this.storage;\r\n\r\n        const action = store.doResize ? 'resize' : (store.doDrag ? 'drag' : 'rotate');\r\n\r\n        store.doResize = false;\r\n        store.doDrag = false;\r\n        store.doRotate = false;\r\n        store.doDraw = false;\r\n\r\n        this._apply(action);\r\n\r\n        if (this.Ob) {\r\n            this.Ob.notify(\r\n                'onapply',\r\n                this,\r\n                action\r\n            );\r\n        }\r\n\r\n        cancelAnimFrame(store.frame);\r\n        store.drop.call(this, e);\r\n    }\r\n\r\n    _onMouseDown(e) {\r\n        this._start(e);\r\n        Helper(document).on('mousemove', this._onMouseMove)\r\n                        .on('mouseup', this._onMouseUp);\r\n    }\r\n\r\n    _onTouchStart(e) {\r\n        this._start(e.touches[0]);\r\n        Helper(document).on('touchmove', this._onTouchMove)\r\n                        .on('touchend', this._onTouchEnd);\r\n    }\r\n\r\n    _onMouseMove(e) {\r\n        this._moving(e, this.el);\r\n    }\r\n\r\n    _onTouchMove(e) {\r\n        this._moving(e.touches[0], this.el);\r\n    }\r\n\r\n    _onMouseUp(e) {\r\n        this._end(e, this.el);\r\n        Helper(document).off('mousemove', this._onMouseMove)\r\n                        .off('mouseup', this._onMouseUp);                        \r\n    }\r\n\r\n    _onTouchEnd(e) {\r\n        if (e.touches.length === 0) {\r\n            this._end(e.changedTouches[0], this.el);\r\n        }\r\n        Helper(document).off('touchmove', this._onTouchMove)\r\n                        .off('touchend', this._onTouchEnd);\r\n\r\n    }\r\n\r\n    onMove(data) {\r\n\r\n        this._drag(\r\n            data.diffTop, \r\n            data.diffLeft\r\n        );\r\n    }\r\n\r\n    onRotate(data) {\r\n\r\n        this._rotate(\r\n            data.radians\r\n        );\r\n    }\r\n\r\n    onResize(data) {\r\n    \r\n        const w = data.width !== null ? this.storage.cw + data.x : null;\r\n        const h = data.height !== null ? this.storage.ch + data.y : null;\r\n\r\n       this._resize(\r\n            w,\r\n            h,\r\n            data.revX,\r\n            data.revY\r\n        );\r\n    }\r\n\r\n    onApply(actionName) {\r\n        this._apply(actionName);\r\n    }\r\n}\r\n\r\nfunction loadOptions(options) {\r\n\r\n    addClass(this.el, 'dg-drag');\r\n\r\n\r\n    let snap = {\r\n        x: 10,\r\n        y: 10,\r\n        angle: 10 * RAD\r\n    };\r\n\r\n    let each = {\r\n        move: false,\r\n        resize: false,\r\n        rotate: false\r\n    }\r\n\r\n    if (isDef(options)) {\r\n\r\n        if (isDef(options.snap)) {\r\n\r\n            const { x, y, angle } = options.snap;\r\n\r\n            snap.x = isUndef(x) ? 10 : x;\r\n            snap.y = isUndef(y) ? 10 : y;\r\n            snap.angle = isUndef(angle) ? 10 * RAD : angle * RAD;\r\n        }\r\n        \r\n        if (isDef(options.each)) {\r\n\r\n            const { move, resize, rotate } = options.each;\r\n\r\n            each.move = move || false;\r\n            each.resize = resize || false;\r\n            each.rotate = rotate || false; \r\n        }    \r\n    }\r\n\r\n    const Ob = this.Ob;\r\n\r\n    if (each.move || each.resize || each.rotate) {\r\n        Ob.subscribe('onrefreshstate', this);\r\n        Ob.subscribe('onapply', this);\r\n    }\r\n\r\n    if (each.move) {\r\n        Ob.subscribe('onmove', this);\r\n    }\r\n    if (each.resize) {\r\n        Ob.subscribe('onresize', this);\r\n    }\r\n    if (each.rotate) {\r\n        Ob.subscribe('onrotate', this);\r\n    }\r\n\r\n    this.storage = {\r\n        drop: options && isFunc(options.drop) \r\n                ? drop = function(e) {\r\n                    store.drop(e, this.el);\r\n                } \r\n                : function() {},\r\n        snap,\r\n        each\r\n    };\r\n}","import { Helper } from '../helper'\r\nimport Subject from './subject'\r\n\r\nimport { \r\n    addClass,\r\n    getTransform,\r\n    parseMatrix,\r\n    getOffset\r\n} from '../util/css-util'\r\n\r\nimport {\r\n    snapToGrid,\r\n    snapCandidate,\r\n    rotatedTopLeft,\r\n    toPX,\r\n    fromPX,\r\n    getUnitDimension,\r\n    floatToFixed\r\n} from './common'\r\n\r\nconst brackets = '<div class=\"dg-hdl dg-rotator\"></div>\\\r\n        <div class=\"dg-hdl dg-hdl-t dg-hdl-l dg-hdl-tl\"></div>\\\r\n        <div class=\"dg-hdl dg-hdl-t dg-hdl-r dg-hdl-tr\"></div>\\\r\n        <div class=\"dg-hdl dg-hdl-b dg-hdl-r dg-hdl-br\"></div>\\\r\n        <div class=\"dg-hdl dg-hdl-b dg-hdl-l dg-hdl-bl\"></div>\\\r\n        <div class=\"dg-hdl dg-hdl-t dg-hdl-c dg-hdl-tc\"></div>\\\r\n        <div class=\"dg-hdl dg-hdl-b dg-hdl-c dg-hdl-bc\"></div>\\\r\n        <div class=\"dg-hdl dg-hdl-m dg-hdl-l dg-hdl-ml\"></div>\\\r\n        <div class=\"dg-hdl dg-hdl-m dg-hdl-r dg-hdl-mr\"></div>';\r\n\r\nexport default class Draggable extends Subject {\r\n\r\n    constructor(el, options, Observable) {\r\n        super(el, Observable);\r\n        this.enable(options);\r\n    }\r\n\r\n    _init(item, options) {\r\n        _init.call(this, item, options);\r\n    }\r\n\r\n    _destroy(item) {\r\n        _destroy.call(this, item);\r\n    }\r\n\r\n    _drag() {\r\n        processMove.call(this, ...arguments);\r\n    }\r\n\r\n    _rotate() {\r\n        processRotate.call(this, ...arguments);\r\n    }\r\n\r\n    _resize() {\r\n        processResize.call(this, ...arguments);\r\n    }\r\n\r\n    _compute() {\r\n        return _compute.call(this, ...arguments);\r\n    }\r\n\r\n    _apply() {\r\n\r\n        const {\r\n            cached,\r\n            parent,\r\n            dimens,\r\n            controls\r\n        } = this.storage;\r\n\r\n        if (!cached) return;\r\n\r\n        const matrix = [...cached];\r\n\r\n        const diffLeft = matrix[4];\r\n        const diffTop = matrix[5];\r\n\r\n        matrix[4] = 0;\r\n        matrix[5] = 0;\r\n\r\n        const css = matrixToCSS(matrix);\r\n        \r\n        css.top = fromPX(\r\n            parseFloat(this.el.style.top) + diffTop + 'px', \r\n            parent.css('height'), \r\n            dimens.top\r\n        ); \r\n\r\n        css.left = fromPX(\r\n            parseFloat(this.el.style.left) + diffLeft + 'px', \r\n            parent.css('width'), \r\n            dimens.left\r\n        );\r\n\r\n        Helper(this.el).css(css);\r\n        Helper(controls).css(css);\r\n\r\n        this.storage.cached = null;\r\n    }\r\n\r\n    onRefreshState(data) {\r\n\r\n        const store = this.storage;\r\n\r\n        const recalc = refreshState.call(this,\r\n            data.factor, \r\n            data.revX, \r\n            data.revY\r\n        );\r\n\r\n        Object.keys(recalc).forEach(key => {\r\n            store[key] = recalc[key];\r\n        });\r\n    }\r\n}\r\n\r\nfunction _init(sel) {\r\n\r\n    const wrapper = document.createElement('div');\r\n\r\n    addClass(wrapper, 'dg-wrapper');\r\n    sel.parentNode.insertBefore(wrapper, sel);\r\n\r\n    const container = wrapper;\r\n    const _sel = Helper(sel);\r\n\r\n    const w = _sel.css('width'),\r\n        h = _sel.css('height'),\r\n        t = _sel.css('top'),\r\n        l = _sel.css('left');\r\n\r\n    const _parent = Helper(container.parentNode);\r\n\r\n    const css = {\r\n        top: t,\r\n        left: l,\r\n        width: toPX(w, _parent.css('width')),\r\n        height: toPX(h, _parent.css('height')),\r\n        transform: getTransform(_sel)\r\n    };\r\n\r\n    const controls = document.createElement('div');\r\n    controls.innerHTML = brackets;\r\n\r\n    addClass(controls, 'dg-controls');\r\n\r\n    container.appendChild(controls);\r\n\r\n    const _controls = Helper(controls);\r\n    _controls.css(css);\r\n\r\n    const _container = Helper(container);\r\n\r\n    Object.assign(this.storage, {\r\n        controls: controls,\r\n        handles: {\r\n            tl: _container.find('.dg-hdl-tl'),\r\n            tr: _container.find('.dg-hdl-tr'),\r\n            br: _container.find('.dg-hdl-br'),\r\n            bl: _container.find('.dg-hdl-bl'),\r\n            tc: _container.find('.dg-hdl-tc'),\r\n            bc: _container.find('.dg-hdl-bc'),\r\n            ml: _container.find('.dg-hdl-ml'),\r\n            mr: _container.find('.dg-hdl-mr'),\r\n            rotator: _container.find('.dg-rotator')\r\n        },\r\n        parent: _parent\r\n    });\r\n\r\n    _controls.on('mousedown', this._onMouseDown)\r\n            .on('touchstart', this._onTouchStart);\r\n}\r\n\r\nfunction _destroy() {\r\n\r\n    const { controls } = this.storage;\r\n\r\n    Helper(controls).off('mousedown', this._onMouseDown)\r\n                    .off('touchstart', this._onTouchStart);\r\n\r\n    this.el.parentNode.removeChild(controls.parentNode);\r\n}\r\n\r\nfunction _compute(e) {\r\n\r\n    const {\r\n        el,\r\n        storage\r\n    } = this;\r\n\r\n    const {\r\n        handles,\r\n        controls: ctrls,\r\n        parent,\r\n        snap\r\n    } = storage;\r\n\r\n    const handle = Helper(e.target);\r\n\r\n    let factor = 1;\r\n\r\n    //reverse axis\r\n    const revX = handle.is(handles.tl) || \r\n                handle.is(handles.ml) || \r\n                handle.is(handles.bl) || \r\n                handle.is(handles.tc);\r\n\r\n    const revY = handle.is(handles.tl) || \r\n                handle.is(handles.tr) || \r\n                handle.is(handles.tc) || \r\n                handle.is(handles.ml);\r\n\r\n    //reverse angle\r\n    if (handle.is(handles.tr) || \r\n        handle.is(handles.bl)\r\n    ) {\r\n        factor = -1;\r\n    }\r\n\r\n    const tl_off = getOffset(handles.tl[0]),\r\n        tr_off = getOffset(handles.tr[0]);\r\n\r\n    const refang = Math.atan2(\r\n        tr_off.top - tl_off.top, \r\n        tr_off.left - tl_off.left\r\n    ) * factor;\r\n\r\n    const cw = parseFloat(\r\n        toPX(ctrls.style.width, parent.css('width'))\r\n    );\r\n    const ch = parseFloat(\r\n        toPX(ctrls.style.height, parent.css('height'))\r\n    );\r\n\r\n    const transform = parseMatrix(Helper(ctrls));\r\n\r\n    //getting current coordinates considering rotation angle                                                                                                  \r\n    const coords = rotatedTopLeft(\r\n        transform[4],\r\n        transform[5],\r\n        cw,\r\n        ch,\r\n        refang,\r\n        revX,\r\n        revY\r\n    );\r\n\r\n    const offset_ = getOffset(ctrls);\r\n\r\n    const center_x = offset_.left + cw / 2;\r\n    const center_y = offset_.top + ch / 2;\r\n\r\n    const pressang = Math.atan2(\r\n        e.pageY - center_y, \r\n        e.pageX - center_x\r\n    );\r\n\r\n    const _el = Helper(el);\r\n    const styleList = el.style;\r\n\r\n    const dimens = {\r\n        top: getUnitDimension(styleList.top || _el.css('top')),\r\n        left: getUnitDimension(styleList.left || _el.css('left')),\r\n        width: getUnitDimension(styleList.width || _el.css('width')),\r\n        height: getUnitDimension(styleList.height || _el.css('height'))\r\n    };\r\n\r\n    const parentTransform = parseMatrix(parent);\r\n\r\n    return {\r\n        parentScale: [parentTransform[0], parentTransform[3]],\r\n        transform,\r\n        cw,\r\n        ch,\r\n        center: {\r\n            x: center_x,\r\n            y: center_y\r\n        },\r\n        left: snapCandidate(transform[4], snap.x),\r\n        top: snapCandidate(transform[5], snap.y),\r\n        coordY: coords.top,\r\n        coordX: coords.left,\r\n        factor,\r\n        pressang,\r\n        refang,\r\n        revX,\r\n        revY,\r\n        handle,\r\n        onTopEdge: handle.is(handles.tl) || handle.is(handles.tc) || handle.is(handles.tr),\r\n        onLeftEdge: handle.is(handles.tl) || handle.is(handles.ml) || handle.is(handles.bl),\r\n        onRightEdge: handle.is(handles.tr) || handle.is(handles.mr) || handle.is(handles.br),\r\n        onBottomEdge: handle.is(handles.br) || handle.is(handles.bc) || handle.is(handles.bl),\r\n        dimens\r\n    }\r\n}\r\n\r\nfunction refreshState(factor, revX, revY) {\r\n\r\n    const {\r\n        controls: ctrls,\r\n        handles,\r\n        parent,\r\n        snap\r\n    } = this.storage;\r\n\r\n    const tl_off = getOffset(handles.tl[0]),\r\n        tr_off = getOffset(handles.tr[0]);\r\n\r\n    const refang = Math.atan2(\r\n        tr_off.top - tl_off.top,\r\n        tr_off.left - tl_off.left\r\n    ) * factor;\r\n\r\n    const cw = parseFloat(\r\n        toPX(ctrls.style.width, parent.css('width'))\r\n    );\r\n    const ch = parseFloat(\r\n        toPX(ctrls.style.height, parent.css('height'))\r\n    );\r\n\r\n    const transform = parseMatrix(Helper(ctrls));\r\n\r\n    //getting current coordinates considering rotation angle                                                                                                  \r\n    const coords = rotatedTopLeft(\r\n        transform[4],\r\n        transform[5],\r\n        cw,\r\n        ch,\r\n        refang,\r\n        revX,\r\n        revY\r\n    );\r\n\r\n    const _sel = Helper(this.el);\r\n    const styleList = this.el.style;\r\n\r\n    return {\r\n        transform: transform,\r\n        parentTransform: parseMatrix(parent),\r\n        left: snapCandidate(transform[4], snap.x),\r\n        top: snapCandidate(transform[5], snap.y),\r\n        coordX: coords.left,\r\n        coordY: coords.top,\r\n        refang: refang,\r\n        cw: cw,\r\n        ch: ch,\r\n        dimens: {\r\n            top: getUnitDimension(styleList.top || _sel.css('top')),\r\n            left: getUnitDimension(styleList.left || _sel.css('left')),\r\n            width: getUnitDimension(styleList.width || _sel.css('width')),\r\n            height: getUnitDimension(styleList.height || _sel.css('height'))\r\n        }\r\n    }\r\n}\r\n\r\nfunction processResize(\r\n    width,\r\n    height,\r\n    revX, \r\n    revY\r\n) {\r\n\r\n    const {\r\n        el,\r\n        storage\r\n    } = this;\r\n\r\n    const {\r\n        controls,\r\n        snap,\r\n        left,\r\n        top,\r\n        coordX,\r\n        coordY,\r\n        refang,\r\n        dimens,\r\n        parent,\r\n        transform\r\n    } = storage;\r\n\r\n    const { style } = controls;\r\n\r\n    if (width !== null) {\r\n        style.width = `${snapToGrid(width, snap.x)}px`;\r\n    }\r\n\r\n    if (height !== null) {\r\n        style.height = `${snapToGrid(height, snap.y)}px`;\r\n    }\r\n\r\n    const coords = rotatedTopLeft(\r\n        left,\r\n        top,\r\n        style.width,\r\n        style.height,\r\n        refang,\r\n        revX,\r\n        revY\r\n    );\r\n\r\n    const resultY = top - (coords.top - coordY),\r\n        resultX = left - (coords.left - coordX);\r\n\r\n    const matrix = [...transform];\r\n\r\n    matrix[4] = resultX;\r\n    matrix[5] = resultY;\r\n    \r\n    const css = matrixToCSS(matrix);\r\n\r\n    Helper(controls).css(css);\r\n\r\n    css.width = fromPX(\r\n        style.width, \r\n        parent.css('width'), \r\n        dimens.width\r\n    );\r\n\r\n    css.height = fromPX(\r\n        style.height, \r\n        parent.css('height'), \r\n        dimens.height\r\n    );\r\n\r\n    Helper(el).css(css);\r\n\r\n    storage.cached = matrix;\r\n}\r\n\r\nfunction processMove(\r\n    top,\r\n    left\r\n) {\r\n    const {\r\n        el,\r\n        storage\r\n    } = this;\r\n\r\n    const {\r\n        controls,\r\n        transform,\r\n        snap\r\n    } = storage;\r\n\r\n    const matrix = [...transform];\r\n\r\n    matrix[4] = snapToGrid(transform[4] + left, snap.x);\r\n    matrix[5] = snapToGrid(transform[5] + top, snap.y);\r\n        \r\n    const css = matrixToCSS(matrix);\r\n\r\n    Helper(controls).css(css);\r\n    Helper(el).css(css);\r\n\r\n    storage.cached = matrix;\r\n}\r\n\r\nfunction processRotate(radians) {\r\n\r\n    const {\r\n        el,\r\n        storage\r\n    } = this;\r\n\r\n    const {\r\n        controls,\r\n        transform,\r\n        refang,\r\n        snap\r\n    } = storage;\r\n\r\n    const matrix = [...transform];\r\n\r\n    const angle = snapToGrid(refang + radians, snap.angle);\r\n\r\n    //rotate(Xdeg) = matrix(cos(X), sin(X), -sin(X), cos(X), 0, 0);\r\n    matrix[0] = floatToFixed(Math.cos(angle));\r\n    matrix[1] = floatToFixed(Math.sin(angle));\r\n    matrix[2] = - floatToFixed(Math.sin(angle));\r\n    matrix[3] = floatToFixed(Math.cos(angle));\r\n\r\n    const css = matrixToCSS(matrix);\r\n\r\n    Helper(controls).css(css);\r\n    Helper(el).css(css);\r\n\r\n    storage.cached = matrix;\r\n}\r\n\r\nfunction matrixToCSS(arr) {\r\n\r\n    const style = `matrix(${arr.join()})`;\r\n\r\n    return {\r\n        transform: style,\r\n        webkitTranform: style,\r\n        mozTransform: style,\r\n        msTransform: style,\r\n        otransform: style                     \r\n    }\r\n}","import {\r\n    recalcPoint\r\n} from '../common'\r\n\r\nconst dRE = /([achlmqstvz])([^achlmqstvz]*)/gi;\r\nconst sepRE = /\\s*,\\s*|\\s+/g;\r\n\r\nfunction parsePath(path)  {\r\n\r\n    let match = dRE.lastIndex = 0;\r\n\r\n    const serialized = [];\r\n\r\n    while ((match = dRE.exec(path))) {\r\n\r\n        const cmd = match[1];\r\n        const upCmd = cmd.toUpperCase();\r\n\r\n        serialized.push({\r\n            relative: cmd !== upCmd,\r\n            key: upCmd,\r\n            cmd: cmd,\r\n            value: match[2].trim().split(sepRE).map(val => { \r\n                if (!isNaN(val)) {\r\n                    return Number(val);\r\n                }\r\n            })\r\n        });\r\n    }\r\n\r\n    return serialized;\r\n}\r\n\r\nexport function movePath(params) {\r\n\r\n    const { path, x, y } = params;\r\n\r\n    const serialized = parsePath(path);\r\n\r\n    let str = '';\r\n\r\n    let firstCommand = true;\r\n\r\n    for (let i = 0, len = serialized.length; i < len; i++) {\r\n\r\n        const item = serialized[i];\r\n\r\n        const { \r\n            value: values,\r\n            key: cmd,\r\n            relative\r\n        } = item;\r\n\r\n        switch (cmd) {\r\n            case 'M':\r\n                if (relative && !firstCommand) break;\r\n                values[0] = values[0] + x;\r\n                values[1] = values[1] + y;\r\n                break;\r\n            case 'A':\r\n                if (relative) break;\r\n                values[5] = values[5] + x;\r\n                values[6] = values[6] + y;\r\n                break;\r\n            case 'C':\r\n                if (relative) break;\r\n                values[0] = values[0] + x;\r\n                values[1] = values[1] + y;\r\n                values[2] = values[2] + x;\r\n                values[3] = values[3] + y;\r\n                values[4] = values[4] + x;\r\n                values[5] = values[5] + y;\r\n                break;\r\n            case 'H':\r\n                if (relative) break;\r\n                values[0] = values[0] + x;\r\n                break;\r\n            case 'V':\r\n                if (relative) break;\r\n                values[0] = values[0] + y;\r\n                break;\r\n            case 'L':\r\n            case 'T':\r\n                if (relative) break;\r\n                values[0] = values[0] + x;\r\n                values[1] = values[1] + y;\r\n                break;\r\n            \r\n            case 'Q':\r\n            case 'S':\r\n                if (relative) break;\r\n                values[0] = values[0] + x;\r\n                values[1] = values[1] + y;\r\n                values[2] = values[2] + x;\r\n                values[3] = values[3] + y;\r\n                break;\r\n            case 'Z':\r\n                values[0] = '';\r\n                break;\r\n        }\r\n\r\n        str += item.cmd + item.value.join(',') + ' ';\r\n        firstCommand = false;\r\n    }\r\n\r\n    return str;\r\n}\r\n\r\nexport function resizePath(params) {\r\n\r\n    const {\r\n        bBox,\r\n        path,\r\n        baseData,\r\n        dx,\r\n        dy,\r\n        revX,\r\n        revY,\r\n        fixedX,\r\n        fixedY\r\n    } = params;\r\n\r\n    const serialized = parsePath(path);\r\n\r\n    const { \r\n        width: boxW,\r\n        height: boxH\r\n    } = bBox;\r\n\r\n    let str = '';\r\n    const res = [];\r\n\r\n    let firstCommand = true;\r\n\r\n    for (let i = 0, len = serialized.length; i < len; i++) {\r\n\r\n        const item = serialized[i];\r\n\r\n        const { \r\n            value: values,\r\n            key: cmd,\r\n            relative\r\n        } = item;\r\n            \r\n        switch (cmd) {\r\n\r\n            case 'A': {\r\n\r\n                //A rx ry x-axis-rotation large-arc-flag sweep-flag x y\r\n                const [ rx, ry, x_axis_rot, large_arc_flag, sweep_flag, x, y ] = values;\r\n\r\n                const factorX = getFactor(revX),\r\n                    factorY = getFactor(revY);\r\n                \r\n                const params = [];\r\n\r\n                const newRx = rx + dx * factorX * (rx / boxW),\r\n                    newRy =  ry + dy * factorY * (ry / boxH);\r\n                \r\n                params.push(\r\n                    newRx,\r\n                    newRy,\r\n                    x_axis_rot,\r\n                    large_arc_flag,\r\n                    sweep_flag\r\n                );\r\n\r\n                if (relative) {\r\n\r\n                    params.push(\r\n                        setRelativeCoord(x, dx * factorX, boxW),\r\n                        setRelativeCoord(y, dy * factorY, boxH)\r\n                    );\r\n\r\n                } else {\r\n\r\n                    let valX = setCoord(x, dx, fixedX, boxW),\r\n                        valY = setCoord(y, dy, fixedY, boxH);\r\n\r\n                    const { resX, resY } = recalcPoint({\r\n                        x: valX,\r\n                        y: valY,\r\n                        ...baseData\r\n                    });\r\n\r\n                    params.push(\r\n                        resX,\r\n                        resY\r\n                    );\r\n                }\r\n\r\n                res.push(params);\r\n\r\n                break;\r\n            }\r\n\r\n            case 'C': {\r\n\r\n                //C x1 y1, x2 y2, x y (or c dx1 dy1, dx2 dy2, dx dy)\r\n                const [ x1, y1, x2, y2, x, y ] = values;\r\n\r\n                if (relative) {\r\n\r\n                    const factorX = getFactor(revX),\r\n                        factorY = getFactor(revY);\r\n\r\n                    res.push([\r\n                        setRelativeCoord(x1, dx * factorX, boxW),\r\n                        setRelativeCoord(y1, dy * factorY, boxH),\r\n                        setRelativeCoord(x2, dx * factorX, boxW),\r\n                        setRelativeCoord(y2, dy * factorY, boxH),\r\n                        setRelativeCoord(x, dx * factorX, boxW),\r\n                        setRelativeCoord(y, dy * factorY, boxH)\r\n                    ]);\r\n\r\n                } else {\r\n\r\n                    const factorX1 = revX && x1 > fixedX || !revX && x1 < fixedX ? -1 : 1,    \r\n                        factorY1 = revY && y1 > fixedY || !revY && y1 < fixedY ? -1 : 1,\r\n                        factorX2 = revX && x2 > fixedX || !revX && x2 < fixedX ? -1 : 1,    \r\n                        factorY2 = revY && y2 > fixedY || !revY && y2 < fixedY ? -1 : 1;\r\n\r\n                    const { resX: resX1, resY: resY1 } = recalcPoint({\r\n                        x: setCoord(x1, dx * factorX1, fixedX, boxW),\r\n                        y: setCoord(y1, dy * factorY1, fixedY, boxH),\r\n                        ...baseData\r\n                    });\r\n\r\n                    const { resX: resX2, resY: resY2 } = recalcPoint({\r\n                        x: setCoord(x2, dx * factorX2, fixedX, boxW),\r\n                        y: setCoord(y2, dy * factorY2, fixedY, boxH),\r\n                        ...baseData\r\n                    });\r\n\r\n                    const { resX: resX3, resY: resY3 } = recalcPoint({\r\n                        x: setCoord(x, dx, fixedX, boxW),\r\n                        y: setCoord(y, dy, fixedY, boxH),\r\n                        ...baseData\r\n                    });\r\n\r\n                    res.push([\r\n                        resX1,\r\n                        resY1,\r\n                        resX2,\r\n                        resY2,\r\n                        resX3,\r\n                        resY3\r\n                    ]);\r\n                }\r\n                break;\r\n            }\r\n\r\n            case 'H': {\r\n\r\n                if (relative) {\r\n                \r\n                    const factorX = getFactor(revX);\r\n                    res.push([\r\n                        setRelativeCoord(values[0], dx * factorX, boxW)\r\n                    ]);\r\n\r\n                } else {\r\n\r\n                    const { resX } = recalcPoint({\r\n                        x: setCoord(values[0], dx, fixedX, boxW),\r\n                        y: 0,\r\n                        ...baseData\r\n                    });\r\n\r\n                    res.push([resX]);\r\n                }\r\n                break;\r\n            }\r\n\r\n            case 'V': {\r\n\r\n                if (relative) {\r\n\r\n                    const factorY = getFactor(revY);\r\n\r\n                    res.push([\r\n                        setRelativeCoord(values[0], dy * factorY, boxH)\r\n                    ]);\r\n\r\n                } else {\r\n\r\n                    const { resY } = recalcPoint({\r\n                        x: 0,\r\n                        y: setCoord(values[0], dy, fixedY, boxH),\r\n                        ...baseData\r\n                    });\r\n\r\n                    res.push([resY]);\r\n                }\r\n                break;\r\n            }\r\n\r\n            case 'T':\r\n            case 'L': {\r\n\r\n                if (relative) {\r\n\r\n                    const factorX = getFactor(revX),\r\n                        factorY = getFactor(revY);\r\n\r\n                    res.push([\r\n                        setRelativeCoord(values[0], dx * factorX, boxW), \r\n                        setRelativeCoord(values[1], dy * factorY, boxH)\r\n                    ]);\r\n\r\n                } else {\r\n\r\n                    const { resX, resY } = recalcPoint({\r\n                        x: setCoord(values[0], dx, fixedX, boxW),\r\n                        y: setCoord(values[1], dy, fixedY, boxH),\r\n                        ...baseData\r\n                    });\r\n\r\n                    res.push([resX, resY]);\r\n                }\r\n                break;\r\n            }\r\n\r\n            case 'M': {\r\n\r\n                // M x y (or dx dy)\r\n                const [ x, y ] = values;\r\n\r\n                if (relative && !firstCommand) {\r\n\r\n                    const factorX = getFactor(revX),\r\n                        factorY = getFactor(revY);\r\n\r\n                    res.push([\r\n                        setRelativeCoord(x, dx * factorX, boxW), \r\n                        setRelativeCoord(y, dy * factorY, boxH)\r\n                    ]);\r\n\r\n                } else {\r\n\r\n                    const { resX, resY } = recalcPoint({\r\n                        x: setCoord(x, dx, fixedX, boxW),\r\n                        y: setCoord(y, dy, fixedY, boxH),\r\n                        ...baseData\r\n                    });\r\n\r\n                    res.push([resX, resY]);\r\n                }\r\n   \r\n                break;\r\n            }\r\n\r\n            case 'Q': {\r\n\r\n                //Q x1 y1, x y (or q dx1 dy1, dx dy)\r\n                const [x1, y1, x, y] = values;\r\n\r\n                if (relative) {\r\n\r\n                    const factorX = getFactor(revX),\r\n                        factorY = getFactor(revY);\r\n\r\n                    res.push([\r\n                        setRelativeCoord(x1, dx * factorX, boxW), \r\n                        setRelativeCoord(y1, dy * factorY, boxH), \r\n                        setRelativeCoord(x, dx * factorX, boxW), \r\n                        setRelativeCoord(y, dy * factorY, boxH)\r\n                    ]);\r\n\r\n                } else {\r\n\r\n                    const factorX = revX && x1 > fixedX || !revX && x1 < fixedX ? -1 : 1,    \r\n                        factorY = revY && y1 > fixedY || !revY && y1 < fixedY ? -1 : 1;\r\n\r\n                    const { resX: resX1, resY: resY1 } = recalcPoint({\r\n                        x: setCoord(x1, dx * factorX, fixedX, boxW),\r\n                        y: setCoord(y1, dy * factorY, fixedY, boxH),\r\n                        ...baseData\r\n                    });\r\n\r\n                    const { resX: resX2, resY: resY2 } = recalcPoint({\r\n                        x: setCoord(x, dx, fixedX, boxW),\r\n                        y: setCoord(y, dy, fixedY, boxH),\r\n                        ...baseData\r\n                    });\r\n\r\n                    res.push([resX1, resY1, resX2, resY2]);\r\n                }\r\n                \r\n                break;\r\n            }\r\n\r\n            case 'S': {\r\n\r\n                //S x2 y2, x y (or s dx2 dy2, dx dy)\r\n                const [ x2, y2, x, y ] = values;\r\n\r\n                if (relative) {\r\n\r\n                    const factorX = getFactor(revX),    \r\n                        factorY = getFactor(revY);\r\n\r\n                    res.push([\r\n                        setRelativeCoord(x2, dx * factorX, boxW),\r\n                        setRelativeCoord(y2, dy * factorY, boxH),\r\n                        setRelativeCoord(x, dx * factorX, boxW),\r\n                        setRelativeCoord(y, dy * factorY, boxH)\r\n                    ]);\r\n                } else {\r\n\r\n                    const factorX = revX && x2 > fixedX || !revX && x2 < fixedX ? -1 : 1,    \r\n                        factorY = revY && y2 > fixedY || !revY && y2 < fixedY ? -1 : 1;\r\n\r\n                    const { resX : resX1, resY: resY1 } = recalcPoint({\r\n                        x: setCoord(x2, dx * factorX, fixedX, boxW),\r\n                        y: setCoord(y2, dy * factorY, fixedY, boxH),\r\n                        ...baseData\r\n                    });\r\n\r\n                    const { resX : resX2, resY: resY2 } = recalcPoint({\r\n                        x: setCoord(x, dx, fixedX, boxW),\r\n                        y: setCoord(y, dy, fixedY, boxH),\r\n                        ...baseData\r\n                    });\r\n\r\n                    res.push([\r\n                        resX1,\r\n                        resY1,\r\n                        resX2,\r\n                        resY2\r\n                    ]);\r\n                }\r\n                break;\r\n            }\r\n\r\n            case 'Z': {\r\n                res.push(['']);\r\n                break;\r\n            }\r\n        }\r\n\r\n        str += item.cmd + res[i].join(',') + ' ';\r\n\r\n        firstCommand = false;\r\n    }\r\n\r\n    return str;\r\n}\r\n\r\nexport function setCoord(value, diff, fixed, dist) {\r\n    return value + diff * (Math.abs(value - fixed) / dist);\r\n}\r\n\r\nfunction setRelativeCoord(value, diff, dist) {\r\n    return value + diff * (value / dist);\r\n}\r\n\r\nexport function getFactor(b) {\r\n    return b === true ? -1 : 1;\r\n}","import { Helper } from '../../helper'\r\nimport Subject from '../subject'\r\n\r\nimport { \r\n    parseTransform,\r\n    getOffset\r\n} from '../../util/css-util'\r\n\r\nimport {\r\n    DEG,\r\n    snapToGrid,\r\n    snapCandidate,\r\n    rotatedTopLeft,\r\n    recalcPoint\r\n} from '../common'\r\n\r\nimport {\r\n    movePath,\r\n    resizePath,\r\n    setCoord,\r\n    getFactor\r\n} from './path'\r\nimport { isUndef } from '../../util/util';\r\n\r\nconst MIN_SIZE = 2; \r\nconst ROT_OFFSET = 25;\r\nconst floatRE = /[+-]?\\d+(\\.\\d+)?/g; \r\nconst translateRE = /translate\\(.*\\)(.*)translate\\(.*\\)|$/;\r\n\r\nexport default class DraggableSVG extends Subject {\r\n\r\n    constructor(el, options, Observable) {\r\n        super(el, Observable);\r\n        this.enable(options);\r\n    }\r\n\r\n    _init(item, options) {\r\n        _init.call(this, item, options);\r\n    }\r\n\r\n    _destroy(item) {\r\n        _destroy.call(this, item);\r\n    }\r\n\r\n    _drag() {\r\n        processMove.call(this, ...arguments);\r\n    }\r\n\r\n    _rotate() {\r\n        processRotate.call(this, ...arguments);\r\n    }\r\n\r\n    _resize() {\r\n        processResize.call(this, ...arguments);\r\n    }\r\n\r\n    _compute() {\r\n        return _compute.call(this, ...arguments);\r\n    }\r\n\r\n    _apply(actionName) {\r\n\r\n        const {\r\n            box, \r\n            handles,\r\n            refang,\r\n            factor,\r\n            wrapper,\r\n            cached,\r\n            transform\r\n        } = this.storage;\r\n\r\n        const translate = parseTransform(wrapper.getAttribute('transform') || 'translate(0 0)').translate;\r\n\r\n        const { x, y, width: newWidth, height: newHeight } = box.getBBox();\r\n\r\n        const dx = translate[0],\r\n            dy = translate[1],\r\n            resultX = x + dx,\r\n            resultY = y + dy;\r\n\r\n        const centerX = resultX + newWidth / 2,\r\n            centerY = resultY + newHeight / 2;\r\n\r\n        if (actionName !== 'rotate') {\r\n\r\n            applyTransformToHandles(box, handles, {\r\n                x: resultX,\r\n                y: resultY,\r\n                width: newWidth,\r\n                height: newHeight,\r\n                angle: refang * factor\r\n            });\r\n        }\r\n\r\n        if (actionName === 'drag') {\r\n\r\n            if (dx === 0 && dy === 0) return;\r\n                \r\n            wrapper.removeAttribute('transform');\r\n\r\n            const els = [];\r\n\r\n            if (this.el.tagName.toLowerCase() === 'g') {\r\n\r\n                this.el.childNodes.forEach(item => {\r\n                    if (item.nodeType === 1) {\r\n                        els.push(item);\r\n                    }\r\n                });\r\n\r\n                this.el.removeAttribute('transform');\r\n            } else {\r\n                els.push(this.el);\r\n            }\r\n\r\n            els.forEach((element) => {\r\n                applyTranslate(element, {\r\n                    x: dx,\r\n                    y: dy,\r\n                    angle: refang * factor * DEG,\r\n                    centerX,\r\n                    centerY\r\n                });\r\n            })\r\n        }\r\n\r\n        if (actionName === 'resize') {\r\n\r\n            if (isUndef(cached)) return;\r\n\r\n            const els = [];\r\n\r\n            const {\r\n                revX, \r\n                revY,\r\n                scaleX,\r\n                scaleY,\r\n                diffX,\r\n                diffY\r\n            } = cached;\r\n                \r\n            let isGroup = false;\r\n\r\n            if (this.el.tagName.toLowerCase() === 'g') {\r\n                this.el.childNodes.forEach(item => {\r\n                    if (item.nodeType === 1) {\r\n                        els.push(item);\r\n                    }\r\n                });\r\n                isGroup = true;\r\n            } else {\r\n                els.push(this.el);\r\n            }\r\n\r\n            els.forEach((element) => {\r\n\r\n                applyResize(element, {\r\n                    scaleX,\r\n                    scaleY,\r\n                    diffX: diffX * getFactor(revX),\r\n                    diffY: diffY * getFactor(revY),\r\n                    revX,\r\n                    revY,\r\n                    angle: refang * factor,\r\n                    factor,\r\n                    centerX,\r\n                    centerY,    \r\n                    bBox: isGroup === true \r\n                            ? transform.bBox \r\n                            : element.getBBox(),\r\n                    store: this.storage\r\n                });\r\n            });\r\n\r\n            this.storage.cached = null;\r\n        }\r\n    }\r\n\r\n    onRefreshState(data) {\r\n\r\n        const store = this.storage;\r\n\r\n        const recalc = refreshState.call(\r\n            this,\r\n            data\r\n        );\r\n\r\n        Object.keys(data).forEach(key => {\r\n            store[key] = data[key];\r\n        });\r\n\r\n        Object.keys(recalc).forEach(key => {\r\n            store[key] = recalc[key];\r\n        });\r\n    }\r\n}\r\n\r\nfunction _init(sel) {\r\n\r\n    const wrapper = createSVG('g');\r\n    sel.parentNode.appendChild(wrapper);\r\n\r\n    const {\r\n        width: w, \r\n        height: h, \r\n        x, \r\n        y\r\n    } = sel.getBBox();\r\n\r\n    const transform = sel.getAttribute('transform') || 'translate(0 0)';\r\n\r\n    const box = createSVG('rect');\r\n\r\n    const attrs = [\r\n        ['width', w],\r\n        ['height', h],\r\n        ['x', x],\r\n        ['y', y],\r\n        ['fill', 'transparent'],\r\n        ['stroke', '#00a8ff'],\r\n        ['stroke-dasharray', '3 3'],\r\n        ['transform', transform]\r\n    ];\r\n\r\n    attrs.forEach(item => {\r\n        box.setAttribute(item[0], item[1]);\r\n    });\r\n\r\n    let group = createSVG('g');\r\n        group.appendChild(box);\r\n\r\n    wrapper.appendChild(group);\r\n\r\n    const handles = {\r\n        tl: [x, y],\r\n        tr: [x + w, y],\r\n        br: [x + w, y + h],\r\n        bl: [x, y + h],\r\n        tc: [x + w / 2, y],\r\n        bc: [x + w / 2, y + h],\r\n        ml: [x, y + h / 2],\r\n        mr: [x + w, y + h / 2],\r\n        rotator: [x + w / 2, y - ROT_OFFSET]\r\n    };\r\n\r\n    Object.keys(handles).forEach(key => {\r\n        const data = handles[key];\r\n        handles[key] = createHandler(data[0], data[1], transform);\r\n        wrapper.appendChild(\r\n            createSVG('g').appendChild(handles[key]).parentNode\r\n        );\r\n    });\r\n\r\n    Object.assign(this.storage, {\r\n        wrapper,\r\n        box,\r\n        handles,\r\n        parent: wrapper.parentNode\r\n    });\r\n\r\n    Helper(wrapper).on('mousedown', this._onMouseDown)\r\n                    .on('touchstart', this._onTouchStart);\r\n}\r\n\r\nfunction _compute(e) {\r\n\r\n    const {\r\n        box,\r\n        handles,\r\n        snap,\r\n        parent\r\n    } = this.storage;\r\n\r\n    const handle = Helper(e.target);\r\n\r\n    let factor = 1;\r\n\r\n    //reverse axis\r\n    const revX = handle.is(handles.tl) ||\r\n                handle.is(handles.ml) ||\r\n                handle.is(handles.bl) ||\r\n                handle.is(handles.tc);\r\n\r\n    const revY = handle.is(handles.tl) || \r\n                handle.is(handles.tr) || \r\n                handle.is(handles.tc) || \r\n                handle.is(handles.ml);\r\n\r\n    //reverse angle\r\n    if (handle.is(handles.tr) || \r\n        handle.is(handles.bl)\r\n    ) { \r\n        factor = -1;\r\n    }\r\n\r\n    const tl_off = getOffset(handles.tl),\r\n        tr_off = getOffset(handles.tr); \r\n        \r\n    const refang = Math.atan2(\r\n        tr_off.top - tl_off.top, \r\n        tr_off.left - tl_off.left\r\n    ) * factor;\r\n\r\n    const bBox = box.getBBox();\r\n\r\n    const { width: cw, height: ch, x: c_left, y: c_top } = bBox;\r\n                                                                                                \r\n    const coords = rotatedTopLeft(\r\n        c_left,\r\n        c_top,\r\n        cw,\r\n        ch,\r\n        refang,\r\n        revX,\r\n        revY\r\n    );\r\n\r\n    const center_x = c_left + cw / 2;\r\n    const center_y = c_top + ch / 2;\r\n\r\n    const pressang = Math.atan2(\r\n        e.pageY - center_y,\r\n        e.pageX - center_x\r\n    );\r\n\r\n    const onTopEdge = handle.is(handles.tl) || handle.is(handles.tc) || handle.is(handles.tr),\r\n        onLeftEdge = handle.is(handles.tl) || handle.is(handles.ml) || handle.is(handles.bl),\r\n        onRightEdge = handle.is(handles.tr) || handle.is(handles.mr) || handle.is(handles.br),\r\n        onBottomEdge = handle.is(handles.br) || handle.is(handles.bc) || handle.is(handles.bl);\r\n\r\n    const transform = {\r\n        orig: this.el.getAttribute('transform'),\r\n        value: box.getAttribute('transform'),\r\n        scaleX: revX ? cw + c_left : c_left,\r\n        scaleY: revY ? ch + c_top : c_top,\r\n        bBox\r\n    };\r\n\r\n    return {\r\n        transform,\r\n        parentScale: parseTransform(parent.getAttribute('transform') || 'scale(1 1)').scale,\r\n        cw,\r\n        ch,\r\n        center: {\r\n            x: center_x,\r\n            y: center_y, \r\n        },\r\n        left: snapCandidate(c_left, snap.x),\r\n        top: snapCandidate(c_top, snap.y),\r\n        coordX: coords.left,\r\n        coordY: coords.top,\r\n        factor,\r\n        pressang,\r\n        refang,\r\n        revX,\r\n        revY,\r\n        handle,\r\n        onTopEdge,\r\n        onLeftEdge,\r\n        onRightEdge,\r\n        onBottomEdge\r\n    }\r\n}\r\n\r\nfunction _destroy() {\r\n\r\n    const { wrapper } = this.storage;\r\n\r\n    Helper(wrapper).off('mousedown', this._onMouseDown)\r\n                    .off('touchstart', this._onTouchStart);\r\n\r\n    this.el.parentNode.removeChild(wrapper);\r\n}\r\n\r\nfunction refreshState(params) {\r\n\r\n    const { \r\n        factor, \r\n        revX, \r\n        revY,\r\n    } = params;\r\n\r\n    const { \r\n        box,\r\n        handles,\r\n        snap\r\n    } = this.storage;\r\n\r\n    const tl_off = getOffset(handles.tl),\r\n        tr_off = getOffset(handles.tr);\r\n\r\n    let refang = Math.atan2(\r\n        tr_off.y - tl_off.y, \r\n        tr_off.x - tl_off.x\r\n    ) * factor;\r\n\r\n    const bBox = box.getBBox();\r\n\r\n    const { width: cw, height: ch, x: c_left, y: c_top } = bBox;\r\n                                                                                                 \r\n    const coords = rotatedTopLeft(\r\n        c_left,\r\n        c_top,\r\n        cw,\r\n        ch,\r\n        refang,\r\n        revX,\r\n        revY\r\n    );\r\n\r\n    const transform = {\r\n        orig: this.el.getAttribute('transform'),\r\n        value: box.getAttribute('transform'),\r\n        scaleX: revX ? cw + c_left : c_left,\r\n        scaleY: revY ? ch + c_top : c_top,\r\n        bBox\r\n    };\r\n\r\n    return {\r\n        transform,\r\n        cw,\r\n        ch,\r\n        center: {\r\n            x: c_left + cw / 2,\r\n            y: c_top + ch / 2\r\n        },\r\n        left: snapCandidate(c_left, snap.x),\r\n        top: snapCandidate(c_top, snap.y),\r\n        coordX: coords.left,\r\n        coordY: coords.top,\r\n        factor,\r\n        refang\r\n    }\r\n}\r\n\r\nfunction processResize(\r\n    width,\r\n    height,\r\n    revX, \r\n    revY\r\n) {\r\n\r\n    const {\r\n        box,\r\n        handles,\r\n        snap,\r\n        left,\r\n        top,\r\n        coordX,\r\n        coordY,\r\n        refang,\r\n        factor,\r\n        cw,\r\n        ch,\r\n        transform\r\n    } = this.storage;\r\n        \r\n    const sel = this.el;\r\n        \r\n    let newWidth = Number(box.getAttribute('width')),\r\n        newHeight = Number(box.getAttribute('height'));\r\n\r\n    if (width !== null) {\r\n        newWidth = snapToGrid(width, snap.x);\r\n    }\r\n\r\n    if (height !== null) {\r\n        newHeight = snapToGrid(height, snap.y);\r\n    }\r\n\r\n    if (Math.abs(newWidth) < MIN_SIZE || Math.abs(newHeight) < MIN_SIZE) return;\r\n\r\n    const coords = rotatedTopLeft(\r\n        left,\r\n        top,\r\n        newWidth,\r\n        newHeight,\r\n        refang,\r\n        revX,\r\n        revY\r\n    );\r\n\r\n    const resultY = top - (coords.top - coordY),\r\n        resultX = left - (coords.left - coordX);\r\n\r\n    applyTransformToHandles(box, handles, {\r\n        x: resultX,\r\n        y: resultY,\r\n        width: newWidth,\r\n        height: newHeight,\r\n        angle: refang * factor\r\n    });\r\n\r\n    const scaleX = newWidth / cw,\r\n        scaleY = newHeight / ch;\r\n\r\n    this.storage.cached = {\r\n        scaleX: scaleX,\r\n        scaleY: scaleY,\r\n        diffX: newWidth - cw,\r\n        diffY: newHeight - ch,\r\n        revX: revX,\r\n        revY: revY\r\n    };\r\n\r\n    const { scaleX: ptX, scaleY: ptY } = transform;\r\n\r\n    const scaleString = `translate(${ptX} ${ptY}) scale(${scaleX} ${scaleY}) translate(${-ptX} ${-ptY})`;\r\n\r\n    if (sel.tagName.toLowerCase() === 'g') {\r\n        sel.childNodes.forEach(element => {\r\n\r\n            if (element.nodeType !== 1) return;\r\n\r\n            const oldTransform = element.getAttribute('transform') || '';\r\n            element.setAttribute(\r\n                'transform', \r\n                oldTransform.replace(translateRE, scaleString)\r\n            );\r\n        });\r\n    } else {\r\n        const oldTransform = sel.getAttribute('transform') || '';\r\n        sel.setAttribute(\r\n            'transform', \r\n            oldTransform.replace(translateRE, scaleString)\r\n        );\r\n    }\r\n}\r\n\r\nfunction processMove(\r\n    top,\r\n    left\r\n) {\r\n    let {\r\n        snap,\r\n        transform,\r\n        wrapper\r\n    } = this.storage;\r\n\r\n    const originTransform = transform.orig || '';\r\n    \r\n    const x = snapToGrid(left, snap.x),\r\n        y = snapToGrid(top, snap.y);\r\n\r\n    const transformString = `translate(${x} ${y})`;\r\n    const newTransform = originTransform.replace(/translate\\(.+\\)|^/, transformString);\r\n\r\n    wrapper.setAttribute('transform', transformString);\r\n    this.el.setAttribute('transform', newTransform);\r\n}\r\n\r\nfunction processRotate(radians) {\r\n\r\n    const {\r\n        refang,\r\n        snap,\r\n        center,\r\n        box,\r\n        handles\r\n    } = this.storage;\r\n\r\n    const angle = snapToGrid(refang + radians, snap.angle);\r\n\r\n    const transform = `rotate(${angle * DEG} ${center.x} ${center.y})`;\r\n\r\n    box.setAttribute('transform', transform);\r\n\r\n    Object.keys(handles).forEach(hdl => {\r\n        handles[hdl].setAttribute('transform', transform);\r\n    });\r\n\r\n    if (this.el.tagName.toLowerCase() === 'g') {\r\n        this.el.childNodes.forEach((element) => {\r\n            if (element.nodeType !== 1) return;\r\n            element.setAttribute('transform', transform);\r\n        });\r\n    } else {\r\n        this.el.setAttribute('transform', transform);\r\n    }\r\n}\r\n\r\nfunction createSVG(name) {\r\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\r\n}\r\n\r\nfunction createHandler(l, t, transform) {\r\n\r\n    const handler = createSVG('circle');\r\n    \r\n    const items = {\r\n        cx: l,\r\n        cy: t,\r\n        r: 6,\r\n        fill: 'white',\r\n        stroke: '#00a8ff',\r\n        transform: transform\r\n    };\r\n\r\n    Object.keys(items).map(key => {\r\n        handler.setAttribute(key, items[key]);\r\n    });\r\n\r\n    return handler;\r\n}\r\n\r\nfunction applyTranslate(element, data) {\r\n\r\n    const {\r\n        x,\r\n        y,\r\n        angle,\r\n        centerX,\r\n        centerY\r\n    } = data;\r\n\r\n    const attrs = [\r\n        ['transform', `rotate(${angle} ${centerX} ${centerY})`]\r\n    ];\r\n\r\n    switch(element.tagName.toLowerCase()) {\r\n\r\n        case 'text':\r\n        case 'rect': {\r\n\r\n                let resX = Number(element.getAttribute('x')) + x,\r\n                    resY = Number(element.getAttribute('y')) + y;\r\n\r\n                attrs.push(\r\n                    ['x', resX],\r\n                    ['y', resY]\r\n                );\r\n            }\r\n            break;\r\n\r\n        case 'circle':\r\n        case 'ellipse': {\r\n\r\n                let resX = Number(element.getAttribute('cx')) + x,\r\n                    resY = Number(element.getAttribute('cy')) + y;\r\n\r\n                attrs.push(\r\n                    ['cx', resX],\r\n                    ['cy', resY]\r\n                );\r\n            }\r\n            break;\r\n        \r\n        case 'line': {\r\n\r\n                let resX1 = Number(element.getAttribute('x1')) + x,\r\n                    resY1 = Number(element.getAttribute('y1')) + y,\r\n                    resX2 = Number(element.getAttribute('x2')) + x,\r\n                    resY2 = Number(element.getAttribute('y2')) + y;\r\n\r\n                attrs.push(\r\n                    ['x1', resX1],\r\n                    ['y1', resY1],\r\n                    ['x2', resX2],\r\n                    ['y2', resY2]\r\n                );\r\n            }\r\n            break;\r\n\r\n        case 'polygon':\r\n        case 'polyline': {\r\n\r\n                const points = parsePoints(element.getAttribute('points'));\r\n                const result = points.map(item => { \r\n\r\n                    item[0] = Number(item[0]) + x;\r\n                    item[1] = Number(item[1]) + y;\r\n\r\n                    return item.join(' ');\r\n                }).join(' '); \r\n\r\n                attrs.push(\r\n                    ['points', result]\r\n                );\r\n            }\r\n            break;\r\n        \r\n        case 'path': {\r\n\r\n                const path = element.getAttribute('d');\r\n\r\n                attrs.push(['d', movePath(\r\n                    {\r\n                        path, \r\n                        x, \r\n                        y\r\n                    }\r\n                )]);\r\n            }\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n\r\n    attrs.forEach(item => {\r\n        element.setAttribute(item[0], item[1]);\r\n    });\r\n}\r\n\r\nfunction applyResize(element, data) {\r\n\r\n    const {\r\n        scaleX,\r\n        scaleY,\r\n        diffX,\r\n        diffY,\r\n        revX,\r\n        revY,\r\n        angle,\r\n        centerX,\r\n        centerY,\r\n        bBox,\r\n        store\r\n    } = data;\r\n\r\n    const {\r\n        onRightEdge,\r\n        onLeftEdge,\r\n        onTopEdge,\r\n        onBottomEdge,\r\n        center\r\n    } = store;\r\n\r\n    const { \r\n        x: boxX, \r\n        y: boxY, \r\n        width: boxW, \r\n        height: boxH\r\n    } = bBox;\r\n\r\n    let fixedX = 0, \r\n        fixedY = 0;\r\n    \r\n    if (onRightEdge) {\r\n        fixedX = boxX;\r\n    } \r\n    if (onLeftEdge) {\r\n        fixedX = boxX + boxW;\r\n    } \r\n    if (onTopEdge) {\r\n        fixedY = boxY + boxH;\r\n    } \r\n    if (onBottomEdge) {\r\n        fixedY = boxY;\r\n    }\r\n\r\n    const baseData = {\r\n        centerX: center.x,\r\n        centerY: center.y,\r\n        newCenterX: centerX,\r\n        newCenterY: centerY,\r\n        angle: angle\r\n    };\r\n\r\n    const attrs = [\r\n        ['transform', `rotate(${angle * DEG} ${centerX} ${centerY})`]\r\n    ];\r\n\r\n    switch(element.tagName.toLowerCase()) {\r\n\r\n        case 'text': {\r\n\r\n            const x = Number(element.getAttribute('x')),\r\n                y = Number(element.getAttribute('y'));\r\n\r\n            const { resX, resY } = recalcPoint({\r\n                x: setCoord(x, diffX, fixedX, boxW),\r\n                y: setCoord(y, diffY, fixedY, boxH),\r\n                ...baseData\r\n            });\r\n\r\n            attrs.push(\r\n                ['x', resX + (scaleX < 0 ? boxW : 0)],\r\n                ['y', resY + (scaleY < 0 ? boxH : 0)]\r\n            );\r\n        }\r\n        break;\r\n\r\n        case 'circle': {\r\n\r\n                const r = Number(element.getAttribute('r')),\r\n                    cx = Number(element.getAttribute('cx')),\r\n                    cy = Number(element.getAttribute('cy')),\r\n                    newR = r * (Math.abs(scaleX) + Math.abs(scaleY)) / 2;\r\n\r\n                const { resX, resY } = recalcPoint({\r\n                    x: setCoord(cx, diffX, fixedX, boxW),\r\n                    y: setCoord(cy, diffY, fixedY, boxH),\r\n                    ...baseData\r\n                });\r\n\r\n                attrs.push(\r\n                    ['r', newR],\r\n                    ['cx', resX],\r\n                    ['cy', resY]\r\n                );\r\n            }\r\n            break;\r\n\r\n        case 'rect': {\r\n\r\n                const width = Number(element.getAttribute('width')),\r\n                    height = Number(element.getAttribute('height')),\r\n                    x = Number(element.getAttribute('x')),\r\n                    y = Number(element.getAttribute('y'));\r\n\r\n                const { resX, resY } = recalcPoint({\r\n                    x: setCoord(x, diffX, fixedX, boxW),\r\n                    y: setCoord(y, diffY, fixedY, boxH),\r\n                    ...baseData\r\n                });\r\n\r\n                const newWidth = width * Math.abs(scaleX),\r\n                    newHeight = height * Math.abs(scaleY);\r\n\r\n                attrs.push(\r\n                    ['x', resX - (scaleX < 0 ? newWidth : 0)],\r\n                    ['y', resY - (scaleY < 0 ? newHeight : 0)],\r\n                    ['width', newWidth],\r\n                    ['height', newHeight]\r\n                );\r\n            }\r\n            break;\r\n    \r\n        case 'ellipse': {\r\n\r\n                const rx = Number(element.getAttribute('rx')),\r\n                    ry = Number(element.getAttribute('ry')),\r\n                    cx = Number(element.getAttribute('cx')),\r\n                    cy = Number(element.getAttribute('cy'));\r\n\r\n                const { resX, resY } = recalcPoint({\r\n                    x: setCoord(cx, diffX, fixedX, boxW),\r\n                    y: setCoord(cy, diffY, fixedY, boxH),\r\n                    ...baseData\r\n                });\r\n\r\n                attrs.push(\r\n                    ['rx', rx * Math.abs(scaleX)],\r\n                    ['ry', ry * Math.abs(scaleY)],\r\n                    ['cx', resX],\r\n                    ['cy', resY]\r\n                );\r\n            }\r\n            break;\r\n        \r\n        case 'line': {\r\n\r\n                const resX1 = Number(element.getAttribute('x1')),\r\n                    resY1 = Number(element.getAttribute('y1')),\r\n                    resX2 = Number(element.getAttribute('x2')),\r\n                    resY2 = Number(element.getAttribute('y2'));\r\n\r\n                const { resX : resX1_, resY: resY1_  } = recalcPoint({\r\n                    x: setCoord(resX1, diffX, fixedX, boxW),\r\n                    y: setCoord(resY1, diffY, fixedY, boxH),\r\n                    ...baseData\r\n                });\r\n\r\n                const { resX : resX2_, resY: resY2_  } = recalcPoint({\r\n                    x: setCoord(resX2, diffX, fixedX, boxW),\r\n                    y: setCoord(resY2, diffY, fixedY, boxH),\r\n                    ...baseData\r\n                });\r\n\r\n                attrs.push(\r\n                    ['x1', resX1_],\r\n                    ['y1', resY1_],\r\n                    ['x2', resX2_],\r\n                    ['y2', resY2_]\r\n                );\r\n            }\r\n            break;\r\n\r\n        case 'polygon':\r\n        case 'polyline': {\r\n\r\n                const points = parsePoints(element.getAttribute('points'));\r\n                const result = points.map(item => {\r\n\r\n                    const { resX, resY } = recalcPoint({\r\n                        x: setCoord(Number(item[0]), diffX, fixedX, boxW),\r\n                        y: setCoord(Number(item[1]), diffY, fixedY, boxH),\r\n                        ...baseData\r\n                    });\r\n\r\n                    item[0] = resX;\r\n                    item[1] = resY;\r\n\r\n                    return item.join(' ');\r\n\r\n                }).join(' ');\r\n\r\n                attrs.push(['points', result]);\r\n            }\r\n            break;\r\n        \r\n        case 'path': {\r\n\r\n                const path = element.getAttribute('d');\r\n\r\n                attrs.push(['d', resizePath(\r\n                    {\r\n                        bBox,\r\n                        path,\r\n                        baseData,\r\n                        dx: diffX, \r\n                        dy: diffY,\r\n                        revX,\r\n                        revY,\r\n                        fixedX,\r\n                        fixedY\r\n                    }\r\n                )]);\r\n            }\r\n            break;\r\n\r\n        default: {}\r\n            break;\r\n    }\r\n\r\n    attrs.forEach(attr => {\r\n        element.setAttribute(attr[0], attr[1]);\r\n    });\r\n}\r\n\r\nfunction applyTransformToHandles(box, handles, data) {\r\n\r\n    let { x, y, width, height, angle } = data;\r\n\r\n    const halfWidth = width / 2,\r\n        halfHeight = height / 2;\r\n\r\n    const newTransform = `rotate(${angle * DEG} ${x + halfWidth} ${y + halfHeight})`;\r\n\r\n    const attrs = {\r\n        tl: [x, y],\r\n        ml: [x, y + halfHeight],\r\n        bl: [x, y + height],\r\n        tc: [x + halfWidth, y],\r\n        tr: [x + width, y],\r\n        mr: [x + width, y + halfHeight],\r\n        br: [x + width, y + height],\r\n        bc: [x + halfWidth, y + height],\r\n        rotator: [x + halfWidth, y - ROT_OFFSET + (height < 0 ? height : 0)]\r\n    };\r\n\r\n    x = x + (width < 0 ? width : 0);\r\n    y = y + (height < 0 ? height : 0);\r\n\r\n    const boxAttrs = {\r\n        x: x,\r\n        y: y,\r\n        width: Math.abs(width),\r\n        height: Math.abs(height),\r\n        transform: newTransform\r\n    };\r\n\r\n    Object.keys(boxAttrs).forEach(attr => {\r\n        box.setAttribute(attr, boxAttrs[attr]);\r\n    });\r\n\r\n    Object.keys(handles).forEach(key => {\r\n        const hdl = handles[key];\r\n        hdl.setAttribute('cx', attrs[key][0]);\r\n        hdl.setAttribute('cy', attrs[key][1]);\r\n        hdl.setAttribute('transform', newTransform);\r\n    });\r\n}\r\n\r\nfunction parsePoints(pts) {\r\n    return pts.match(floatRE).reduce((result, value, index, array) => {\r\n        if (index % 2 === 0) {\r\n            result.push(array.slice(index, index + 2));\r\n        } \r\n        return result; \r\n    }, []);\r\n}","import Observable from '../observer/Observer'\r\nimport Draggable from './html'\r\nimport DraggableSVG from './svg/index'\r\n\r\nimport {\r\n    arrMap\r\n} from '../util/util'\r\n\r\n// factory method for creating draggable elements\r\nexport default function _drag(options) {\r\n    if (this.length) {\r\n        const Ob = new Observable();\r\n        return arrMap.call(this, item => {\r\n            if (!(item instanceof SVGElement)) {\r\n                return new Draggable(item, options, Ob);\r\n            } else {\r\n                return new DraggableSVG(item, options, Ob);\r\n            }   \r\n        })\r\n    }\r\n}","import { Helper } from '../helper'\r\n\r\nimport {\r\n    requestAnimFrame,\r\n    cancelAnimFrame,\r\n    warn,\r\n    isDef,\r\n    isUndef,\r\n    isFunc\r\n} from '../util/util'\r\n\r\nimport {\r\n   getOffset\r\n} from '../util/css-util'\r\n\r\n\r\nexport default class Clone {\r\n\r\n    constructor(el, options) {\r\n\r\n        this.el = el;\r\n        this.options = options || {};\r\n        this.storage = null;\r\n\r\n        this._onMouseDown = this._onMouseDown.bind(this);\r\n        this._onTouchStart = this._onTouchStart.bind(this);\r\n        this._onMouseMove = this._onMouseMove.bind(this);\r\n        this._onTouchMove = this._onTouchMove.bind(this);\r\n        this._onMouseUp = this._onMouseUp.bind(this);\r\n        this._onTouchEnd = this._onTouchEnd.bind(this);\r\n\r\n        this.enable();\r\n    }\r\n\r\n    enable() {\r\n        if (isUndef(this.storage)) {\r\n            this._init();\r\n        }  else {\r\n            warn('Already enabled');\r\n        }\r\n    }\r\n\r\n    disable() {\r\n        _destroy.call(this);\r\n    }\r\n\r\n    _init() {\r\n        _init.call(this);\r\n    }\r\n\r\n    _draw(el) {\r\n        _draw.call(this, el);\r\n    }\r\n\r\n    _onMouseDown(e) {\r\n        _start.call(this, e);\r\n        Helper(document).on('mousemove', this._onMouseMove)\r\n                        .on('mouseup', this._onMouseUp);\r\n    }\r\n\r\n    _onMouseMove(e) {\r\n        _move.call(this, e);\r\n    }\r\n\r\n    _onMouseUp(e) {\r\n        _end.call(this, e);\r\n        Helper(document).off('mousemove', this._onMouseMove)\r\n                        .off('mouseup', this._onMouseUp);\r\n    }\r\n\r\n    _onTouchStart(e) {\r\n        _start.call(this, e.touches[0]);\r\n        Helper(document).on('touchmove', this._onTouchMove)\r\n                        .on('touchend', this._onTouchEnd);\r\n    }\r\n\r\n    _onTouchMove(e) {\r\n        _move.call(this, e.touches[0]);\r\n    }\r\n\r\n    _onTouchEnd(e) {\r\n\r\n        if (e.touches.length === 0) {\r\n            _end.call(this, e.changedTouches[0]);\r\n        }\r\n        Helper(document).off('touchmove', this._onTouchMove)\r\n                        .off('touchend', this._onTouchEnd);\r\n    }\r\n}\r\n\r\nfunction _init() {\r\n\r\n    const ctx = this;\r\n\r\n    const sel = ctx.el;\r\n    const _sel = Helper(sel);\r\n\r\n    const {\r\n        style,\r\n        drop,\r\n        appendTo,\r\n        stack\r\n    } = ctx.options;\r\n\r\n    let css = {\r\n        width: _sel.css('width'),\r\n        height: _sel.css('height'),\r\n        margin: 0,\r\n        padding: 0,\r\n        position: 'absolute'\r\n    };\r\n\r\n    if (isUndef(style)) {\r\n        css.border = '#32B5FE 1px dashed';\r\n        css.background = 'transparent';\r\n        css.transform = 'none';\r\n    } else if (typeof style === 'object') {\r\n        css = { ...style };\r\n    }\r\n\r\n    let onDrop = function() {};\r\n\r\n    if (isFunc(drop)) {\r\n        onDrop = function(evt) {\r\n            const {\r\n                clone,\r\n                stack\r\n            } = this.storage;\r\n\r\n            let result = true;\r\n            if (isDef(stack)) {\r\n                result = objectsCollide(\r\n                            clone, \r\n                            stack\r\n                        );\r\n            }\r\n            if (result) {\r\n                drop.call(this, evt, this.el, clone);\r\n            }\r\n        }\r\n    }\r\n\r\n    const storage = {\r\n        onDrop,\r\n        options: this.options,\r\n        css,\r\n        parent: Helper(appendTo || 'body')[0],\r\n        stack: Helper(stack)[0]\r\n    };\r\n\r\n    ctx.storage = storage;\r\n\r\n    _sel.on('mousedown', this._onMouseDown)\r\n        .on('touchstart', this._onTouchStart);\r\n}\r\n\r\nfunction _start(e) {\r\n\r\n    if (e.stopImmediatePropagation) {\r\n        e.stopImmediatePropagation();\r\n    }\r\n    \r\n    const { \r\n        storage,\r\n        el: sel\r\n    } = this;\r\n\r\n    const { \r\n        options,\r\n        parent,\r\n        css\r\n    } = storage; \r\n\r\n    const clone = options.style === 'clone' \r\n                    ? sel.cloneNode(true)\r\n                    : document.createElement('div');\r\n\r\n    const offset = getOffset(parent);\r\n\r\n    css.left = `${(e.pageX - offset.left)}px`;\r\n    css.top = `${(e.pageY - offset.top)}px`;\r\n\r\n    Helper(clone).css(css);\r\n\r\n    storage.pageX = e.pageX;\r\n    storage.pageY = e.pageY;\r\n    storage.cx = e.pageX;\r\n    storage.cy = e.pageY;\r\n    storage.clone = clone;\r\n\r\n    Helper(parent)[0].appendChild(clone);\r\n    this._draw(clone);\r\n}\r\n\r\nfunction _move(e) {\r\n\r\n    if (e.preventDefault) {\r\n        e.preventDefault();\r\n    }\r\n\r\n    const { storage } = this;\r\n\r\n    storage.pageX = e.pageX;\r\n    storage.pageY = e.pageY;\r\n    storage.doDraw = true;\r\n    storage.doMove = true;\r\n}\r\n\r\nfunction _end(e) {\r\n\r\n    if (e.stopImmediatePropagation) {\r\n        e.stopImmediatePropagation();\r\n    }\r\n\r\n    const { \r\n        storage\r\n    } = this;\r\n\r\n    const {\r\n        clone,\r\n        frameId,\r\n        onDrop\r\n    } = storage;\r\n\r\n    storage.doDraw = false;\r\n    cancelAnimFrame(frameId);\r\n\r\n    if (isUndef(clone)) return;\r\n\r\n    onDrop.call(this, e);\r\n    clone.parentNode.removeChild(clone);\r\n\r\n    delete storage.clone;\r\n}\r\n\r\nfunction _draw(clone) {\r\n\r\n    const ctx = this;\r\n\r\n    function animate() {\r\n\r\n        const { storage } = ctx;\r\n\r\n        storage.frameId = requestAnimFrame(animate);\r\n\r\n        const {\r\n            doDraw,\r\n            pageX,\r\n            pageY,\r\n            cx,\r\n            cy\r\n        } = storage;\r\n\r\n        if (!doDraw) return;\r\n        storage.doDraw = false;\r\n\r\n        const translate = `translate(${pageX - cx}px, ${pageY - cy}px)`;\r\n\r\n        Helper(clone).css({\r\n            transform: translate,\r\n            webkitTranform: translate,\r\n            mozTransform: translate,\r\n            msTransform: translate,\r\n            otransform: translate \r\n        });\r\n    }\r\n\r\n    animate();\r\n}\r\n\r\nfunction _destroy() {\r\n\r\n    if (isUndef(this.storage)) return;\r\n    Helper(this.el).off('mousedown', this._onMouseDown)\r\n                    .off('touchstart', this._onTouchStart);\r\n    delete this.storage;\r\n}\r\n\r\nfunction objectsCollide(a, b) {\r\n\r\n    const { top: aTop, left: aLeft } = getOffset(a),\r\n        { top: bTop, left: bLeft } = getOffset(b),\r\n        _b = Helper(b);\r\n\r\n    return !(\r\n        (aTop < bTop) ||\r\n        (aTop > (bTop + _b.css('height'))) ||\r\n        (aLeft < bLeft) ||\r\n        (aLeft > (bLeft + _b.css('width')))\r\n    )\r\n}","import {\r\n    arrMap\r\n} from '../util/util'\r\n\r\nimport Clone from './clone'\r\n\r\nexport default function _clone(options) {\r\n    if (this.length) {\r\n        return arrMap.call(this, item => {\r\n            return new Clone(item, options);\r\n        })\r\n    }\r\n}","/* @license\r\n * Move/Rotate/Resize tool\r\n * Released under the MIT license, 2018-2019\r\n * nichollascarter@gmail.com\r\n*/\r\n\r\nimport '../style/subjx.css'\r\nimport _drag from './core/transform/index'\r\nimport _clone from './core/clone/index'\r\nimport { Helper_ } from './core/helper'\r\n\r\nclass Subjx extends Helper_ {\r\n\r\n    constructor(params) {\r\n        super(params);\r\n    }\r\n\r\n    drag(method) {\r\n        return _drag.call(this, method);\r\n    }\r\n    clone(method) {\r\n        return _clone.call(this, method);\r\n    }\r\n}\r\n\r\nexport default function(params) {\r\n    return new Subjx(params);\r\n}"],"sourceRoot":""}