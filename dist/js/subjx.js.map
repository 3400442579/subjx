{"version":3,"sources":["webpack://subjx/webpack/bootstrap","webpack://subjx/./src/js/core/util/util.js","webpack://subjx/./src/js/core/Helper.js","webpack://subjx/./src/js/core/observable/Observable.js","webpack://subjx/./src/js/core/util/css-util.js","webpack://subjx/./src/js/core/transform/common.js","webpack://subjx/./src/js/core/transform/Subject.js","webpack://subjx/./src/js/core/transform/html.js","webpack://subjx/./src/js/core/transform/svg/util.js","webpack://subjx/./src/js/core/transform/svg/path.js","webpack://subjx/./src/js/core/transform/svg/index.js","webpack://subjx/./src/js/core/transform/index.js","webpack://subjx/./src/js/core/clone/clone.js","webpack://subjx/./src/js/core/clone/index.js","webpack://subjx/./src/js/core/Subjx.js","webpack://subjx/./src/js/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","requestAnimFrame","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","msRequestAnimationFrame","f","setTimeout","cancelAnimFrame","cancelAnimationFrame","mozCancelAnimationFrame","requestID","clearTimeout","forEach","Array","arrSlice","slice","arrMap","map","arrReduce","reduce","warn","console","isDef","val","isUndef","isFunc","Helper","params","_classCallCheck","this","Error","selector","document","querySelectorAll","length","count","nodeType","_typeof","isArray","prop","methods","setStyle","options","obj","len","style","_setStyle","getStyle","currentStyle","defaultView","getComputedStyle","_getStyle","apply","arguments","concat","sel","helper","fn","index","arr","events","addEventListener","attachEvent","listenerDelegate","removeEventListener","detachEvent","_sel","el","evt","handler","act","doit","event","target","matches","parentNode","Observable","Observable_classCallCheck","observers","eventName","sub","obs","push","indexOf","splice","source","data","observer","notifyMove","notifyRotate","notifyResize","notifyApply","notifyGetState","getOffset","node","getBoundingClientRect","getTransform","css","parseMatrix","transform","match","item","parseFloat","addClass","cls","classList","add","split","cl","removeClass","remove","RAD","Math","PI","snapToGrid","snap","result","gridSize","round","snapCandidate","rotatedTopLeft","x","y","width","height","rotationAngle","revX","revY","hw","hh","cx","cy","dx","dy","rotatedTopLeftAngle","atan2","radius","sqrt","pow","cos","sin","ry","left","floatToFixed","top","size","undefined","Number","toFixed","Subject","observable","Subject_classCallCheck","constructor","TypeError","storage","proxyMethods","_onMouseDown","_onTouchStart","_onMouseMove","_onTouchMove","_onMouseUp","_onTouchEnd","_animate","_processOptions","_init","onExecution","_end","off","_destroy","unsubscribe","onDestroy","_this$proxyMethods$on","_processMove","onMove","_this$proxyMethods$on2","_processRotate","onRotate","_this$proxyMethods$on3","_processResize","onResize","_snap","angle","_each","move","resize","rotate","_restrict","_proportions","_axis","_cursorMove","_cursorResize","_cursorRotate","_themeColor","_rotationPoint","_onInit","_onMove","_onRotate","_onResize","_onDrop","_onDestroy","_container","each","axis","cursorMove","cursorResize","cursorRotate","rotationPoint","restrict","onInit","onDrop","container","proportions","themeColor","createEvent","subscribe","self","frame","doDraw","dox","doy","clientX","clientY","doDrag","doResize","doRotate","doSetCenter","moveEach","resizeEach","rotateEach","_this$_pointToElement","_pointToElement","scX","scY","_resize","notify","restrictOffset","elementOffset","nx","ny","_drag","pressang","center","radians","_rotate","bx","by","_this$_pointToControl","_pointToControls","_moveCenterHandle","e","stopImmediatePropagation","computed","_compute","keys","onRightEdge","onBottomEdge","onTopEdge","onLeftEdge","handle","factor","handles","is","rotator","_this$_cursorPoint","_cursorPoint","_this$_pointToElement2","_this$_pointToControl2","cursor","test","ml","mr","tl","tr","bl","br","bc","tc","_draw","preventDefault","_this$_cursorPoint2","body","action","_apply","_start","on","touches","_moving","changedTouches","actionName","recalc","_getState","ob","Draggable","_this","html_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","enable","createElement","insertBefore","$el","_el$style","w","h","$parent","controls","normal","element","createHandler","appendChild","getAttribute","$controls","$container","find","parent","wrapper","removeChild","_computed","ctm","_toConsumableArray","matrix","_applyMatrixToPoint","matrixInvert","multiplyMatrixAndPoint","globalMatrix","cached","hW","hH","cHandle","isDefCenter","centerX","centerY","setAttribute","matrixToCSS","coords","cw","ch","refang","ratio","newWidth","newHeight","newCoords","pctm","parentMatrix","n_matrix","translateMatrix","rotMatrix","multiplyMatrix","tl_off","tr_off","containerMatrix","pMatrix","offset_","cDelta","hx","hy","join","webkitTranform","mozTransform","msTransform","otransform","point","_matrix","_slicedToArray","a","b","M","dim","I","C","j","ii","mtrx1","mtrx2","m1","m2","k","sum","ALLOWED_ELEMENTS","createSVGElement","createElementNS","createSVGMatrix","getTransformToElement","toElement","g","getScreenCTM","inverse","multiply","matrixToString","pointTo","svg","pt","createSVGPoint","matrixTransform","cloneMatrix","dRE","sepRE","parsePath","path","lastIndex","serialized","exec","cmd","upCmd","toUpperCase","replace","relative","values","trim","isNaN","floatRE","DraggableSVG","svg_classCallCheck","svg_possibleConstructorReturn","svg_getPrototypeOf","_el$getBBox","getBBox","elCTM","box","handlesGroup","normalLineGroup","group","_box$getBBox","bX","bY","bW","bH","boxCTM","boxCenter","createPoint","theta","normalLine","x1","baseVal","y1","x2","y2","setLineStyle","color","items","fill","stroke","fill-opacity","vector-effect","eBBox","elX","elY","elW","elH","scaleX","scaleY","ox","oy","eM","isGroup","checkChildElements","child","newPT","isIdentity","applyTranslate","_box$getBBox2","applyTransformToHandles","applyResize","defaultCTM","__ctm__","bBox","_this$storage","scMatrix","trMatrix","ptX","ptY","_box$getBBox3","abs","scaleMatrix","res","_this$storage2","wrapperMatrix","moveWrapper","_pointTo","moveElement","isShifted","radiusMatrix","_pointTo2","_this$storage3","wrapMatrix","el_x","el_y","resRotMatrix","elMatrix","el_w","el_h","_box$getBBox4","c_left","c_top","boxCenterX","boxCenterY","_pointTo3","bcx","bcy","_ref","elcx","elcy","_pointTo4","rcx","rcy","_this$storage4","_box$getBBox5","_pointTo5","attrs","tagName","toLowerCase","resX","resY","resX1","resY1","resX2","resY2","parsePoints","str","space","firstCommand","coordinates","_values$slice2","path_slicedToArray","set","path_toConsumableArray","_values$slice4","_values$slice6","err","movePath","boxW","boxH","localCTM","_pointTo6","newR","_pointTo7","_pointTo8","rx","_pointTo9","cx1","cy1","_pointTo10","nRx","nRy","_pointTo11","resX1_","resY1_","_pointTo12","resX2_","resY2_","_pointTo13","_values$slice8","x_axis_rot","large_arc_flag","sweep_flag","mtrx","newRx","newRy","unshift","_values$slice10","_values$slice16","_values$slice18","_values$slice20","_values$slice22","resizePath","attr","boxAttrs","hdl","arrOfElements","childNodes","svg_toConsumableArray","pts","array","line","drag","obInstance","Ob","SVGElement","checkElement","Clone","clone_classCallCheck","appendTo","stack","_objectSpread","position","z-index","clone_typeof","dropZone","clone","_getOffset","aTop","aLeft","_getOffset2","bTop","bLeft","_a","_b","objectsCollide","offset","cloneNode","doMove","frameId","translate","_move","Subjx","Subjx_classCallCheck","Subjx_possibleConstructorReturn","Subjx_getPrototypeOf","subjx","__webpack_exports__","js_subjx","Subjx_Subjx","Observable_Observable"],"mappings":"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","file":"js/subjx.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export const requestAnimFrame = requestAnimationFrame ||\r\n    mozRequestAnimationFrame ||\r\n    webkitRequestAnimationFrame ||\r\n    msRequestAnimationFrame ||\r\n    function (f) {\n        return setTimeout(f, 1000 / 60);\n    };\r\n\r\nexport const cancelAnimFrame = cancelAnimationFrame ||\r\n    mozCancelAnimationFrame ||\r\n    function (requestID) {\n        clearTimeout(requestID);\n    };\r\n\r\nexport const forEach = Array.prototype.forEach,\r\n    arrSlice = Array.prototype.slice,\r\n    arrMap = Array.prototype.map,\r\n    arrReduce = Array.prototype.reduce,\r\n    warn = console.warn;\r\n\r\nexport function isDef(val) {\n    return val !== undefined && val !== null;\n}\r\n\r\nexport function isUndef(val) {\n    return val === undefined || val === null;\n}\r\n\r\nexport function isFunc(val) {\n    return typeof val === 'function';\n}","import {\r\n    isDef,\r\n    arrSlice,\r\n    warn\r\n} from './util/util';\r\n\r\nexport default class Helper {\r\n\r\n    constructor(params) {\n        if (isDef(params)) {\n            if (typeof params === 'string') {\n                let selector = document.querySelectorAll(params);\r\n                this.length = selector.length;\r\n                for (let count = 0; count < this.length; count++) {\n                    this[count] = selector[count];\n                }\n            } else if (params.nodeType === 1 || params === document) {\n                this[0] = params;\r\n                this.length = 1;\n            } else if (params instanceof Helper || typeof params === 'object') {\n                this.length = params.length;\r\n                for (let count = 0; count < this.length; count++) {\n                    this[count] = params[count];\n                }\n            } else if (Array.isArray(params)) {\n                this.length = 0;\r\n                for (let count = 0; count < this.length; count++) {\n                    if (params.nodeType === 1) {\n                        this[count] = params[count];\r\n                        this.length++;\n                    }\n                }\n            }\n        } else {\n            throw new Error(`Passed parameter must be selector/element/elementArray`);\n        }\n    }\r\n\r\n    css(prop) {\n        const methods = {\r\n            setStyle(options) {\n                return _setStyle(this, options);\n            },\r\n\r\n            getStyle() {\n                return _getStyle(this);\n            }\r\n        };\r\n\r\n        if (typeof prop === 'string') {\n            return methods.getStyle.apply(this, arrSlice.call(arguments, 1));\n        } else if (typeof prop === 'object' || !prop) {\n            return methods.setStyle.apply(this, arguments);\n        } else {\n            warn(`Method ${prop} does not exist`);\n        }\r\n        return false;\r\n\r\n\r\n        function _getStyle(obj) {\n            let len = obj.length;\r\n\r\n            while (len--) {\n                if (obj[len].currentStyle) {\n                    return obj[len].currentStyle[prop];\n                } else if (document.defaultView && document.defaultView.getComputedStyle) {\n                    return document.defaultView.getComputedStyle(obj[len], '')[prop];\n                } else {\n                    return obj[len].style[prop];\n                }\n            }\n        }\r\n\r\n        function _setStyle(obj, options) {\n            let len = obj.length;\r\n\r\n            while (len--) {\n                for (let property in options) {\n                    obj[len].style[property] = options[property];\n                }\n            }\r\n            return obj.style;\n        }\n    }\r\n\r\n    find(sel) {\n        let len = this.length,\r\n            selector;\r\n\r\n        while (len--) {\n            selector = this[len].querySelectorAll(sel);\r\n            return helper(selector);\n        }\n    }\r\n\r\n    each(fn) {\n        const arr = arrSlice.call(this, 0);\r\n\r\n        for (let index = arr.length - 1; index >= 0; --index) {\n            let func = function () {\n                return arr[index];\n            };\r\n            fn.call(func());\n        }\r\n        return this;\n    }\r\n\r\n    on() {\n        let len = this.length;\r\n\r\n        while (len--) {\n            if (!this[len].events) {\n                this[len].events = {};\r\n                this[len].events[arguments[0]] = [];\n            }\r\n\r\n            if (arguments.length === 2) {\n                if (document.addEventListener) {\n                    this[len].addEventListener(arguments[0], arguments[1], false);\n                } else if (document.attachEvent) {\n                    this[len].attachEvent(`on${arguments[0]}`, arguments[1]);\n                } else {\n                    this[len][`on${arguments[0]}`] = arguments[1];\n                }\n            } else if (arguments.length === 3 && typeof (arguments[1]) === 'string') {\n                listenerDelegate(this[len], arguments[0], arguments[1], arguments[2], true);\n            }\n        }\r\n        return this;\n    }\r\n\r\n    off() {\n        let len = this.length;\r\n\r\n        while (len--) {\n            if (!this[len].events) {\n                this[len].events = {};\r\n                this[len].events[arguments[0]] = [];\n            }\r\n\r\n            if (arguments.length === 2) {\n                if (document.removeEventListener) {\n                    this[len].removeEventListener(arguments[0], arguments[1], false);\n                } else if (document.detachEvent) {\n                    this[len].detachEvent(`on${arguments[0]}`, arguments[1]);\n                } else {\n                    this[len][`on${arguments[0]}`] = null;\n                }\n            } else if (arguments.length === 3 && typeof (arguments[1]) === 'string') {\n                listenerDelegate(this[len], arguments[0], arguments[1], arguments[2], false);\n            }\n        }\r\n\r\n        return this;\n    }\r\n\r\n    is(selector) {\n        const _sel = helper(selector);\r\n        let len = this.length;\r\n\r\n        while (len--) {\n            if (this[len] === _sel[len]) return true;\n        }\r\n        return false;\n    }\r\n\n}\r\n\r\nfunction listenerDelegate(el, evt, sel, handler, act) {\n    const doit = function (event) {\n        let t = event.target;\r\n        while (t && t !== this) {\n            if (t.matches(sel)) {\n                handler.call(t, event);\n            }\r\n            t = t.parentNode;\n        }\n    };\r\n\r\n    if (act === true) {\n        if (document.addEventListener) {\n            el.addEventListener(evt, doit, false);\n        } else if (document.attachEvent) {\n            el.attachEvent(`on${evt}`, doit);\n        } else {\n            el[`on${evt}`] = doit;\n        }\n    } else {\n        if (document.removeEventListener) {\n            el.removeEventListener(evt, doit, false);\n        } else if (document.detachEvent) {\n            el.detachEvent(`on${evt}`, doit);\n        } else {\n            el[`on${evt}`] = null;\n        }\n    }\n}\r\n\r\nexport function helper(params) {\n    return new Helper(params);\n}","import { isDef, isUndef } from '../util/util';\r\n\r\nexport default class Observable {\r\n\r\n    constructor() {\n        this.observers = {};\n    }\r\n\r\n    subscribe(eventName, sub) {\n        const obs = this.observers;\r\n\r\n        if (isUndef(obs[eventName])) {\n            Object.defineProperty(obs, eventName, {\r\n                value: []\r\n            });\n        }\r\n\r\n        obs[eventName].push(sub);\r\n\r\n        return this;\n    }\r\n\r\n    unsubscribe(eventName, f) {\n        const obs = this.observers;\r\n\r\n        if (isDef(obs[eventName])) {\n            const index = obs[eventName].indexOf(f);\r\n            obs[eventName].splice(index, 1);\n        }\r\n\r\n        return this;\n    }\r\n\r\n    notify(eventName, source, data) {\n        if (isUndef(this.observers[eventName])) return;\r\n\r\n        this.observers[eventName].forEach(observer => {\n            if (source === observer) return;\r\n            switch (eventName) {\n\r\n            case 'onmove':\r\n                observer.notifyMove(data);\r\n                break;\r\n            case 'onrotate':\r\n                observer.notifyRotate(data);\r\n                break;\r\n            case 'onresize':\r\n                observer.notifyResize(data);\r\n                break;\r\n            case 'onapply':\r\n                observer.notifyApply(data);\r\n                break;\r\n            case 'ongetstate':\r\n                observer.notifyGetState(data);\r\n                break;\r\n            default:\r\n                break;\r\n            \n            }\n        });\n    }\r\n\n}","import { helper } from '../Helper';\r\n\r\nexport function getOffset(node) {\n    return node.getBoundingClientRect();\n}\r\n\r\nexport function getTransform(el) {\n    const transform = el.css('-webkit-transform') ||\r\n        el.css('-moz-transform') ||\r\n        el.css('-ms-transform') ||\r\n        el.css('-o-transform') ||\r\n        el.css('transform') ||\r\n        'none';\r\n    return transform;\n}\r\n\r\nexport function parseMatrix(value) {\n    const transform = value.match(/-?\\d+\\.?\\d+|-?\\d+/g);\r\n\r\n    if (transform) {\n        return transform.map(item => {\n            return parseFloat(item);\n        });\n    } else {\n        return [1, 0, 0, 1, 0, 0];\n    }\n}\r\n\r\nexport function addClass(node, cls) {\n    if (!cls) return;\r\n\r\n    if (node.classList) {\n        if (cls.indexOf(' ') > -1) {\n            cls.split(/\\s+/).forEach(function (cl) {\n                return node.classList.add(cl);\n            });\n        } else {\n            return node.classList.add(cls);\n        }\n    }\r\n    return node;\n}\r\n\r\nexport function removeClass(node, cls) {\n    if (!cls) return;\r\n\r\n    if (node.classList) {\n        if (cls.indexOf(' ') > -1) {\n            cls.split(/\\s+/).forEach(function (cl) {\n                return node.classList.remove(cl);\n            });\n        } else {\n            return node.classList.remove(cls);\n        }\n    }\r\n    return node;\n}\r\n\r\nexport function objectsCollide(a, b) {\n    const {\r\n            top: aTop,\r\n            left: aLeft\r\n        } = getOffset(a),\r\n        {\r\n            top: bTop,\r\n            left: bLeft\r\n        } = getOffset(b),\r\n        _a = helper(a),\r\n        _b = helper(b);\r\n\r\n    return !(\r\n        ((aTop < bTop) ||\r\n            (aTop + parseFloat(_a.css('height'))) > (bTop + parseFloat(_b.css('height')))) ||\r\n        ((aLeft < bLeft) ||\r\n            (aLeft + parseFloat(_a.css('width'))) > (bLeft + parseFloat(_b.css('width'))))\r\n    );\n}","export const RAD = Math.PI / 180;\r\nexport const DEG = 180 / Math.PI;\r\n\r\nexport function snapToGrid(value, snap) {\r\n    if (snap === 0) {\r\n        return value;\r\n    } else {\r\n        const result = snapCandidate(value, snap);\r\n\r\n        if (result - value < snap) {\r\n            return result;\r\n        }\r\n    }\r\n}\r\n\r\nexport function snapCandidate(value, gridSize) {\r\n    if (gridSize === 0) return value;\r\n    return Math.round(value / gridSize) * gridSize;\r\n}\r\n\r\nexport function rotatedTopLeft(\r\n    x,\r\n    y,\r\n    width,\r\n    height,\r\n    rotationAngle,\r\n    revX,\r\n    revY\r\n) {\r\n    const hw = parseFloat(width) / 2,\r\n        hh = parseFloat(height) / 2;\r\n\r\n    const cx = x + hw,\r\n        cy = y + hh;\r\n\r\n    const dx = x - cx,\r\n        dy = y - cy;\r\n\r\n    const originalTopLeftAngle = Math.atan2(dy, dx);\r\n\r\n    const rotatedTopLeftAngle = originalTopLeftAngle + rotationAngle;\r\n\r\n    const radius = Math.sqrt(Math.pow(hw, 2) + Math.pow(hh, 2));\r\n\r\n    let cos = Math.cos(rotatedTopLeftAngle),\r\n        sin = Math.sin(rotatedTopLeftAngle);\r\n\r\n    cos = revX === true ? -cos : cos;\r\n    sin = revY === true ? -sin : sin;\r\n\r\n    const rx = cx + radius * cos,\r\n        ry = cy + radius * sin;\r\n\r\n    return {\r\n        left: floatToFixed(rx),\r\n        top: floatToFixed(ry)\r\n    };\r\n}\r\n\r\nexport function floatToFixed(val, size = 6) {\r\n    return Number(val.toFixed(size));\r\n}","import { helper } from '../Helper';\r\n\r\nimport {\r\n    requestAnimFrame,\r\n    cancelAnimFrame,\r\n    isDef,\r\n    isUndef,\r\n    isFunc,\r\n    warn\r\n} from '../util/util';\r\n\r\nimport {\r\n    addClass,\r\n    removeClass,\r\n    getOffset\r\n} from '../util/css-util';\r\n\r\nimport {\r\n    snapToGrid,\r\n    RAD\r\n} from './common';\r\n\r\nexport default class Subject {\r\n\r\n    constructor(el, observable) {\r\n        if (this.constructor === Subject) {\r\n            throw new TypeError('Cannot construct Subject instances directly');\r\n        }\r\n\r\n        this.el = el;\r\n        this.storage = null;\r\n        this.proxyMethods = null;\r\n        this.observable = observable;\r\n\r\n        this._onMouseDown = this._onMouseDown.bind(this);\r\n        this._onTouchStart = this._onTouchStart.bind(this);\r\n        this._onMouseMove = this._onMouseMove.bind(this);\r\n        this._onTouchMove = this._onTouchMove.bind(this);\r\n        this._onMouseUp = this._onMouseUp.bind(this);\r\n        this._onTouchEnd = this._onTouchEnd.bind(this);\r\n        this._animate = this._animate.bind(this);\r\n    }\r\n\r\n    enable(options) {\r\n        if (isUndef(this.storage)) {\r\n            this._processOptions(options);\r\n            this._init(this.el);\r\n        } else {\r\n            warn('Already enabled');\r\n        }\r\n    }\r\n\r\n    disable() {\r\n        const {\r\n            storage,\r\n            proxyMethods,\r\n            el\r\n        } = this;\r\n\r\n        if (isUndef(storage)) return;\r\n\r\n        // unexpected case\r\n        if (storage.onExecution) {\r\n            this._end();\r\n            helper(document)\r\n                .off('mousemove', this._onMouseMove)\r\n                .off('mouseup', this._onMouseUp)\r\n                .off('touchmove', this._onTouchMove)\r\n                .off('touchend', this._onTouchEnd);\r\n        }\r\n\r\n        removeClass(el, 'sjx-drag');\r\n\r\n        this._destroy();\r\n        this.unsubscribe();\r\n\r\n        proxyMethods.onDestroy.call(this, el);\r\n        delete this.storage;\r\n    }\r\n\r\n    _init() { }\r\n\r\n    _destroy() { }\r\n\r\n    _cursorPoint() { }\r\n\r\n    _drag() {\r\n        this._processMove(...arguments);\r\n        this.proxyMethods.onMove.call(this, ...arguments);\r\n    }\r\n\r\n    _rotate() {\r\n        this._processRotate(...arguments);\r\n        this.proxyMethods.onRotate.call(this, ...arguments);\r\n    }\r\n\r\n    _resize() {\r\n        this._processResize(...arguments);\r\n        this.proxyMethods.onResize.call(this, ...arguments);\r\n    }\r\n\r\n    _processOptions(options) {\r\n        const { el } = this;\r\n\r\n        addClass(el, 'sjx-drag');\r\n\r\n        const _snap = {\r\n            x: 10,\r\n            y: 10,\r\n            angle: 10 * RAD\r\n        };\r\n\r\n        const _each = {\r\n            move: false,\r\n            resize: false,\r\n            rotate: false\r\n        };\r\n\r\n        let _restrict = null,\r\n            _proportions = false,\r\n            _axis = 'xy',\r\n            _cursorMove = 'auto',\r\n            _cursorResize = 'auto',\r\n            _cursorRotate = 'auto',\r\n            _themeColor = '#00a8ff',\r\n            _rotationPoint = false,\r\n            _onInit = () => { },\r\n            _onMove = () => { },\r\n            _onRotate = () => { },\r\n            _onResize = () => { },\r\n            _onDrop = () => { },\r\n            _onDestroy = () => { };\r\n\r\n        let _container = el.parentNode;\r\n\r\n        if (isDef(options)) {\r\n            const {\r\n                snap,\r\n                each,\r\n                axis,\r\n                cursorMove,\r\n                cursorResize,\r\n                cursorRotate,\r\n                rotationPoint,\r\n                restrict,\r\n                onInit,\r\n                onDrop,\r\n                onMove,\r\n                onResize,\r\n                onRotate,\r\n                onDestroy,\r\n                container,\r\n                proportions,\r\n                themeColor\r\n            } = options;\r\n\r\n            if (isDef(snap)) {\r\n                const { x, y, angle } = snap;\r\n\r\n                _snap.x = isUndef(x) ? 10 : x;\r\n                _snap.y = isUndef(y) ? 10 : y;\r\n                _snap.angle = isUndef(angle)\r\n                    ? _snap.angle\r\n                    : angle * RAD;\r\n            }\r\n\r\n            if (isDef(each)) {\r\n                const { move, resize, rotate } = each;\r\n\r\n                _each.move = move || false;\r\n                _each.resize = resize || false;\r\n                _each.rotate = rotate || false;\r\n            }\r\n\r\n            if (isDef(restrict)) {\r\n                _restrict = restrict === 'parent'\r\n                    ? el.parentNode\r\n                    : helper(restrict)[0] || document;\r\n            }\r\n\r\n            _themeColor = themeColor || '#00a8ff';\r\n            _cursorMove = cursorMove || 'auto';\r\n            _cursorResize = cursorResize || 'auto';\r\n            _cursorRotate = cursorRotate || 'auto';\r\n            _axis = axis || 'xy';\r\n\r\n            _container = isDef(container) && helper(container)[0]\r\n                ? helper(container)[0]\r\n                : _container;\r\n\r\n            _rotationPoint = rotationPoint || false;\r\n            _proportions = proportions || false;\r\n\r\n            _onInit = createEvent(onInit);\r\n            _onDrop = createEvent(onDrop);\r\n            _onMove = createEvent(onMove);\r\n            _onResize = createEvent(onResize);\r\n            _onRotate = createEvent(onRotate);\r\n            _onDestroy = createEvent(onDestroy);\r\n\r\n            _onInit.call(this, el);\r\n        }\r\n\r\n        this.options = {\r\n            axis: _axis,\r\n            themeColor: _themeColor,\r\n            cursorMove: _cursorMove,\r\n            cursorRotate: _cursorRotate,\r\n            cursorResize: _cursorResize,\r\n            rotationPoint: _rotationPoint,\r\n            restrict: _restrict,\r\n            container: _container,\r\n            snap: _snap,\r\n            each: _each,\r\n            proportions: _proportions\r\n        };\r\n\r\n        this.proxyMethods = {\r\n            onInit: _onInit,\r\n            onDrop: _onDrop,\r\n            onMove: _onMove,\r\n            onResize: _onResize,\r\n            onRotate: _onRotate,\r\n            onDestroy: _onDestroy\r\n        };\r\n\r\n        this.subscribe(_each);\r\n    }\r\n\r\n    _draw() {\r\n        this._animate();\r\n    }\r\n\r\n    _animate() {\r\n        const self = this;\r\n        const {\r\n            observable,\r\n            storage,\r\n            options\r\n        } = self;\r\n\r\n        if (isUndef(storage)) return;\r\n\r\n        storage.frame = requestAnimFrame(self._animate);\r\n\r\n        if (!storage.doDraw) return;\r\n        storage.doDraw = false;\r\n\r\n        let {\r\n            dox,\r\n            doy,\r\n            clientX,\r\n            clientY,\r\n            doDrag,\r\n            doResize,\r\n            doRotate,\r\n            doSetCenter,\r\n            revX,\r\n            revY\r\n        } = storage;\r\n\r\n        const {\r\n            snap,\r\n            each,\r\n            restrict\r\n        } = options;\r\n\r\n        const {\r\n            move: moveEach,\r\n            resize: resizeEach,\r\n            rotate: rotateEach\r\n        } = each;\r\n\r\n        if (doResize) {\r\n            const {\r\n                transform,\r\n                cx,\r\n                cy\r\n            } = storage;\r\n\r\n            const { x, y } = this._pointToElement(\r\n                {\r\n                    x: clientX,\r\n                    y: clientY\r\n                }\r\n            );\r\n\r\n            let dx = dox\r\n                ? snapToGrid(x - cx, snap.x / transform.scX)\r\n                : 0;\r\n\r\n            let dy = doy\r\n                ? snapToGrid(y - cy, snap.y / transform.scY)\r\n                : 0;\r\n\r\n            dx = dox ? (revX ? - dx : dx) : 0,\r\n            dy = doy ? (revY ? - dy : dy) : 0;\r\n\r\n            self._resize(\r\n                dx,\r\n                dy\r\n            );\r\n\r\n            if (resizeEach) {\r\n                observable.notify('onresize',\r\n                    self,\r\n                    {\r\n                        dx,\r\n                        dy\r\n                    }\r\n                );\r\n            }\r\n        }\r\n\r\n        if (doDrag) {\r\n            const {\r\n                restrictOffset,\r\n                elementOffset,\r\n                nx,\r\n                ny\r\n            } = storage;\r\n\r\n            if (isDef(restrict)) {\r\n                if ((clientX - restrictOffset.left) < nx - elementOffset.left) {\r\n                    clientX = nx - elementOffset.left + restrictOffset.left;\r\n                }\r\n\r\n                if ((clientY - restrictOffset.top) < ny - elementOffset.top) {\r\n                    clientY = ny - elementOffset.top + restrictOffset.top;\r\n                }\r\n            }\r\n\r\n            let dx = dox\r\n                ? snapToGrid(clientX - nx, snap.x)\r\n                : 0;\r\n\r\n            let dy = doy\r\n                ? snapToGrid(clientY - ny, snap.y)\r\n                : 0;\r\n\r\n            self._drag(\r\n                dx,\r\n                dy\r\n            );\r\n\r\n            if (moveEach) {\r\n                observable.notify('onmove',\r\n                    self,\r\n                    {\r\n                        dx,\r\n                        dy\r\n                    }\r\n                );\r\n            }\r\n        }\r\n\r\n        if (doRotate) {\r\n            const {\r\n                pressang,\r\n                center\r\n            } = storage;\r\n\r\n            const radians = Math.atan2(\r\n                clientY - center.y,\r\n                clientX - center.x\r\n            ) - pressang;\r\n\r\n            self._rotate(\r\n                snapToGrid(radians, snap.angle)\r\n            );\r\n\r\n            if (rotateEach) {\r\n                observable.notify('onrotate',\r\n                    self,\r\n                    {\r\n                        radians\r\n                    }\r\n                );\r\n            }\r\n        }\r\n\r\n        if (doSetCenter) {\r\n            const { \r\n                bx, \r\n                by \r\n            } = storage;\r\n\r\n            const { x, y } = this._pointToControls(\r\n                {\r\n                    x: clientX,\r\n                    y: clientY\r\n                }\r\n            );\r\n\r\n            self._moveCenterHandle(\r\n                x - bx,\r\n                y - by\r\n            );\r\n        }\r\n    }\r\n\r\n    _start(e) {\r\n        if (e.stopImmediatePropagation) {\r\n            e.stopImmediatePropagation();\r\n        }\r\n\r\n        const {\r\n            observable,\r\n            storage,\r\n            options,\r\n            el\r\n        } = this;\r\n\r\n        const computed = this._compute(e);\r\n\r\n        Object.keys(computed).forEach(prop => {\r\n            storage[prop] = computed[prop];\r\n        });\r\n\r\n        const {\r\n            onRightEdge,\r\n            onBottomEdge,\r\n            onTopEdge,\r\n            onLeftEdge,\r\n            handle,\r\n            factor,\r\n            revX,\r\n            revY\r\n        } = computed;\r\n\r\n        const doResize =\r\n            onRightEdge ||\r\n            onBottomEdge ||\r\n            onTopEdge ||\r\n            onLeftEdge;\r\n\r\n        const { \r\n            handles, \r\n            radius \r\n        } = storage;\r\n        \r\n        const { \r\n            axis, \r\n            restrict \r\n        } = options;\r\n\r\n        if (isDef(radius)) {\r\n            removeClass(radius, 'sjx-hidden');\r\n        }\r\n\r\n        const doRotate = handle.is(handles.rotator),\r\n            doSetCenter = isDef(handles.center)\r\n                ? handle.is(handles.center)\r\n                : false;\r\n\r\n        const {\r\n            clientX,\r\n            clientY\r\n        } = e;\r\n\r\n        const {\r\n            x,\r\n            y\r\n        } = this._cursorPoint(\r\n            {\r\n                clientX,\r\n                clientY\r\n            }\r\n        );\r\n\r\n        const {\r\n            x: nx,\r\n            y: ny\r\n        } = this._pointToElement({ x, y });\r\n\r\n        const { \r\n            x: bx, \r\n            y: by \r\n        } = this._pointToControls({ x, y });\r\n\r\n        storage.clientX = clientX;\r\n        storage.clientY = clientY;\r\n        storage.nx = x;\r\n        storage.ny = y;\r\n        storage.cx = nx;\r\n        storage.cy = ny;\r\n        storage.bx = bx;\r\n        storage.by = by;\r\n        storage.doResize = doResize;\r\n        storage.doDrag = !(doRotate || doResize || doSetCenter);\r\n        storage.doRotate = doRotate;\r\n        storage.doSetCenter = doSetCenter;\r\n        storage.onExecution = true;\r\n        storage.cursor = null;\r\n        storage.elementOffset = getOffset(el);\r\n        storage.restrictOffset = isDef(restrict)\r\n            ? getOffset(restrict)\r\n            : null;\r\n\r\n        storage.dox = /\\x/.test(axis) && (doResize\r\n            ?\r\n            handle.is(handles.ml) ||\r\n            handle.is(handles.mr) ||\r\n            handle.is(handles.tl) ||\r\n            handle.is(handles.tr) ||\r\n            handle.is(handles.bl) ||\r\n            handle.is(handles.br)\r\n            : true);\r\n\r\n        storage.doy = /\\y/.test(axis) && (doResize\r\n            ?\r\n            handle.is(handles.br) ||\r\n            handle.is(handles.bl) ||\r\n            handle.is(handles.bc) ||\r\n            handle.is(handles.tr) ||\r\n            handle.is(handles.tl) ||\r\n            handle.is(handles.tc)\r\n            : true);\r\n\r\n        observable.notify(\r\n            'ongetstate',\r\n            this,\r\n            {\r\n                factor,\r\n                revX,\r\n                revY\r\n            }\r\n        );\r\n\r\n        this._draw();\r\n    }\r\n\r\n    _moving(e) {\r\n        if (e.preventDefault) {\r\n            e.preventDefault();\r\n        }\r\n\r\n        const {\r\n            storage,\r\n            options\r\n        } = this;\r\n\r\n        const {\r\n            x,\r\n            y\r\n        } = this._cursorPoint(e);\r\n\r\n        storage.e = e;\r\n        storage.clientX = x;\r\n        storage.clientY = y;\r\n        storage.doDraw = true;\r\n\r\n        let {\r\n            doRotate,\r\n            doDrag,\r\n            doResize,\r\n            cursor\r\n        } = storage;\r\n\r\n        const {\r\n            cursorMove,\r\n            cursorResize,\r\n            cursorRotate\r\n        } = options;\r\n\r\n        if (isUndef(cursor)) {\r\n            if (doDrag) {\r\n                cursor = cursorMove;\r\n            } else if (doRotate) {\r\n                cursor = cursorRotate;\r\n            } else if (doResize) {\r\n                cursor = cursorResize;\r\n            }\r\n            helper(document.body).css({ cursor });\r\n        }\r\n    }\r\n\r\n    _end(e) {\r\n        if (isDef(e) && e.stopImmediatePropagation) {\r\n            e.stopImmediatePropagation();\r\n        }\r\n\r\n        const {\r\n            observable,\r\n            storage,\r\n            proxyMethods,\r\n            el\r\n        } = this;\r\n\r\n        const action = storage.doResize\r\n            ? 'resize'\r\n            : (storage.doDrag ? 'drag' : 'rotate');\r\n\r\n        storage.doResize = false;\r\n        storage.doDrag = false;\r\n        storage.doRotate = false;\r\n        storage.doSetCenter = false;\r\n        storage.doDraw = false;\r\n        storage.onExecution = false;\r\n        storage.cursor = null;\r\n\r\n        this._apply(action);\r\n\r\n        observable.notify(\r\n            'onapply',\r\n            this,\r\n            action\r\n        );\r\n\r\n        cancelAnimFrame(storage.frame);\r\n        proxyMethods.onDrop.call(this, e, el);\r\n\r\n        helper(document.body).css({ cursor: 'auto' });\r\n        if (isDef(storage.radius)) {\r\n            addClass(storage.radius, 'sjx-hidden');\r\n        }\r\n    }\r\n\r\n    _onMouseDown(e) {\r\n        this._start(e);\r\n        helper(document)\r\n            .on('mousemove', this._onMouseMove)\r\n            .on('mouseup', this._onMouseUp);\r\n    }\r\n\r\n    _onTouchStart(e) {\r\n        this._start(e.touches[0]);\r\n        helper(document)\r\n            .on('touchmove', this._onTouchMove)\r\n            .on('touchend', this._onTouchEnd);\r\n    }\r\n\r\n    _onMouseMove(e) {\r\n        this._moving(\r\n            e,\r\n            this.el\r\n        );\r\n    }\r\n\r\n    _onTouchMove(e) {\r\n        this._moving(\r\n            e.touches[0],\r\n            this.el\r\n        );\r\n    }\r\n\r\n    _onMouseUp(e) {\r\n        helper(document)\r\n            .off('mousemove', this._onMouseMove)\r\n            .off('mouseup', this._onMouseUp);\r\n\r\n        this._end(\r\n            e,\r\n            this.el\r\n        );\r\n    }\r\n\r\n    _onTouchEnd(e) {\r\n        helper(document)\r\n            .off('touchmove', this._onTouchMove)\r\n            .off('touchend', this._onTouchEnd);\r\n\r\n        if (e.touches.length === 0) {\r\n            this._end(\r\n                e.changedTouches[0],\r\n                this.el\r\n            );\r\n        }\r\n    }\r\n\r\n    notifyMove(data) {\r\n        const {\r\n            dx,\r\n            dy\r\n        } = data;\r\n\r\n        this._drag(\r\n            dx,\r\n            dy\r\n        );\r\n    }\r\n\r\n    notifyRotate(data) {\r\n        const {\r\n            snap\r\n        } = this.options;\r\n\r\n        this._rotate(\r\n            snapToGrid(data.radians, snap.angle)\r\n        );\r\n    }\r\n\r\n    notifyResize(data) {\r\n        const {\r\n            dx,\r\n            dy,\r\n            dox,\r\n            doy\r\n        } = data;\r\n\r\n        this._resize(\r\n            dx,\r\n            dy,\r\n            dox,\r\n            doy\r\n        );\r\n    }\r\n\r\n    notifyApply(actionName) {\r\n        this._apply(actionName);\r\n    }\r\n\r\n    notifyGetState(data) {\r\n        const { storage } = this;\r\n\r\n        const recalc = this._getState(\r\n            data\r\n        );\r\n\r\n        Object.keys(recalc).forEach(key => {\r\n            storage[key] = recalc[key];\r\n        });\r\n    }\r\n\r\n    subscribe(events) {\r\n        const { observable: ob } = this;\r\n\r\n        const {\r\n            resize,\r\n            move,\r\n            rotate\r\n        } = events;\r\n\r\n        if (move || resize || rotate) {\r\n            ob.subscribe('ongetstate', this)\r\n                .subscribe('onapply', this);\r\n        }\r\n\r\n        if (move) {\r\n            ob.subscribe('onmove', this);\r\n        }\r\n        if (resize) {\r\n            ob.subscribe('onresize', this);\r\n        }\r\n        if (rotate) {\r\n            ob.subscribe('onrotate', this);\r\n        }\r\n    }\r\n\r\n    unsubscribe() {\r\n        const { observable: ob } = this;\r\n\r\n        ob.unsubscribe('ongetstate', this)\r\n            .unsubscribe('onapply', this)\r\n            .unsubscribe('onmove', this)\r\n            .unsubscribe('onresize', this)\r\n            .unsubscribe('onrotate', this);\r\n    }\r\n\r\n}\r\n\r\nfunction createEvent(fn) {\r\n    return isFunc(fn)\r\n        ? function () {\r\n            fn.call(this, ...arguments);\r\n        }\r\n        : () => { };\r\n}","import { helper } from '../Helper';\r\nimport Subject from './Subject';\r\n\r\nimport {\r\n    addClass,\r\n    getTransform,\r\n    parseMatrix,\r\n    getOffset\r\n} from '../util/css-util';\r\n\r\nimport {\r\n    rotatedTopLeft,\r\n    floatToFixed\r\n} from './common';\r\n\r\nimport {\r\n    isDef,\r\n    isUndef\r\n} from '../util/util';\r\n\r\nconst MIN_SIZE = 2;\r\nconst CENTER_DELTA = 6;\r\n\r\nexport default class Draggable extends Subject {\r\n\r\n    constructor(el, options, Observable) {\r\n        super(el, Observable);\r\n        this.enable(options);\r\n    }\r\n\r\n    _init(el) {\r\n        const container = document.createElement('div');\r\n\r\n        addClass(container, 'sjx-wrapper');\r\n        el.parentNode.insertBefore(container, el);\r\n\r\n        const $el = helper(el);\r\n\r\n        const { options } = this;\r\n\r\n        const {\r\n            rotationPoint,\r\n        } = options;\r\n\r\n        const {\r\n            left,\r\n            top,\r\n            width,\r\n            height\r\n        } = el.style;\r\n\r\n        const w = width || $el.css('width'),\r\n            h = height || $el.css('height'),\r\n            t = top || $el.css('top'),\r\n            l = left || $el.css('left');\r\n\r\n        const $parent = helper(container.parentNode);\r\n\r\n        const css = {\r\n            top: t,\r\n            left: l,\r\n            width: w,\r\n            height: h,\r\n            transform: getTransform($el)\r\n        };\r\n\r\n        const controls = document.createElement('div');\r\n\r\n        const handles = {\r\n            normal: ['sjx-hdl', 'sjx-normal'],\r\n            tl: ['sjx-hdl', 'sjx-hdl-t', 'sjx-hdl-l', 'sjx-hdl-tl'],\r\n            tr: ['sjx-hdl', 'sjx-hdl-t', 'sjx-hdl-r', 'sjx-hdl-tr'],\r\n            br: ['sjx-hdl', 'sjx-hdl-b', 'sjx-hdl-r', 'sjx-hdl-br'],\r\n            bl: ['sjx-hdl', 'sjx-hdl-b', 'sjx-hdl-l', 'sjx-hdl-bl'],\r\n            tc: ['sjx-hdl', 'sjx-hdl-t', 'sjx-hdl-c', 'sjx-hdl-tc'],\r\n            bc: ['sjx-hdl', 'sjx-hdl-b', 'sjx-hdl-c', 'sjx-hdl-bc'],\r\n            ml: ['sjx-hdl', 'sjx-hdl-m', 'sjx-hdl-l', 'sjx-hdl-ml'],\r\n            mr: ['sjx-hdl', 'sjx-hdl-m', 'sjx-hdl-r', 'sjx-hdl-mr'],\r\n            center: rotationPoint ? ['sjx-hdl', 'sjx-hdl-m', 'sjx-hdl-c', 'sjx-hdl-mc'] : undefined,\r\n            //...(rotationPoint && { center: ['sjx-hdl', 'sjx-hdl-m', 'sjx-hdl-c', 'sjx-hdl-mc']}), IE11 not supports\r\n            rotator: ['sjx-hdl', 'sjx-hdl-m', 'sjx-rotator']\r\n        };\r\n\r\n        Object.keys(handles).forEach(key => {\r\n            const data = handles[key];\r\n            if (isUndef(data)) return;\r\n            const handler = createHandler(data);\r\n            handles[key] = handler;\r\n            controls.appendChild(handler);\r\n        });\r\n\r\n        if (isDef(handles.center)) {\r\n            const cHandle = helper(handles.center);\r\n            cHandle.css({\r\n                left: `${el.getAttribute('data-cx')}px`,\r\n                top: `${el.getAttribute('data-cy')}px`\r\n            });\r\n        }\r\n\r\n        addClass(controls, 'sjx-controls');\r\n\r\n        container.appendChild(controls);\r\n\r\n        const $controls = helper(controls);\r\n        $controls.css(css);\r\n\r\n        const $container = helper(container);\r\n\r\n        this.storage = {\r\n            controls,\r\n            handles,\r\n            radius: $container.find('.sjx-radius'),\r\n            parent: $parent\r\n        };\r\n\r\n        $controls\r\n            .on('mousedown', this._onMouseDown)\r\n            .on('touchstart', this._onTouchStart);\r\n    }\r\n\r\n    _destroy() {\r\n        const {\r\n            controls\r\n        } = this.storage;\r\n\r\n        helper(controls)\r\n            .off('mousedown', this._onMouseDown)\r\n            .off('touchstart', this._onTouchStart);\r\n\r\n        const wrapper = controls.parentNode;\r\n        wrapper.parentNode.removeChild(wrapper);\r\n    }\r\n\r\n    _compute(e) {\r\n        const {\r\n            handles,\r\n        } = this.storage;\r\n\r\n        const handle = helper(e.target);\r\n\r\n        //reverse axis\r\n        const revX = handle.is(handles.tl) ||\r\n            handle.is(handles.ml) ||\r\n            handle.is(handles.bl) ||\r\n            handle.is(handles.tc);\r\n\r\n        const revY = handle.is(handles.tl) ||\r\n            handle.is(handles.tr) ||\r\n            handle.is(handles.tc) ||\r\n            handle.is(handles.ml);\r\n\r\n        const onTopEdge = handle.is(handles.tl) || handle.is(handles.tc) || handle.is(handles.tr),\r\n            onLeftEdge = handle.is(handles.tl) || handle.is(handles.ml) || handle.is(handles.bl),\r\n            onRightEdge = handle.is(handles.tr) || handle.is(handles.mr) || handle.is(handles.br),\r\n            onBottomEdge = handle.is(handles.br) || handle.is(handles.bc) || handle.is(handles.bl);\r\n\r\n        //reverse angle\r\n        const factor = handle.is(handles.tr) ||\r\n            handle.is(handles.bl)\r\n            ? -1\r\n            : 1;\r\n\r\n        const _computed = this._getState({\r\n            factor,\r\n            revX,\r\n            revY\r\n        });\r\n\r\n        const {\r\n            x: clientX,\r\n            y: clientY\r\n        } = this._cursorPoint(e);\r\n\r\n        const pressang = Math.atan2(\r\n            clientY - _computed.center.y,\r\n            clientX - _computed.center.x\r\n        );\r\n\r\n        _computed.onTopEdge = onTopEdge;\r\n        _computed.onLeftEdge = onLeftEdge;\r\n        _computed.onRightEdge = onRightEdge;\r\n        _computed.onBottomEdge = onBottomEdge;\r\n        _computed.handle = handle;\r\n        _computed.pressang = pressang;\r\n\r\n        return _computed;\r\n    }\r\n\r\n    _pointToElement(data) {\r\n        const {\r\n            transform,\r\n        } = this.storage;\r\n\r\n        const {\r\n            x,\r\n            y\r\n        } = data;\r\n\r\n        const ctm = [...transform.matrix];\r\n        ctm[4] = ctm[5] = 0;\r\n\r\n        return this._applyMatrixToPoint(\r\n            matrixInvert(ctm),\r\n            x,\r\n            y\r\n        );\r\n    }\r\n\r\n    _pointToControls(data) {\r\n        return this._pointToElement(data);\r\n    }\r\n\r\n    _applyMatrixToPoint(matrix, x, y) {\r\n        return multiplyMatrixAndPoint(\r\n            {\r\n                x,\r\n                y\r\n            },\r\n            matrix\r\n        );\r\n    }\r\n\r\n    _cursorPoint(e) {\r\n        const {\r\n            container\r\n        } = this.options;\r\n\r\n        const globalMatrix = parseMatrix(\r\n            getTransform(helper(container))\r\n        );\r\n\r\n        return multiplyMatrixAndPoint(\r\n            {\r\n                x: e.clientX,\r\n                y: e.clientY\r\n            },\r\n            matrixInvert(\r\n                globalMatrix\r\n            )\r\n        );\r\n    }\r\n\r\n    _apply() {\r\n        const {\r\n            el,\r\n            storage\r\n        } = this;\r\n\r\n        const $el = helper(el);\r\n\r\n        const {\r\n            cached,\r\n            controls,\r\n            transform,\r\n            handles\r\n        } = storage;\r\n\r\n        const $controls = helper(controls);\r\n\r\n        const cw = parseFloat($controls.css('width')),\r\n            ch = parseFloat($controls.css('height'));\r\n\r\n        const hW = cw / 2,\r\n            hH = ch / 2;\r\n\r\n        const {\r\n            center: cHandle\r\n        } = handles;\r\n\r\n        const isDefCenter = isDef(cHandle);\r\n\r\n        const centerX = isDefCenter\r\n                ? parseFloat(helper(cHandle).css('left'))\r\n                : hW,\r\n            centerY = isDefCenter\r\n                ? parseFloat(helper(cHandle).css('top'))\r\n                : hH;\r\n\r\n        el.setAttribute('data-cx', centerX);\r\n        el.setAttribute('data-cy', centerY);\r\n\r\n        if (isUndef(cached)) return;\r\n\r\n        const { dx, dy } = cached;\r\n\r\n        const css = matrixToCSS(transform.matrix);\r\n\r\n        const left = parseFloat(\r\n            el.style.left || $el.css('left'),\r\n        );\r\n\r\n        const top = parseFloat(\r\n            el.style.top || $el.css('top'),\r\n        );\r\n\r\n        css.left = `${left + dx}px`;\r\n        css.top = `${top + dy}px`;\r\n\r\n        $el.css(css);\r\n        $controls.css(css);\r\n\r\n        this.storage.cached = null;\r\n    }\r\n\r\n    _processResize(dx, dy) {\r\n        const {\r\n            el,\r\n            storage,\r\n            options\r\n        } = this;\r\n\r\n        const {\r\n            proportions\r\n        } = options;\r\n\r\n        const {\r\n            controls,\r\n            coords,\r\n            cw,\r\n            ch,\r\n            transform,\r\n            refang,\r\n            revX,\r\n            revY\r\n        } = storage;\r\n\r\n        const ratio = (cw + dx) / cw;\r\n\r\n        const newWidth = proportions ? cw * ratio : cw + dx,\r\n            newHeight = proportions ? ch * ratio : ch + dy;\r\n\r\n        if (newWidth < MIN_SIZE || newHeight < MIN_SIZE) return;\r\n\r\n        const matrix = [...transform.matrix];\r\n\r\n        const newCoords = rotatedTopLeft(\r\n            matrix[4],\r\n            matrix[5],\r\n            newWidth,\r\n            newHeight,\r\n            refang,\r\n            revX,\r\n            revY\r\n        );\r\n\r\n        const nx = coords.left - newCoords.left,\r\n            ny = coords.top - newCoords.top;\r\n\r\n        matrix[4] += nx;\r\n        matrix[5] += ny;\r\n\r\n        const css = matrixToCSS(matrix);\r\n\r\n        css.width = `${newWidth}px`;\r\n        css.height = `${newHeight}px`;\r\n\r\n        helper(controls).css(css);\r\n        helper(el).css(css);\r\n\r\n        storage.cached = {\r\n            dx: nx,\r\n            dy: ny\r\n        };\r\n    }\r\n\r\n    _processMove(dx, dy) {\r\n        const {\r\n            el,\r\n            storage\r\n        } = this;\r\n\r\n        const {\r\n            controls,\r\n            transform\r\n        } = storage;\r\n\r\n        const {\r\n            matrix,\r\n            parentMatrix\r\n        } = transform;\r\n\r\n        const pctm = [...parentMatrix];\r\n        pctm[4] = pctm[5] = 0;\r\n\r\n        const n_matrix = [...matrix];\r\n\r\n        n_matrix[4] = matrix[4] + dx;\r\n        n_matrix[5] = matrix[5] + dy;\r\n\r\n        const css = matrixToCSS(n_matrix);\r\n\r\n        helper(controls).css(css);\r\n        helper(el).css(css);\r\n\r\n        storage.cached = {\r\n            dx,\r\n            dy\r\n        };\r\n    }\r\n\r\n    _processRotate(radians) {\r\n        const {\r\n            el,\r\n            storage\r\n        } = this;\r\n\r\n        const {\r\n            controls,\r\n            transform,\r\n            center\r\n        } = storage;\r\n\r\n        const {\r\n            matrix,\r\n            parentMatrix\r\n        } = transform;\r\n\r\n        const cos = floatToFixed(Math.cos(radians)),\r\n            sin = floatToFixed(Math.sin(radians));\r\n\r\n        const translateMatrix = [\r\n            1,\r\n            0,\r\n            0,\r\n            1,\r\n            center.cx,\r\n            center.cy\r\n        ];\r\n\r\n        const rotMatrix = [\r\n            cos,\r\n            sin,\r\n            -sin,\r\n            cos,\r\n            0,\r\n            0\r\n        ];\r\n\r\n        const pctm = [...parentMatrix];\r\n        pctm[4] = pctm[5] = 0;\r\n\r\n        const resRotMatrix = multiplyMatrix(\r\n            matrixInvert(pctm),\r\n            multiplyMatrix(rotMatrix, pctm)\r\n        );\r\n\r\n        const nMatrix = multiplyMatrix(\r\n            multiplyMatrix(translateMatrix, resRotMatrix),\r\n            matrixInvert(translateMatrix)\r\n        );\r\n\r\n        const resMatrix = multiplyMatrix(nMatrix, matrix);\r\n\r\n        const css = matrixToCSS(resMatrix);\r\n\r\n        helper(controls).css(css);\r\n        helper(el).css(css);\r\n    }\r\n\r\n    _getState(params) {\r\n        const {\r\n            factor,\r\n            revX,\r\n            revY\r\n        } = params;\r\n\r\n        const {\r\n            el,\r\n            storage,\r\n            options\r\n        } = this;\r\n\r\n        const {\r\n            handles,\r\n            controls,\r\n            parent\r\n        } = storage;\r\n\r\n        const {\r\n            center: cHandle,\r\n            tl,\r\n            tr\r\n        } = handles;\r\n\r\n        const tl_off = getOffset(tl),\r\n            tr_off = getOffset(tr);\r\n\r\n        const refang = Math.atan2(\r\n            tr_off.top - tl_off.top,\r\n            tr_off.left - tl_off.left\r\n        ) * factor;\r\n\r\n        const $controls = helper(controls);\r\n\r\n        const containerMatrix = parseMatrix(\r\n            getTransform(helper(options.container))\r\n        );\r\n\r\n        const matrix = parseMatrix(\r\n            getTransform(helper(controls))\r\n        );\r\n\r\n        const pMatrix = parseMatrix(\r\n            getTransform(parent)\r\n        );\r\n\r\n        const parentMatrix = parent === container\r\n            ? multiplyMatrix(\r\n                pMatrix,\r\n                containerMatrix\r\n            )\r\n            : containerMatrix;\r\n\r\n        const transform = {\r\n            matrix,\r\n            parentMatrix,\r\n            scX: Math.sqrt(matrix[0] * matrix[0] + matrix[1] * matrix[1]),\r\n            scY: Math.sqrt(matrix[2] * matrix[2] + matrix[3] * matrix[3]),\r\n        };\r\n\r\n        const cw = parseFloat($controls.css('width')),\r\n            ch = parseFloat($controls.css('height'));\r\n\r\n        //getting current coordinates considering rotation angle                                                                                                  \r\n        const coords = rotatedTopLeft(\r\n            transform.matrix[4],\r\n            transform.matrix[5],\r\n            cw,\r\n            ch,\r\n            refang,\r\n            revX,\r\n            revY\r\n        );\r\n\r\n        const hW = cw / 2,\r\n            hH = ch / 2;\r\n\r\n        const offset_ = getOffset(el),\r\n            isDefCenter = isDef(cHandle);\r\n\r\n        const centerX = isDefCenter\r\n                ? parseFloat(helper(cHandle).css('left'))\r\n                : hW,\r\n            centerY = isDefCenter\r\n                ? parseFloat(helper(cHandle).css('top'))\r\n                : hH;\r\n        \r\n        const cDelta = isDefCenter ? CENTER_DELTA : 0;\r\n\r\n        return {\r\n            transform,\r\n            cw,\r\n            ch,\r\n            coords,\r\n            center: {\r\n                x: offset_.left + centerX - cDelta,\r\n                y: offset_.top + centerY - cDelta,\r\n                cx: -centerX + hW - cDelta,\r\n                cy: -centerY + hH - cDelta,\r\n                hx: centerX,\r\n                hy: centerY\r\n            },\r\n            factor,\r\n            refang,\r\n            revX,\r\n            revY\r\n        };\r\n    }\r\n\r\n    _moveCenterHandle(x, y) {\r\n        const { storage } = this;\r\n        const { handles, center } = storage;\r\n\r\n        const left = `${center.hx + x}px`,\r\n            top = `${center.hy + y}px`;\r\n\r\n        helper(handles.center).css(\r\n            {\r\n                left,\r\n                top\r\n            }\r\n        );\r\n    }\r\n\r\n    resetCenterPoint() {\r\n        const { storage } = this;\r\n        const { \r\n            handles,\r\n        } = storage;\r\n\r\n        helper(handles.center).css(\r\n            {\r\n                left: null,\r\n                top: null\r\n            }\r\n        );\r\n    }\r\n\r\n    get controls() {\r\n        return this.storage.controls;\r\n    }\r\n\r\n}\r\n\r\nfunction matrixToCSS(arr) {\r\n    const style = `matrix(${arr.join()})`;\r\n\r\n    return {\r\n        transform: style,\r\n        webkitTranform: style,\r\n        mozTransform: style,\r\n        msTransform: style,\r\n        otransform: style\r\n    };\r\n}\r\n\r\nfunction multiplyMatrixAndPoint(point, matrix) {\r\n    const {\r\n        x, y\r\n    } = point;\r\n\r\n    const [a, b, c, d, e, f] = matrix;\r\n\r\n    return {\r\n        x: a * x + c * y + e,\r\n        y: b * x + d * y + f\r\n    };\r\n}\r\n\r\n//http://blog.acipo.com/matrix-inversion-in-javascript/\r\nfunction matrixInvert(ctm) {\r\n    // I use Guassian Elimination to calculate the inverse:\r\n    // (1) 'augment' the matrix (left) by the identity (on the right)\r\n    // (2) Turn the matrix on the left into the identity by elemetry row ops\r\n    // (3) The matrix on the right is the inverse (was the identity matrix)\r\n    // There are 3 elemtary row ops: (I combine b and c in my code)\r\n    // (a) Swap 2 rows\r\n    // (b) Multiply a row by a scalar\r\n    // (c) Add 2 rows\r\n\r\n    const M = [\r\n        [ctm[0], ctm[2], ctm[4]],\r\n        [ctm[1], ctm[3], ctm[5]],\r\n        [0, 0, 1]\r\n    ];\r\n\r\n    //if the matrix isn't square: exit (error)\r\n    if (M.length !== M[0].length) {\r\n        return;\r\n    }\r\n\r\n    //create the identity matrix (I), and a copy (C) of the original\r\n    const dim = M.length;\r\n\r\n    const I = [],\r\n        C = [];\r\n\r\n    for (let i = 0; i < dim; i += 1) {\r\n        // Create the row\r\n        I[I.length] = [];\r\n        C[C.length] = [];\r\n        for (let j = 0; j < dim; j += 1) {\r\n            //if we're on the diagonal, put a 1 (for identity)\r\n            if (i == j) {\r\n                I[i][j] = 1;\r\n            } else {\r\n                I[i][j] = 0;\r\n            }\r\n\r\n            // Also, make the copy of the original\r\n            C[i][j] = M[i][j];\r\n        }\r\n    }\r\n\r\n    // Perform elementary row operations\r\n    for (let i = 0; i < dim; i += 1) {\r\n        // get the element e on the diagonal\r\n        let e = C[i][i];\r\n\r\n        // if we have a 0 on the diagonal (we'll need to swap with a lower row)\r\n        if (e === 0) {\r\n            //look through every row below the i'th row\r\n            for (let ii = i + 1; ii < dim; ii += 1) {\r\n                //if the ii'th row has a non-0 in the i'th col\r\n                if (C[ii][i] !== 0) {\r\n                    //it would make the diagonal have a non-0 so swap it\r\n                    for (let j = 0; j < dim; j++) {\r\n                        e = C[i][j]; //temp store i'th row\r\n                        C[i][j] = C[ii][j]; //replace i'th row by ii'th\r\n                        C[ii][j] = e; //repace ii'th by temp\r\n                        e = I[i][j]; //temp store i'th row\r\n                        I[i][j] = I[ii][j]; //replace i'th row by ii'th\r\n                        I[ii][j] = e; //repace ii'th by temp\r\n                    }\r\n                    //don't bother checking other rows since we've swapped\r\n                    break;\r\n                }\r\n            }\r\n            //get the new diagonal\r\n            e = C[i][i];\r\n            //if it's still 0, not invertable (error)\r\n            if (e === 0) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        // Scale this row down by e (so we have a 1 on the diagonal)\r\n        for (let j = 0; j < dim; j++) {\r\n            C[i][j] = C[i][j] / e; //apply to original matrix\r\n            I[i][j] = I[i][j] / e; //apply to identity\r\n        }\r\n\r\n        // Subtract this row (scaled appropriately for each row) from ALL of\r\n        // the other rows so that there will be 0's in this column in the\r\n        // rows above and below this one\r\n        for (let ii = 0; ii < dim; ii++) {\r\n            // Only apply to other rows (we want a 1 on the diagonal)\r\n            if (ii == i) {\r\n                continue;\r\n            }\r\n\r\n            // We want to change this element to 0\r\n            e = C[ii][i];\r\n\r\n            // Subtract (the row above(or below) scaled by e) from (the\r\n            // current row) but start at the i'th column and assume all the\r\n            // stuff left of diagonal is 0 (which it should be if we made this\r\n            // algorithm correctly)\r\n            for (let j = 0; j < dim; j++) {\r\n                C[ii][j] -= e * C[i][j]; //apply to original matrix\r\n                I[ii][j] -= e * I[i][j]; //apply to identity\r\n            }\r\n        }\r\n    }\r\n\r\n    //we've done all operations, C should be the identity\r\n    //matrix I should be the inverse:\r\n    return [\r\n        I[0][0], I[1][0],\r\n        I[0][1], I[1][1],\r\n        I[0][2], I[1][2]\r\n    ];\r\n}\r\n\r\nfunction multiplyMatrix(mtrx1, mtrx2) {\r\n    const m1 = [\r\n        [mtrx1[0], mtrx1[2], mtrx1[4]],\r\n        [mtrx1[1], mtrx1[3], mtrx1[5]],\r\n        [0, 0, 1]\r\n    ];\r\n\r\n    const m2 = [\r\n        [mtrx2[0], mtrx2[2], mtrx2[4]],\r\n        [mtrx2[1], mtrx2[3], mtrx2[5]],\r\n        [0, 0, 1]\r\n    ];\r\n\r\n    const result = [];\r\n\r\n    for (let j = 0; j < m2.length; j++) {\r\n        result[j] = [];\r\n        for (let k = 0; k < m1[0].length; k++) {\r\n            let sum = 0;\r\n            for (let i = 0; i < m1.length; i++) {\r\n                sum += m1[i][k] * m2[j][i];\r\n            }\r\n            result[j].push(sum);\r\n        }\r\n    }\r\n\r\n    return [\r\n        result[0][0], result[1][0],\r\n        result[0][1], result[1][1],\r\n        result[0][2], result[1][2]\r\n    ];\r\n}\r\n\r\nfunction createHandler(classList) {\r\n    const element = document.createElement('div');\r\n    classList.forEach(cls => {\r\n        addClass(element, cls);\r\n    });\r\n    return element;\r\n}","import { warn } from './../../util/util';\r\n\r\nexport const ALLOWED_ELEMENTS = [\r\n    'circle', 'ellipse',\r\n    'image', 'line',\r\n    'path', 'polygon',\r\n    'polyline', 'rect',\r\n    'text', 'g'\r\n];\r\n\r\nexport function createSVGElement(name) {\r\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\r\n}\r\n\r\nexport function createSVGMatrix() {\r\n    return createSVGElement('svg').createSVGMatrix();\r\n}\r\n\r\nexport function getTransformToElement(toElement, g) {\r\n    const gTransform = g.getScreenCTM() || createSVGMatrix();\r\n    return gTransform.inverse().multiply(\r\n        toElement.getScreenCTM() || createSVGMatrix()\r\n    );\r\n}\r\n\r\nexport function matrixToString(m) {\r\n    return `matrix(${m.a},${m.b},${m.c},${m.d},${m.e},${m.f})`;\r\n}\r\n\r\nexport function pointTo(ctm, svg, x, y) {\r\n    const pt = svg.createSVGPoint();\r\n    pt.x = x;\r\n    pt.y = y;\r\n    return pt.matrixTransform(ctm);\r\n}\r\n\r\nexport function cloneMatrix(b) {\r\n    const a = createSVGMatrix();\r\n\r\n    a.a = b.a;\r\n    a.b = b.b;\r\n    a.c = b.c;\r\n    a.d = b.d;\r\n    a.e = b.e;\r\n    a.f = b.f;\r\n\r\n    return a;\r\n}\r\n\r\nexport function checkElement(el) {\r\n    const tagName = el.tagName.toLowerCase();\r\n\r\n    if (ALLOWED_ELEMENTS.indexOf(tagName) === -1) {\r\n        warn(\r\n            'Selected element is not allowed to transform. Allowed elements:\\n' +\r\n            'circle, ellipse, image, line, path, polygon, polyline, rect, text, g'\r\n        );\r\n        return false;\r\n    } else {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport function isIdentity(matrix) {\r\n    return matrix.a === 1 &&\r\n        matrix.b === 0 &&\r\n        matrix.c === 0 &&\r\n        matrix.d === 1 &&\r\n        matrix.e === 0 &&\r\n        matrix.f === 0;\r\n}","import {\r\n    warn\r\n} from './../../util/util';\r\n\r\nimport {\r\n    pointTo,\r\n    cloneMatrix\r\n} from './util';\r\n\r\nconst dRE = /\\s*([achlmqstvz])([^achlmqstvz]*)\\s*/gi;\r\nconst sepRE = /\\s*,\\s*|\\s+/g;\r\n\r\nfunction parsePath(path) {\r\n    let match = dRE.lastIndex = 0;\r\n\r\n    const serialized = [];\r\n\r\n    while ((match = dRE.exec(path))) {\r\n        const cmd = match[1];\r\n        const upCmd = cmd.toUpperCase();\r\n\r\n        // normalize the data\r\n        const data = match[2]\r\n            .replace(/([^e])-/g, '$1 -')\r\n            .replace(/ +/g, ' ');\r\n\r\n        serialized.push({\r\n            relative: cmd !== upCmd,\r\n            key: upCmd,\r\n            cmd: cmd,\r\n            values: data.trim().split(sepRE).map(val => {\r\n                if (!isNaN(val)) {\r\n                    return Number(val);\r\n                }\r\n            })\r\n        });\r\n    }\r\n\r\n    return serialized;\r\n}\r\n\r\nexport function movePath(params) {\r\n    const {\r\n        path,\r\n        dx,\r\n        dy\r\n    } = params;\r\n\r\n    try {\r\n        const serialized = parsePath(path);\r\n\r\n        let str = '';\r\n        let space = ' ';\r\n\r\n        let firstCommand = true;\r\n\r\n        for (let i = 0, len = serialized.length; i < len; i++) {\r\n            const item = serialized[i];\r\n\r\n            const {\r\n                values,\r\n                key: cmd,\r\n                relative\r\n            } = item;\r\n\r\n            const coordinates = [];\r\n\r\n            switch (cmd) {\r\n\r\n            case 'M': {\r\n                for (let k = 0, len = values.length; k < len; k += 2) {\r\n                    const [x, y] = values.slice(k, k + 2);\r\n\r\n                    if (!(relative && !firstCommand)) {\r\n                        x += dx;\r\n                        y += dy;\r\n                    }\r\n\r\n                    coordinates.push(\r\n                        x,\r\n                        y\r\n                    );\r\n\r\n                    firstCommand = false;\r\n                }\r\n                break;\r\n            }\r\n            case 'A': {\r\n                for (let k = 0, len = values.length; k < len; k += 7) {\r\n                    const set = values.slice(k, k + 7);\r\n\r\n                    if (!relative) {\r\n                        set[5] += dx;\r\n                        set[6] += dy;\r\n                    }\r\n\r\n                    coordinates.push(...set);\r\n                }\r\n                break;\r\n            }\r\n            case 'C': {\r\n                for (let k = 0, len = values.length; k < len; k += 6) {\r\n                    const set = values.slice(k, k + 6);\r\n\r\n                    if (!relative) {\r\n                        set[0] += dx;\r\n                        set[1] += dy;\r\n                        set[2] += dx;\r\n                        set[3] += dy;\r\n                        set[4] += dx;\r\n                        set[5] += dy;\r\n                    }\r\n\r\n                    coordinates.push(...set);\r\n                }\r\n                break;\r\n            }\r\n            case 'H': {\r\n                for (let k = 0, len = values.length; k < len; k += 1) {\r\n                    const set = values.slice(k, k + 1);\r\n\r\n                    if (!relative) {\r\n                        set[0] += dx;\r\n                    }\r\n\r\n                    coordinates.push(set[0]);\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'V': {\r\n                for (let k = 0, len = values.length; k < len; k += 1) {\r\n                    const set = values.slice(k, k + 1);\r\n\r\n                    if (!relative) {\r\n                        set[0] += dy;\r\n                    }\r\n                    coordinates.push(set[0]);\r\n                }\r\n\r\n                break;\r\n            }\r\n            case 'L':\r\n            case 'T': {\r\n                for (let k = 0, len = values.length; k < len; k += 2) {\r\n                    const [x, y] = values.slice(k, k + 2);\r\n\r\n                    if (!relative) {\r\n                        x += dx;\r\n                        y += dy;\r\n                    }\r\n\r\n                    coordinates.push(\r\n                        x,\r\n                        y\r\n                    );\r\n                }\r\n                break;\r\n            }\r\n\r\n            case 'Q':\r\n            case 'S': {\r\n                for (let k = 0, len = values.length; k < len; k += 4) {\r\n                    const [x1, y1, x2, y2] = values.slice(k, k + 4);\r\n\r\n                    if (!relative) {\r\n                        x1 += dx;\r\n                        y1 += dy;\r\n                        x2 += dx;\r\n                        y2 += dy;\r\n                    }\r\n\r\n                    coordinates.push(\r\n                        x1,\r\n                        y1,\r\n                        x2,\r\n                        y2\r\n                    );\r\n                }\r\n                break;\r\n            }\r\n            case 'Z':\r\n                values[0] = '';\r\n                space = '';\r\n                break;\r\n            \r\n            }\r\n\r\n            str += item.cmd + coordinates.join(',') + space;\r\n        }\r\n\r\n        return str;\r\n    } catch (err) {\r\n        warn('Path parsing error: ' + err);\r\n    }\r\n}\r\n\r\nexport function resizePath(params) {\r\n    const {\r\n        path,\r\n        localCTM,\r\n        container\r\n    } = params;\r\n\r\n    try {\r\n        const serialized = parsePath(path);\r\n\r\n        let str = '';\r\n        let space = ' ';\r\n\r\n        const res = [];\r\n\r\n        let firstCommand = true;\r\n\r\n        for (let i = 0, len = serialized.length; i < len; i++) {\r\n            const item = serialized[i];\r\n\r\n            const {\r\n                values,\r\n                key: cmd,\r\n                relative\r\n            } = item;\r\n\r\n            switch (cmd) {\r\n\r\n            case 'A': {\r\n                //A rx ry x-axis-rotation large-arc-flag sweep-flag x y\r\n                const coordinates = [];\r\n\r\n                for (let k = 0, len = values.length; k < len; k += 7) {\r\n                    const [rx, ry, x_axis_rot, large_arc_flag, sweep_flag, x, y] =\r\n                            values.slice(k, k + 7);\r\n\r\n                    const mtrx = cloneMatrix(localCTM);\r\n\r\n                    if (relative) {\r\n                        mtrx.e = mtrx.f = 0;\r\n                    }\r\n\r\n                    const {\r\n                        x: resX,\r\n                        y: resY\r\n                    } = pointTo(\r\n                        mtrx,\r\n                        container,\r\n                        x,\r\n                        y\r\n                    );\r\n\r\n                    coordinates.push(\r\n                        resX,\r\n                        resY\r\n                    );\r\n\r\n                    mtrx.e = mtrx.f = 0;\r\n\r\n                    const {\r\n                        x: newRx,\r\n                        y: newRy\r\n                    } = pointTo(\r\n                        mtrx,\r\n                        container,\r\n                        rx,\r\n                        ry\r\n                    );\r\n\r\n                    coordinates.unshift(\r\n                        newRx,\r\n                        newRy,\r\n                        x_axis_rot,\r\n                        large_arc_flag,\r\n                        sweep_flag\r\n                    );\r\n                }\r\n\r\n                res.push(coordinates);\r\n                break;\r\n            }\r\n\r\n            case 'C': {\r\n                //C x1 y1, x2 y2, x y (or c dx1 dy1, dx2 dy2, dx dy)\r\n                const coordinates = [];\r\n\r\n                for (let k = 0, len = values.length; k < len; k += 6) {\r\n                    const [x1, y1, x2, y2, x, y] = values.slice(k, k + 6);\r\n\r\n                    const mtrx = cloneMatrix(localCTM);\r\n\r\n                    if (relative) {\r\n                        mtrx.e = mtrx.f = 0;\r\n                    }\r\n\r\n                    const {\r\n                        x: resX1,\r\n                        y: resY1\r\n                    } = pointTo(\r\n                        mtrx,\r\n                        container,\r\n                        x1,\r\n                        y1\r\n                    );\r\n\r\n                    const {\r\n                        x: resX2,\r\n                        y: resY2\r\n                    } = pointTo(\r\n                        mtrx,\r\n                        container,\r\n                        x2,\r\n                        y2\r\n                    );\r\n\r\n                    const {\r\n                        x: resX,\r\n                        y: resY\r\n                    } = pointTo(\r\n                        mtrx,\r\n                        container,\r\n                        x,\r\n                        y\r\n                    );\r\n\r\n                    coordinates.push(\r\n                        resX1,\r\n                        resY1,\r\n                        resX2,\r\n                        resY2,\r\n                        resX,\r\n                        resY\r\n                    );\r\n                }\r\n\r\n                res.push(coordinates);\r\n                break;\r\n            }\r\n            // this command makes impossible free transform within group\r\n            // todo: use proportional resizing only or need to be converted to L\r\n            case 'H': {\r\n                // H x (or h dx)\r\n                const coordinates = [];\r\n\r\n                for (let k = 0, len = values.length; k < len; k += 1) {\r\n                    const [x] = values.slice(k, k + 1);\r\n\r\n                    const mtrx = cloneMatrix(localCTM);\r\n\r\n                    if (relative) {\r\n                        mtrx.e = mtrx.f = 0;\r\n                    }\r\n\r\n                    const {\r\n                        x: resX\r\n                    } = pointTo(\r\n                        mtrx,\r\n                        container,\r\n                        x,\r\n                        0\r\n                    );\r\n\r\n                    coordinates.push(\r\n                        resX\r\n                    );\r\n                }\r\n\r\n                res.push(coordinates);\r\n                break;\r\n            }\r\n            // this command makes impossible free transform within group\r\n            // todo: use proportional resizing only or need to be converted to L\r\n            case 'V': {\r\n                // V y (or v dy)\r\n                const coordinates = [];\r\n\r\n                for (let k = 0, len = values.length; k < len; k += 1) {\r\n                    const [y] = values.slice(k, k + 1);\r\n\r\n                    const mtrx = cloneMatrix(localCTM);\r\n\r\n                    if (relative) {\r\n                        mtrx.e = mtrx.f = 0;\r\n                    }\r\n\r\n                    const {\r\n                        y: resY\r\n                    } = pointTo(\r\n                        mtrx,\r\n                        container,\r\n                        0,\r\n                        y\r\n                    );\r\n\r\n                    coordinates.push(\r\n                        resY\r\n                    );\r\n                }\r\n\r\n                res.push(coordinates);\r\n                break;\r\n            }\r\n\r\n            case 'T':\r\n            case 'L': {\r\n                // T x y (or t dx dy)\r\n                // L x y (or l dx dy)\r\n                const coordinates = [];\r\n\r\n                for (let k = 0, len = values.length; k < len; k += 2) {\r\n                    const [x, y] = values.slice(k, k + 2);\r\n\r\n                    const mtrx = cloneMatrix(localCTM);\r\n\r\n                    if (relative) {\r\n                        mtrx.e = mtrx.f = 0;\r\n                    }\r\n\r\n                    const {\r\n                        x: resX,\r\n                        y: resY\r\n                    } = pointTo(\r\n                        mtrx,\r\n                        container,\r\n                        x,\r\n                        y\r\n                    );\r\n\r\n                    coordinates.push(\r\n                        resX,\r\n                        resY\r\n                    );\r\n                }\r\n\r\n                res.push(coordinates);\r\n                break;\r\n            }\r\n\r\n            case 'M': {\r\n                // M x y (or dx dy)\r\n                const coordinates = [];\r\n\r\n                for (let k = 0, len = values.length; k < len; k += 2) {\r\n                    const [x, y] = values.slice(k, k + 2);\r\n\r\n                    const mtrx = cloneMatrix(localCTM);\r\n\r\n                    if (relative && !firstCommand) {\r\n                        mtrx.e = mtrx.f = 0;\r\n                    }\r\n\r\n                    const {\r\n                        x: resX,\r\n                        y: resY\r\n                    } = pointTo(\r\n                        mtrx,\r\n                        container,\r\n                        x,\r\n                        y\r\n                    );\r\n\r\n                    coordinates.push(\r\n                        resX,\r\n                        resY\r\n                    );\r\n\r\n                    firstCommand = false;\r\n                }\r\n\r\n                res.push(coordinates);\r\n                break;\r\n            }\r\n\r\n            case 'Q': {\r\n                //Q x1 y1, x y (or q dx1 dy1, dx dy)\r\n                const coordinates = [];\r\n\r\n                for (let k = 0, len = values.length; k < len; k += 4) {\r\n                    const [x1, y1, x, y] = values.slice(k, k + 4);\r\n\r\n                    const mtrx = cloneMatrix(localCTM);\r\n\r\n                    if (relative) {\r\n                        mtrx.e = mtrx.f = 0;\r\n                    }\r\n\r\n                    const {\r\n                        x: resX1,\r\n                        y: resY1\r\n                    } = pointTo(\r\n                        mtrx,\r\n                        container,\r\n                        x1,\r\n                        y1\r\n                    );\r\n\r\n                    const {\r\n                        x: resX,\r\n                        y: resY\r\n                    } = pointTo(\r\n                        mtrx,\r\n                        container,\r\n                        x,\r\n                        y\r\n                    );\r\n\r\n                    coordinates.push(\r\n                        resX1,\r\n                        resY1,\r\n                        resX,\r\n                        resY\r\n                    );\r\n                }\r\n\r\n                res.push(coordinates);\r\n                break;\r\n            }\r\n\r\n            case 'S': {\r\n                //S x2 y2, x y (or s dx2 dy2, dx dy)\r\n                const coordinates = [];\r\n\r\n                for (let k = 0, len = values.length; k < len; k += 4) {\r\n                    const [x2, y2, x, y] = values.slice(k, k + 4);\r\n\r\n                    const mtrx = cloneMatrix(localCTM);\r\n\r\n                    if (relative) {\r\n                        mtrx.e = mtrx.f = 0;\r\n                    }\r\n\r\n                    const {\r\n                        x: resX2,\r\n                        y: resY2\r\n                    } = pointTo(\r\n                        mtrx,\r\n                        container,\r\n                        x2,\r\n                        y2\r\n                    );\r\n\r\n                    const {\r\n                        x: resX,\r\n                        y: resY\r\n                    } = pointTo(\r\n                        localCTM,\r\n                        container,\r\n                        x,\r\n                        y\r\n                    );\r\n\r\n                    coordinates.push(\r\n                        resX2,\r\n                        resY2,\r\n                        resX,\r\n                        resY\r\n                    );\r\n                }\r\n\r\n                res.push(coordinates);\r\n                break;\r\n            }\r\n\r\n            case 'Z': {\r\n                res.push(['']);\r\n                space = '';\r\n                break;\r\n            }\r\n            \r\n            }\r\n\r\n            str += item.cmd + res[i].join(',') + space;\r\n        }\r\n\r\n        return str;\r\n    } catch (err) {\r\n        warn('Path parsing error: ' + err);\r\n    }\r\n}","import { helper } from '../../Helper';\r\nimport Subject from '../Subject';\r\n\r\nimport {\r\n    isDef,\r\n    isUndef,\r\n    forEach\r\n} from '../../util/util';\r\n\r\nimport {\r\n    floatToFixed\r\n} from '../common';\r\n\r\nimport {\r\n    movePath,\r\n    resizePath\r\n} from './path';\r\n\r\nimport {\r\n    addClass\r\n} from '../../util/css-util';\r\n\r\nimport {\r\n    ALLOWED_ELEMENTS,\r\n    createSVGElement,\r\n    createSVGMatrix,\r\n    getTransformToElement,\r\n    matrixToString,\r\n    pointTo,\r\n    isIdentity\r\n} from './util';\r\n\r\nconst MIN_SIZE = 5;\r\nconst ROT_OFFSET = 50;\r\nconst floatRE = /[+-]?\\d+(\\.\\d+)?/g;\r\n\r\nexport default class DraggableSVG extends Subject {\r\n\r\n    constructor(el, options, observable) {\r\n        super(el, observable);\r\n        this.enable(options);\r\n    }\r\n\r\n    _init(el) {\r\n        const { options } = this;\r\n\r\n        const {\r\n            rotationPoint,\r\n            container,\r\n            themeColor\r\n        } = options;\r\n\r\n        const wrapper = createSVGElement('g');\r\n        container.appendChild(wrapper);\r\n\r\n        const {\r\n            width: cw,\r\n            height: ch,\r\n            x: cx,\r\n            y: cy\r\n        } = el.getBBox();\r\n\r\n        const elCTM = getTransformToElement(el, container);\r\n        const box = createSVGElement('rect');\r\n\r\n        const attrs = [\r\n            ['width', cw],\r\n            ['height', ch],\r\n            ['x', cx],\r\n            ['y', cy],\r\n            ['fill', themeColor],\r\n            ['fill-opacity', 0.2],\r\n            ['stroke', themeColor],\r\n            ['stroke-dasharray', '3 3'],\r\n            ['vector-effect', 'non-scaling-stroke'],\r\n            ['transform', matrixToString(elCTM)]\r\n        ];\r\n\r\n        attrs.forEach(item => {\r\n            box.setAttribute(item[0], item[1]);\r\n        });\r\n\r\n        const handlesGroup = createSVGElement('g'),\r\n            normalLineGroup = createSVGElement('g'),\r\n            group = createSVGElement('g');\r\n\r\n        group.appendChild(box);\r\n        wrapper.appendChild(group);\r\n        wrapper.appendChild(normalLineGroup);\r\n        wrapper.appendChild(handlesGroup);\r\n\r\n        const {\r\n            x: bX,\r\n            y: bY,\r\n            width: bW,\r\n            height: bH\r\n        } = box.getBBox();\r\n\r\n        const centerX = el.getAttribute('data-cx'),\r\n            centerY = el.getAttribute('data-cy');\r\n\r\n        const boxCTM = getTransformToElement(box, box.parentNode),\r\n            boxCenter = pointTo(boxCTM, container, bX + bW / 2, bY + bH / 2);\r\n\r\n        const handles = {\r\n            tl: pointTo(boxCTM, container, bX, bY),\r\n            tr: pointTo(boxCTM, container, bX + bW, bY),\r\n            br: pointTo(boxCTM, container, bX + bW, bY + bH),\r\n            bl: pointTo(boxCTM, container, bX, bY + bH),\r\n            tc: pointTo(boxCTM, container, bX + bW / 2, bY),\r\n            bc: pointTo(boxCTM, container, bX + bW / 2, bY + bH),\r\n            ml: pointTo(boxCTM, container, bX, bY + bH / 2),\r\n            mr: pointTo(boxCTM, container, bX + bW, bY + bH / 2),\r\n            center: rotationPoint ? createPoint(container, centerX, centerY) || boxCenter : undefined,\r\n            //...(rotationPoint ? { center: createPoint(container, centerX, centerY) || boxCenter }),\r\n            rotator: {}\r\n        };\r\n\r\n        const theta = Math.atan2(\r\n            handles.tl.y - handles.tr.y,\r\n            handles.tl.x - handles.tr.x\r\n        );\r\n\r\n        handles.rotator.x = handles.mr.x - ROT_OFFSET * Math.cos(theta);\r\n        handles.rotator.y = handles.mr.y - ROT_OFFSET * Math.sin(theta);\r\n\r\n        const normalLine = createSVGElement('line');\r\n\r\n        normalLine.x1.baseVal.value = handles.mr.x;\r\n        normalLine.y1.baseVal.value = handles.mr.y;\r\n        normalLine.x2.baseVal.value = handles.rotator.x;\r\n        normalLine.y2.baseVal.value = handles.rotator.y;\r\n\r\n        setLineStyle(normalLine, themeColor);\r\n\r\n        normalLineGroup.appendChild(normalLine);\r\n\r\n        let radius = null;\r\n\r\n        if (rotationPoint) {\r\n            radius = createSVGElement('line');\r\n\r\n            addClass(radius, 'sjx-hidden');\r\n            \r\n            radius.x1.baseVal.value = boxCenter.x;\r\n            radius.y1.baseVal.value = boxCenter.y;\r\n            radius.x2.baseVal.value = centerX || boxCenter.x;\r\n            radius.y2.baseVal.value = centerY || boxCenter.y;\r\n\r\n            setLineStyle(radius, themeColor);\r\n            radius.setAttribute('opacity', 0.5);\r\n\r\n            normalLineGroup.appendChild(radius);\r\n        }\r\n\r\n        Object.keys(handles).forEach(key => {\r\n            const data = handles[key];\r\n            if (isUndef(data)) return;\r\n            handles[key] = createHandler(data.x, data.y, themeColor);\r\n            handlesGroup.appendChild(handles[key]);\r\n        });\r\n\r\n        this.storage = {\r\n            wrapper,\r\n            box,\r\n            handles,\r\n            normalLine,\r\n            radius: rotationPoint ? radius : undefined,\r\n            //...(rotationPoint && { radius }),\r\n            parent: el.parentNode\r\n        };\r\n\r\n        helper(wrapper)\r\n            .on('mousedown', this._onMouseDown)\r\n            .on('touchstart', this._onTouchStart);\r\n    }\r\n\r\n    _destroy() {\r\n        const {\r\n            wrapper\r\n        } = this.storage;\r\n\r\n        helper(wrapper)\r\n            .off('mousedown', this._onMouseDown)\r\n            .off('touchstart', this._onTouchStart);\r\n\r\n        wrapper.parentNode.removeChild(wrapper);\r\n    }\r\n\r\n    _compute(e) {\r\n        const {\r\n            storage\r\n        } = this;\r\n\r\n        const {\r\n            handles\r\n        } = storage;\r\n\r\n        const handle = helper(e.target);\r\n\r\n        //reverse axis\r\n        const revX = handle.is(handles.tl) ||\r\n            handle.is(handles.ml) ||\r\n            handle.is(handles.bl) ||\r\n            handle.is(handles.tc);\r\n\r\n        const revY = handle.is(handles.tl) ||\r\n            handle.is(handles.tr) ||\r\n            handle.is(handles.tc) ||\r\n            handle.is(handles.ml);\r\n\r\n        const onTopEdge = handle.is(handles.tl) || handle.is(handles.tc) || handle.is(handles.tr),\r\n            onLeftEdge = handle.is(handles.tl) || handle.is(handles.ml) || handle.is(handles.bl),\r\n            onRightEdge = handle.is(handles.tr) || handle.is(handles.mr) || handle.is(handles.br),\r\n            onBottomEdge = handle.is(handles.br) || handle.is(handles.bc) || handle.is(handles.bl);\r\n\r\n        const _computed = this._getState({\r\n            revX,\r\n            revY\r\n        });\r\n\r\n        const {\r\n            x: clientX,\r\n            y: clientY\r\n        } = this._cursorPoint(e);\r\n\r\n        const pressang = Math.atan2(\r\n            clientY - _computed.center.y,\r\n            clientX - _computed.center.x\r\n        );\r\n\r\n        _computed.onTopEdge = onTopEdge;\r\n        _computed.onLeftEdge = onLeftEdge;\r\n        _computed.onRightEdge = onRightEdge;\r\n        _computed.onBottomEdge = onBottomEdge;\r\n        _computed.handle = handle;\r\n        _computed.pressang = pressang;\r\n\r\n        return _computed;\r\n    }\r\n\r\n    _cursorPoint(e) {\r\n        const {\r\n            container\r\n        } = this.options;\r\n\r\n        return pointTo(\r\n            container.getScreenCTM().inverse(),\r\n            container,\r\n            e.clientX,\r\n            e.clientY\r\n        );\r\n    }\r\n\r\n    _pointToElement(data) {\r\n        const {\r\n            transform\r\n        } = this.storage;\r\n\r\n        const {\r\n            x,\r\n            y\r\n        } = data;\r\n\r\n        const { ctm } = transform;\r\n        const matrix = ctm.inverse();\r\n\r\n        matrix.e = matrix.f = 0;\r\n\r\n        return this._applyMatrixToPoint(\r\n            matrix,\r\n            x,\r\n            y\r\n        );\r\n    }\r\n\r\n    _pointToControls(data) {\r\n        const {\r\n            transform\r\n        } = this.storage;\r\n\r\n        const {\r\n            x,\r\n            y\r\n        } = data;\r\n\r\n        const { boxCTM } = transform;\r\n        const matrix = boxCTM.inverse();\r\n\r\n        matrix.e = matrix.f = 0;\r\n\r\n        return this._applyMatrixToPoint(\r\n            matrix,\r\n            x,\r\n            y\r\n        );\r\n    }\r\n\r\n    _applyMatrixToPoint(matrix, x, y) {\r\n        const {\r\n            container\r\n        } = this.options;\r\n\r\n        const pt = container.createSVGPoint();\r\n        pt.x = x;\r\n        pt.y = y;\r\n        return pt.matrixTransform(matrix);\r\n    }\r\n\r\n    _apply(actionName) {\r\n        const {\r\n            el: element,\r\n            storage,\r\n            options\r\n        } = this;\r\n\r\n        const {\r\n            container\r\n        } = options;\r\n\r\n        const {\r\n            box,\r\n            handles,\r\n            cached,\r\n            transform\r\n        } = storage;\r\n\r\n        const {\r\n            matrix\r\n        } = transform;\r\n\r\n        const eBBox = element.getBBox();\r\n\r\n        const {\r\n            x: elX,\r\n            y: elY,\r\n            width: elW,\r\n            height: elH\r\n        } = eBBox;\r\n\r\n        const rotationPoint = isDef(handles.center) \r\n            ? pointTo(\r\n                transform.boxCTM,\r\n                container,\r\n                handles.center.cx.baseVal.value,\r\n                handles.center.cy.baseVal.value,\r\n            )\r\n            : pointTo(\r\n                matrix,\r\n                container,\r\n                elX + elW / 2,\r\n                elY + elH / 2\r\n            );\r\n\r\n        element.setAttribute('data-cx', rotationPoint.x);\r\n        element.setAttribute('data-cy', rotationPoint.y);\r\n\r\n        if (isUndef(cached)) return;\r\n\r\n        const {\r\n            scaleX,\r\n            scaleY,\r\n            dx,\r\n            dy,\r\n            ox,\r\n            oy\r\n        } = cached;\r\n\r\n        if (actionName === 'drag') {\r\n            if (dx === 0 && dy === 0) return;\r\n\r\n            // create translate matrix for an element\r\n            const eM = createSVGMatrix();\r\n\r\n            eM.e = dx;\r\n            eM.f = dy;\r\n\r\n            const translateMatrix = eM.multiply(matrix)\r\n                .multiply(eM.inverse());\r\n\r\n            element.setAttribute(\r\n                'transform',\r\n                matrixToString(translateMatrix)\r\n            );\r\n\r\n            if (isGroup(element)) {\r\n                const els = checkChildElements(element);\r\n\r\n                els.forEach(child => {\r\n                    const pt = container.createSVGPoint();\r\n                    const ctm = getTransformToElement(element.parentNode, container).inverse();\r\n                    pt.x = ox;\r\n                    pt.y = oy;\r\n                    ctm.e = ctm.f = 0;\r\n                    const newPT = pt.matrixTransform(ctm);\r\n\r\n                    // create translate matrix for an element\r\n                    const eM = createSVGMatrix();\r\n\r\n                    eM.e = dx;\r\n                    eM.f = dy;\r\n\r\n                    const translateMatrix = eM.multiply(\r\n                        getTransformToElement(child, child.parentNode)\r\n                    ).multiply(eM.inverse());\r\n\r\n                    if (!isIdentity(translateMatrix)) {\r\n                        child.setAttribute(\r\n                            'transform',\r\n                            matrixToString(translateMatrix)\r\n                        );\r\n                    }\r\n\r\n                    if (!isGroup(child)) {\r\n                        applyTranslate(child, {\r\n                            x: newPT.x,\r\n                            y: newPT.y\r\n                        });\r\n                    }\r\n                });\r\n            } else {\r\n                applyTranslate(element, {\r\n                    x: dx,\r\n                    y: dy\r\n                });\r\n            }\r\n        }\r\n\r\n        if (actionName === 'resize') {\r\n            const {\r\n                x,\r\n                y,\r\n                width: newWidth,\r\n                height: newHeight\r\n            } = box.getBBox();\r\n\r\n            applyTransformToHandles(\r\n                storage,\r\n                {\r\n                    x,\r\n                    y,\r\n                    width: newWidth,\r\n                    height: newHeight\r\n                },\r\n                container\r\n            );\r\n\r\n            if (isGroup(element)) {\r\n                const els = checkChildElements(element);\r\n\r\n                els.forEach(child => {\r\n                    if (!isGroup(child)) {\r\n                        applyResize(child, {\r\n                            scaleX,\r\n                            scaleY,\r\n                            defaultCTM: child.__ctm__,\r\n                            bBox: transform.bBox,\r\n                            container,\r\n                            storage\r\n                        });\r\n                    }\r\n                });\r\n            } else {\r\n                applyResize(element, {\r\n                    scaleX,\r\n                    scaleY,\r\n                    defaultCTM: transform.ctm,\r\n                    bBox: transform.bBox,\r\n                    container,\r\n                    storage\r\n                });\r\n            }\r\n\r\n            element.setAttribute(\r\n                'transform',\r\n                matrixToString(matrix)\r\n            );\r\n        }\r\n\r\n        this.storage.cached = null;\r\n    }\r\n\r\n    _processResize(dx, dy) {\r\n        const { \r\n            el,\r\n            storage,\r\n            options\r\n        } = this;\r\n\r\n        const {\r\n            container,\r\n            proportions\r\n        } = options;\r\n\r\n        const {\r\n            box,\r\n            left,\r\n            top,\r\n            cw,\r\n            ch,\r\n            transform,\r\n            revX,\r\n            revY\r\n        } = this.storage;\r\n\r\n        const {\r\n            matrix,\r\n            scMatrix,\r\n            trMatrix,\r\n            scaleX: ptX,\r\n            scaleY: ptY\r\n        } = transform;\r\n\r\n        let {\r\n            width: newWidth,\r\n            height: newHeight\r\n        } = box.getBBox();\r\n\r\n        const ratio = (cw + dx) / cw;\r\n\r\n        newWidth = proportions ? cw * ratio : cw + dx;\r\n        newHeight = proportions ? ch * ratio : ch + dy;\r\n\r\n        if (Math.abs(newWidth) < MIN_SIZE || Math.abs(newHeight) < MIN_SIZE) return;\r\n\r\n        const scaleX = newWidth / cw,\r\n            scaleY = newHeight / ch;\r\n\r\n        // setup scale matrix\r\n        scMatrix.a = scaleX;\r\n        scMatrix.b = 0;\r\n        scMatrix.c = 0;\r\n        scMatrix.d = scaleY;\r\n        scMatrix.e = 0;\r\n        scMatrix.f = 0;\r\n\r\n        // translate compensation matrix\r\n        trMatrix.e = ptX;\r\n        trMatrix.f = ptY;\r\n\r\n        //now must to do: translate(x y) scale(sx sy) translate(-x -y)\r\n        const scaleMatrix = trMatrix\r\n            .multiply(scMatrix)\r\n            .multiply(trMatrix.inverse());\r\n\r\n        const res = matrix.multiply(scaleMatrix);\r\n\r\n        el.setAttribute(\r\n            'transform',\r\n            matrixToString(res)\r\n        );\r\n\r\n        this.storage.cached = {\r\n            scaleX,\r\n            scaleY\r\n        };\r\n\r\n        applyTransformToHandles(\r\n            storage,\r\n            {\r\n                x: revX ? left - (newWidth - cw) : left,\r\n                y: revY ? top - (newHeight - ch) : top,\r\n                width: newWidth,\r\n                height: newHeight,\r\n            },\r\n            container\r\n        );\r\n    }\r\n\r\n    _processMove(dx, dy) {\r\n        const {\r\n            container\r\n        } = this.options;\r\n\r\n        const {\r\n            transform,\r\n            wrapper,\r\n            center\r\n        } = this.storage;\r\n\r\n        const {\r\n            matrix,\r\n            trMatrix,\r\n            scMatrix,\r\n            wrapperMatrix,\r\n            parentMatrix\r\n        } = transform;\r\n\r\n        scMatrix.e = dx;\r\n        scMatrix.f = dy;\r\n\r\n        const moveWrapper = scMatrix.multiply(wrapperMatrix);\r\n\r\n        wrapper.setAttribute(\r\n            'transform',\r\n            matrixToString(moveWrapper)\r\n        );\r\n\r\n        parentMatrix.e = parentMatrix.f = 0;\r\n        const { x, y } = pointTo(\r\n            parentMatrix.inverse(),\r\n            container,\r\n            dx,\r\n            dy\r\n        );\r\n\r\n        trMatrix.e = x;\r\n        trMatrix.f = y;\r\n\r\n        const moveElement = trMatrix.multiply(matrix);\r\n\r\n        this.el.setAttribute(\r\n            'transform',\r\n            matrixToString(moveElement)\r\n        );\r\n\r\n        this.storage.cached = {\r\n            dx: x,\r\n            dy: y,\r\n            ox: dx,\r\n            oy: dy\r\n        };\r\n\r\n        if (!center.isShifted) return;\r\n\r\n        const radiusMatrix = wrapperMatrix.inverse();\r\n        radiusMatrix.e = radiusMatrix.f = 0;\r\n        const { x: nx, y: ny } = pointTo(\r\n            radiusMatrix,\r\n            container,\r\n            dx,\r\n            dy\r\n        );\r\n\r\n        this._moveCenterHandle(-nx,-ny);\r\n    }\r\n\r\n    _processRotate(radians) {\r\n        const {\r\n            center,\r\n            transform,\r\n            wrapper\r\n        } = this.storage;\r\n\r\n        const {\r\n            matrix,\r\n            wrapperMatrix,\r\n            parentMatrix,\r\n            trMatrix,\r\n            scMatrix,\r\n            rotMatrix\r\n        } = transform;\r\n\r\n        const cos = floatToFixed(Math.cos(radians)),\r\n            sin = floatToFixed(Math.sin(radians));\r\n\r\n        // rotate(a cx cy) is equivalent to translate(cx cy) rotate(a) translate(-cx -cy)\r\n        trMatrix.e = center.x;\r\n        trMatrix.f = center.y;\r\n\r\n        rotMatrix.a = cos;\r\n        rotMatrix.b = sin;\r\n        rotMatrix.c = - sin;\r\n        rotMatrix.d = cos;\r\n\r\n        const wrapMatrix = trMatrix.multiply(rotMatrix)\r\n            .multiply(trMatrix.inverse())\r\n            .multiply(wrapperMatrix);\r\n\r\n        wrapper.setAttribute(\r\n            'transform',\r\n            matrixToString(wrapMatrix)\r\n        );\r\n\r\n        scMatrix.e = center.el_x;\r\n        scMatrix.f = center.el_y;\r\n\r\n        parentMatrix.e = parentMatrix.f = 0;\r\n        const resRotMatrix = parentMatrix.inverse()\r\n            .multiply(rotMatrix)\r\n            .multiply(parentMatrix);\r\n\r\n        const rotateMatrix = scMatrix.multiply(resRotMatrix)\r\n            .multiply(scMatrix.inverse());\r\n\r\n        const elMatrix = rotateMatrix.multiply(matrix);\r\n\r\n        this.el.setAttribute(\r\n            'transform',\r\n            matrixToString(elMatrix)\r\n        );\r\n    }\r\n\r\n    _getState(params) {\r\n        const {\r\n            revX,\r\n            revY\r\n        } = params;\r\n\r\n        const {\r\n            el: element,\r\n            storage,\r\n            options\r\n        } = this;\r\n\r\n        const {\r\n            container\r\n        } = options;\r\n\r\n        const {\r\n            box,\r\n            wrapper,\r\n            parent,\r\n            handles\r\n        } = storage;\r\n\r\n        const {\r\n            center: cHandle\r\n        } = handles;\r\n\r\n        const eBBox = element.getBBox();\r\n\r\n        const {\r\n            x: el_x,\r\n            y: el_y,\r\n            width: el_w,\r\n            height: el_h\r\n        } = eBBox;\r\n\r\n        const {\r\n            width: cw,\r\n            height: ch,\r\n            x: c_left,\r\n            y: c_top\r\n        } = box.getBBox();\r\n\r\n        const elMatrix = getTransformToElement(element, parent),\r\n            ctm = getTransformToElement(element, container),\r\n            boxGroup = box.parentNode,\r\n            boxCTM = getTransformToElement(boxGroup, container);\r\n        \r\n        const parentMatrix = getTransformToElement(parent, container);\r\n\r\n        const transform = {\r\n            matrix: elMatrix,\r\n            ctm,\r\n            boxCTM,\r\n            parentMatrix,\r\n            wrapperMatrix: getTransformToElement(wrapper, wrapper.parentNode),\r\n            trMatrix: createSVGMatrix(),\r\n            scMatrix: createSVGMatrix(),\r\n            rotMatrix: createSVGMatrix(),\r\n            scaleX: revX ? el_w + el_x : el_x,\r\n            scaleY: revY ? el_h + el_y : el_y,\r\n            scX: Math.sqrt(ctm.a * ctm.a + ctm.b * ctm.b),\r\n            scY: Math.sqrt(ctm.c * ctm.c + ctm.d * ctm.d),\r\n            bBox: eBBox\r\n        };\r\n\r\n        const boxCenterX =  c_left + cw / 2,\r\n            boxCenterY = c_top + ch / 2;\r\n\r\n        const centerX = cHandle \r\n                ? cHandle.cx.baseVal.value\r\n                : boxCenterX,\r\n            centerY = cHandle\r\n                ? cHandle.cy.baseVal.value\r\n                : boxCenterY;\r\n\r\n        // c-handler's coordinates\r\n        const { x: bcx, y: bcy } = pointTo(\r\n            boxCTM,\r\n            container,\r\n            centerX,\r\n            centerY\r\n        );\r\n\r\n        // element's center coordinates\r\n        const { x: elcx, y: elcy } = isDef(cHandle)\r\n            ? pointTo(\r\n                parentMatrix.inverse(),\r\n                container,\r\n                bcx,\r\n                bcy\r\n            )\r\n            : pointTo(\r\n                elMatrix,\r\n                container,\r\n                el_x + el_w / 2,\r\n                el_y + el_h / 2\r\n            );\r\n\r\n        // box's center coordinates\r\n        const { x: rcx, y: rcy } = pointTo(\r\n            getTransformToElement(box, container),\r\n            container,\r\n            boxCenterX,\r\n            boxCenterY\r\n        );\r\n\r\n        checkChildElements(element).forEach(child => {\r\n            child.__ctm__ = getTransformToElement(child, container);\r\n        });\r\n\r\n        return {\r\n            transform,\r\n            cw,\r\n            ch,\r\n            center: {\r\n                x: cHandle ? bcx : rcx,\r\n                y: cHandle ? bcy : rcy,\r\n                el_x: elcx,\r\n                el_y: elcy,\r\n                hx: cHandle ? cHandle.cx.baseVal.value : null,\r\n                hy: cHandle ? cHandle.cy.baseVal.value : null,\r\n                isShifted: (floatToFixed(rcx, 3) !== floatToFixed(bcx, 3)) &&\r\n                            (floatToFixed(rcy, 3) !== floatToFixed(bcy, 3))\r\n            },\r\n            left: c_left,\r\n            top: c_top,\r\n            revX,\r\n            revY\r\n        };\r\n    }\r\n\r\n    _moveCenterHandle(x, y) {\r\n        const { storage } = this;\r\n\r\n        const { \r\n            handles, \r\n            center, \r\n            radius \r\n        } = storage;\r\n\r\n        if (isUndef(handles.center)) return;\r\n\r\n        handles.center.cx.baseVal.value = center.hx + x;\r\n        handles.center.cy.baseVal.value = center.hy + y;\r\n\r\n        radius.x2.baseVal.value = center.hx + x;\r\n        radius.y2.baseVal.value = center.hy + y;\r\n    }\r\n\r\n    resetCenterPoint() {\r\n        const {\r\n            box,\r\n            handles,\r\n            radius\r\n        } = this.storage;\r\n\r\n        const {\r\n            center\r\n        } = handles;\r\n\r\n        const {\r\n            container\r\n        } = this.options;\r\n\r\n        const {\r\n            width: cw,\r\n            height: ch,\r\n            x: c_left,\r\n            y: c_top\r\n        } = box.getBBox();\r\n\r\n        const matrix = getTransformToElement(box, box.parentNode);\r\n        \r\n        const { x: cx, y: cy } = pointTo(\r\n            matrix,\r\n            container,\r\n            c_left + cw / 2,\r\n            c_top + ch / 2\r\n        );\r\n\r\n        center.cx.baseVal.value = cx;\r\n        center.cy.baseVal.value = cy;\r\n        center.isShifted = false;\r\n\r\n        radius.x2.baseVal.value = cx;\r\n        radius.y2.baseVal.value = cy;\r\n    }\r\n\r\n    get controls() {\r\n        return this.storage.wrapper;\r\n    }\r\n\r\n}\r\n\r\nfunction applyTranslate(element, data) {\r\n    const {\r\n        x,\r\n        y\r\n    } = data;\r\n\r\n    const attrs = [];\r\n\r\n    switch (element.tagName.toLowerCase()) {\r\n\r\n    case 'use':\r\n    case 'image':\r\n    case 'text':\r\n    case 'rect': {\r\n        const resX = element.x.baseVal.value + x,\r\n            resY = element.y.baseVal.value + y;\r\n\r\n        attrs.push(\r\n            ['x', resX],\r\n            ['y', resY]\r\n        );\r\n    }\r\n        break;\r\n\r\n    case 'circle':\r\n    case 'ellipse': {\r\n        const resX = element.cx.baseVal.value + x,\r\n            resY = element.cy.baseVal.value + y;\r\n\r\n        attrs.push(\r\n            ['cx', resX],\r\n            ['cy', resY]\r\n        );\r\n    }\r\n        break;\r\n\r\n    case 'line': {\r\n        const resX1 = element.x1.baseVal.value + x,\r\n            resY1 = element.y1.baseVal.value + y,\r\n            resX2 = element.x2.baseVal.value + x,\r\n            resY2 = element.y2.baseVal.value + y;\r\n\r\n        attrs.push(\r\n            ['x1', resX1],\r\n            ['y1', resY1],\r\n            ['x2', resX2],\r\n            ['y2', resY2]\r\n        );\r\n    }\r\n        break;\r\n\r\n    case 'polygon':\r\n    case 'polyline': {\r\n        const points = parsePoints(element.getAttribute('points'));\r\n        const result = points.map(item => {\r\n            item[0] = Number(item[0]) + x;\r\n            item[1] = Number(item[1]) + y;\r\n\r\n            return item.join(' ');\r\n        }).join(' ');\r\n\r\n        attrs.push(\r\n            ['points', result]\r\n        );\r\n    }\r\n        break;\r\n\r\n    case 'path': {\r\n        const path = element.getAttribute('d');\r\n\r\n        attrs.push(['d', movePath(\r\n            {\r\n                path,\r\n                dx: x,\r\n                dy: y\r\n            }\r\n        )]);\r\n    }\r\n\r\n        break;\r\n\r\n    default:\r\n        break;\r\n    \r\n    }\r\n\r\n    attrs.forEach(item => {\r\n        element.setAttribute(item[0], item[1]);\r\n    });\r\n}\r\n\r\nfunction applyResize(element, data) {\r\n    const {\r\n        scaleX,\r\n        scaleY,\r\n        bBox,\r\n        defaultCTM,\r\n        container\r\n    } = data;\r\n\r\n    const {\r\n        width: boxW,\r\n        height: boxH\r\n    } = bBox;\r\n\r\n    const attrs = [];\r\n\r\n    const ctm = getTransformToElement(element, container);\r\n    const localCTM = defaultCTM.inverse().multiply(ctm);\r\n\r\n    switch (element.tagName.toLowerCase()) {\r\n\r\n    case 'text': {\r\n        const x = element.x.baseVal.value,\r\n            y = element.y.baseVal.value;\r\n\r\n        const {\r\n            x: resX,\r\n            y: resY\r\n        } = pointTo(\r\n            localCTM,\r\n            container,\r\n            x,\r\n            y\r\n        );\r\n\r\n        attrs.push(\r\n            ['x', resX + (scaleX < 0 ? boxW : 0)],\r\n            ['y', resY + (scaleY < 0 ? boxH : 0)]\r\n        );\r\n    }\r\n        break;\r\n\r\n    case 'circle': {\r\n        const r = element.r.baseVal.value,\r\n            cx = element.cx.baseVal.value,\r\n            cy = element.cy.baseVal.value,\r\n            newR = r * (Math.abs(scaleX) + Math.abs(scaleY)) / 2;\r\n\r\n        const {\r\n            x: resX,\r\n            y: resY\r\n        } = pointTo(\r\n            localCTM,\r\n            container,\r\n            cx,\r\n            cy\r\n        );\r\n\r\n        attrs.push(\r\n            ['r', newR],\r\n            ['cx', resX],\r\n            ['cy', resY]\r\n        );\r\n    }\r\n        break;\r\n\r\n    case 'image':\r\n    case 'rect': {\r\n        const width = element.width.baseVal.value,\r\n            height = element.height.baseVal.value,\r\n            x = element.x.baseVal.value,\r\n            y = element.y.baseVal.value;\r\n\r\n        const {\r\n            x: resX,\r\n            y: resY\r\n        } = pointTo(\r\n            localCTM,\r\n            container,\r\n            x,\r\n            y\r\n        );\r\n\r\n        const newWidth = Math.abs(width * scaleX),\r\n            newHeight = Math.abs(height * scaleY);\r\n\r\n        attrs.push(\r\n            ['x', resX - (scaleX < 0 ? newWidth : 0)],\r\n            ['y', resY - (scaleY < 0 ? newHeight : 0)],\r\n            ['width', newWidth],\r\n            ['height', newHeight]\r\n        );\r\n    }\r\n        break;\r\n\r\n    case 'ellipse': {\r\n        const rx = element.rx.baseVal.value,\r\n            ry = element.ry.baseVal.value,\r\n            cx = element.cx.baseVal.value,\r\n            cy = element.cy.baseVal.value;\r\n\r\n        const {\r\n            x: cx1,\r\n            y: cy1\r\n        } = pointTo(\r\n            localCTM,\r\n            container,\r\n            cx,\r\n            cy\r\n        );\r\n\r\n        const scaleMatrix = createSVGMatrix();\r\n\r\n        scaleMatrix.a = scaleX;\r\n        scaleMatrix.d = scaleY;\r\n\r\n        const {\r\n            x: nRx,\r\n            y: nRy\r\n        } = pointTo(\r\n            scaleMatrix,\r\n            container,\r\n            rx,\r\n            ry\r\n        );\r\n\r\n        attrs.push(\r\n            ['rx', Math.abs(nRx)],\r\n            ['ry', Math.abs(nRy)],\r\n            ['cx', cx1],\r\n            ['cy', cy1]\r\n        );\r\n    }\r\n        break;\r\n\r\n    case 'line': {\r\n        const resX1 = element.x1.baseVal.value,\r\n            resY1 = element.y1.baseVal.value,\r\n            resX2 = element.x2.baseVal.value,\r\n            resY2 = element.y2.baseVal.value;\r\n\r\n        const {\r\n            x: resX1_,\r\n            y: resY1_\r\n        } = pointTo(\r\n            localCTM,\r\n            container,\r\n            resX1,\r\n            resY1\r\n        );\r\n\r\n        const {\r\n            x: resX2_,\r\n            y: resY2_\r\n        } = pointTo(\r\n            localCTM,\r\n            container,\r\n            resX2,\r\n            resY2\r\n        );\r\n\r\n        attrs.push(\r\n            ['x1', resX1_],\r\n            ['y1', resY1_],\r\n            ['x2', resX2_],\r\n            ['y2', resY2_]\r\n        );\r\n    }\r\n        break;\r\n\r\n    case 'polygon':\r\n    case 'polyline': {\r\n        const points = parsePoints(element.getAttribute('points'));\r\n        const result = points.map(item => {\r\n            const {\r\n                x,\r\n                y\r\n            } = pointTo(\r\n                localCTM,\r\n                container,\r\n                Number(item[0]),\r\n                Number(item[1])\r\n            );\r\n\r\n            item[0] = x;\r\n            item[1] = y;\r\n\r\n            return item.join(' ');\r\n        }).join(' ');\r\n\r\n        attrs.push(['points', result]);\r\n    }\r\n        break;\r\n\r\n    case 'path': {\r\n        const path = element.getAttribute('d');\r\n\r\n        attrs.push(['d', resizePath(\r\n            {\r\n                path,\r\n                localCTM,\r\n                container\r\n            }\r\n        )]);\r\n    }\r\n        break;\r\n\r\n    default: { }\r\n        break;\r\n    \r\n    }\r\n\r\n    attrs.forEach(attr => {\r\n        element.setAttribute(attr[0], attr[1]);\r\n    });\r\n}\r\n\r\nfunction applyTransformToHandles(\r\n    storage,\r\n    data,\r\n    container\r\n) {\r\n    const {\r\n        box,\r\n        handles,\r\n        normalLine,\r\n        radius,\r\n        center\r\n    } = storage;\r\n\r\n    let {\r\n        x,\r\n        y,\r\n        width,\r\n        height\r\n    } = data;\r\n\r\n    const hW = width / 2,\r\n        hH = height / 2;\r\n\r\n    const boxCTM = getTransformToElement(\r\n        box,\r\n        box.parentNode\r\n    );\r\n\r\n    const boxCenter = pointTo(boxCTM, container, x + hW, y + hH);\r\n\r\n    const attrs = {\r\n        tl: pointTo(boxCTM, container, x, y),\r\n        tr: pointTo(boxCTM, container, x + width, y),\r\n        br: pointTo(boxCTM, container, x + width, y + height),\r\n        bl: pointTo(boxCTM, container, x, y + height),\r\n        tc: pointTo(boxCTM, container, x + hW, y),\r\n        bc: pointTo(boxCTM, container, x + hW, y + height),\r\n        ml: pointTo(boxCTM, container, x, y + hH),\r\n        mr: pointTo(boxCTM, container, x + width, y + hH),\r\n        rotator: {},\r\n        center: !center.isShifted && isDef(handles.center) ? boxCenter : undefined\r\n        //...(!center.isShifted && isDef(handles.center) && { center: boxCenter })\r\n    };\r\n\r\n    const theta = Math.atan2(\r\n        attrs.tl.y - attrs.tr.y,\r\n        attrs.tl.x - attrs.tr.x\r\n    );\r\n\r\n    attrs.rotator.x = attrs.mr.x - ROT_OFFSET * Math.cos(theta);\r\n    attrs.rotator.y = attrs.mr.y - ROT_OFFSET * Math.sin(theta);\r\n\r\n    normalLine.x1.baseVal.value = attrs.mr.x;\r\n    normalLine.y1.baseVal.value = attrs.mr.y;\r\n    normalLine.x2.baseVal.value = attrs.rotator.x;\r\n    normalLine.y2.baseVal.value = attrs.rotator.y;\r\n\r\n    if (isDef(radius)) {\r\n        radius.x1.baseVal.value = boxCenter.x;\r\n        radius.y1.baseVal.value = boxCenter.y;\r\n        if (!center.isShifted) {\r\n            radius.x2.baseVal.value = boxCenter.x;\r\n            radius.y2.baseVal.value = boxCenter.y;\r\n        }\r\n    }\r\n\r\n    x += width < 0 ? width : 0;\r\n    y += height < 0 ? height : 0;\r\n\r\n    const boxAttrs = {\r\n        x,\r\n        y,\r\n        width: Math.abs(width),\r\n        height: Math.abs(height)\r\n    };\r\n\r\n    Object.keys(boxAttrs).forEach(attr => {\r\n        box.setAttribute(attr, boxAttrs[attr]);\r\n    });\r\n\r\n    Object.keys(attrs).forEach(key => {\r\n        const hdl = handles[key];\r\n        const attr = attrs[key];\r\n        if (isUndef(attr)) return;\r\n        hdl.setAttribute('cx', attr.x);\r\n        hdl.setAttribute('cy', attr.y);\r\n    });\r\n}\r\n\r\nfunction isGroup(element) {\r\n    return element.tagName.toLowerCase() === 'g';\r\n}\r\n\r\nfunction checkChildElements(element) {\r\n    const arrOfElements = [];\r\n\r\n    if (isGroup(element)) {\r\n        forEach.call(element.childNodes, item => {\r\n            if (item.nodeType === 1) {\r\n                const tagName = item.tagName.toLowerCase();\r\n\r\n                if (ALLOWED_ELEMENTS.indexOf(tagName) !== -1) {\r\n                    if (tagName === 'g') {\r\n                        arrOfElements.push(...checkChildElements(item));\r\n                    }\r\n                    arrOfElements.push(item);\r\n                }\r\n            }\r\n        });\r\n    } else {\r\n        arrOfElements.push(element);\r\n    }\r\n\r\n    return arrOfElements;\r\n}\r\n\r\nfunction parsePoints(pts) {\r\n    return pts.match(floatRE).reduce(\r\n        (result, value, index, array) => {\r\n            if (index % 2 === 0) {\r\n                result.push(array.slice(index, index + 2));\r\n            }\r\n            return result;\r\n        },\r\n        []\r\n    );\r\n}\r\n\r\nfunction createHandler(l, t, color) {\r\n    const handler = createSVGElement('circle');\r\n    addClass(handler, 'sjx-svg-hdl');\r\n\r\n    const items = {\r\n        cx: l,\r\n        cy: t,\r\n        r: 5,\r\n        fill: color,\r\n        stroke: color,\r\n        'fill-opacity': 0.2,\r\n        'vector-effect': 'non-scaling-stroke'\r\n    };\r\n\r\n    Object.keys(items).map(key => {\r\n        handler.setAttribute(key, items[key]);\r\n    });\r\n\r\n    return handler;\r\n}\r\n\r\nfunction setLineStyle(line, color) {\r\n    line.setAttribute('stroke', color);\r\n    line.setAttribute('stroke-dasharray', '3 3');\r\n    line.setAttribute('vector-effect', 'non-scaling-stroke');\r\n}\r\n\r\nfunction createPoint(svg, x, y) {\r\n    if (isUndef(x) || isUndef(y)) {\r\n        return null;\r\n    }\r\n    const pt = svg.createSVGPoint();\r\n    pt.x = x; \r\n    pt.y = y;\r\n    return pt;\r\n}","import Observable from '../observable/Observable';\r\nimport Draggable from './html';\r\nimport DraggableSVG from './svg/index';\r\nimport { checkElement } from './svg/util';\r\nimport { arrReduce, isDef } from '../util/util';\r\n\r\n// factory method for creating draggable elements\r\nexport default function drag(options, obInstance) {\r\n    if (this.length) {\r\n        const Ob = (isDef(obInstance) && obInstance instanceof Observable)\r\n            ? obInstance\r\n            : new Observable();\r\n\r\n        return arrReduce.call(this, (result, item) => {\r\n            if (!(item instanceof SVGElement)) {\r\n                result.push(\r\n                    new Draggable(item, options, Ob)\r\n                );\r\n            } else {\r\n                if (checkElement(item)) {\r\n                    result.push(\r\n                        new DraggableSVG(item, options, Ob)\r\n                    );\r\n                }\r\n            }\r\n            return result;\r\n        }, []);\r\n    }\r\n}","import { helper } from '../Helper';\r\n\r\nimport {\r\n    requestAnimFrame,\r\n    cancelAnimFrame,\r\n    warn,\r\n    isDef,\r\n    isUndef,\r\n    isFunc\r\n} from '../util/util';\r\n\r\nimport {\r\n    getOffset,\r\n    objectsCollide\r\n} from '../util/css-util';\r\n\r\nexport default class Clone {\r\n\r\n    constructor(el, options) {\r\n        this.el = el;\r\n        this.options = options || {};\r\n        this.storage = null;\r\n\r\n        this._onMouseDown = this._onMouseDown.bind(this);\r\n        this._onTouchStart = this._onTouchStart.bind(this);\r\n        this._onMouseMove = this._onMouseMove.bind(this);\r\n        this._onTouchMove = this._onTouchMove.bind(this);\r\n        this._onMouseUp = this._onMouseUp.bind(this);\r\n        this._onTouchEnd = this._onTouchEnd.bind(this);\r\n        this._animate = this._animate.bind(this);\r\n\r\n        this.enable();\r\n    }\r\n\r\n    enable() {\r\n        if (isUndef(this.storage)) {\r\n            this._init();\r\n        }  else {\r\n            warn('Already enabled');\r\n        }\r\n    }\r\n\r\n    disable() {\r\n        _destroy.call(this);\r\n    }\r\n\r\n    _init() {\r\n        const self = this;\r\n\r\n        const { \r\n            el, \r\n            options \r\n        } = self;\r\n        const $el = helper(el);\r\n\r\n        const {\r\n            style,\r\n            onDrop,\r\n            appendTo,\r\n            stack\r\n        } = options;\r\n\r\n        const css = {\r\n            position: 'absolute',\r\n            'z-index': '2147483647',\r\n            ...((isDef(style) && typeof style === 'object') && style)\r\n        };\r\n\r\n        const dropZone = isDef(stack) \r\n            ? helper(stack)[0] \r\n            : document;\r\n\r\n        const _onDrop = isFunc(onDrop)\r\n            ? function(evt) {\r\n                const {\r\n                    clone\r\n                } = this.storage;\r\n\r\n                const result = objectsCollide(\r\n                    clone,\r\n                    dropZone\r\n                );\r\n\r\n                if (result) {\r\n                    onDrop.call(this, evt, this.el, clone);\r\n                }\r\n            }\r\n            : () => {};\r\n\r\n        self.storage = {\r\n            onDrop: _onDrop,\r\n            options,\r\n            css,\r\n            parent: helper(appendTo)[0] || document.body,\r\n            stack: dropZone\r\n        };\r\n\r\n        $el.on('mousedown', self._onMouseDown)\r\n            .on('touchstart', self._onTouchStart);\r\n    }\r\n\r\n    _start(e) {\r\n        if (e.stopImmediatePropagation) {\r\n            e.stopImmediatePropagation();\r\n        }\r\n        \r\n        const { \r\n            storage,\r\n            el\r\n        } = this;\r\n    \r\n        const {\r\n            parent,\r\n            css\r\n        } = storage; \r\n    \r\n        const offset = getOffset(parent);\r\n    \r\n        const { \r\n            clientX, \r\n            clientY \r\n        } = e; \r\n    \r\n        css.left = `${(clientX - offset.left)}px`;\r\n        css.top = `${(clientY - offset.top)}px`;\r\n    \r\n        const clone = el.cloneNode(true);\r\n        helper(clone).css(css);\r\n    \r\n        storage.clientX = clientX;\r\n        storage.clientY = clientY;\r\n        storage.cx = clientX;\r\n        storage.cy = clientY;\r\n        storage.clone = clone;\r\n    \r\n        helper(parent)[0].appendChild(clone);\r\n        this._draw();\r\n    }\r\n\r\n    _move(e) {\r\n        if (e.preventDefault) {\r\n            e.preventDefault();\r\n        }\r\n    \r\n        const { storage } = this;\r\n    \r\n        storage.clientX = e.clientX;\r\n        storage.clientY = e.clientY;\r\n        storage.doDraw = true;\r\n        storage.doMove = true;\r\n    }\r\n    \r\n    _end(e) {\r\n        if (e.stopImmediatePropagation) {\r\n            e.stopImmediatePropagation();\r\n        }\r\n    \r\n        const { \r\n            storage\r\n        } = this;\r\n    \r\n        const {\r\n            clone,\r\n            frameId,\r\n            onDrop\r\n        } = storage;\r\n    \r\n        storage.doDraw = false;\r\n        cancelAnimFrame(frameId);\r\n    \r\n        if (isUndef(clone)) return;\r\n    \r\n        onDrop.call(this, e);\r\n        clone.parentNode.removeChild(clone);\r\n    \r\n        delete storage.clone;\r\n    }\r\n    \r\n    _draw() {\r\n        this._animate();\r\n    }\r\n\r\n    _animate() {\r\n        const { storage } = this;\r\n    \r\n        storage.frameId = requestAnimFrame(this._animate);\r\n\r\n        const {\r\n            doDraw,\r\n            clientX,\r\n            clientY,\r\n            cx,\r\n            cy,\r\n            clone\r\n        } = storage;\r\n\r\n        if (!doDraw) return;\r\n        storage.doDraw = false;\r\n\r\n        const translate = `translate(${clientX - cx}px, ${clientY - cy}px)`;\r\n\r\n        helper(clone).css({\r\n            transform: translate,\r\n            webkitTranform: translate,\r\n            mozTransform: translate,\r\n            msTransform: translate,\r\n            otransform: translate \r\n        });\r\n    }\r\n    \r\n    _destroy() {\r\n        if (isUndef(this.storage)) return;\r\n        helper(this.el)\r\n            .off('mousedown', this._onMouseDown)\r\n            .off('touchstart', this._onTouchStart);\r\n        delete this.storage;\r\n    }\r\n\r\n    _onMouseDown(e) {\r\n        this._start(e);\r\n        helper(document)\r\n            .on('mousemove', this._onMouseMove)\r\n            .on('mouseup', this._onMouseUp);\r\n    }\r\n\r\n    _onMouseMove(e) {\r\n        this._move(e);\r\n    }\r\n\r\n    _onMouseUp(e) {\r\n        this._end(e);\r\n        helper(document)\r\n            .off('mousemove', this._onMouseMove)\r\n            .off('mouseup', this._onMouseUp);\r\n    }\r\n\r\n    _onTouchStart(e) {\r\n        this._start(e.touches[0]);\r\n        helper(document)\r\n            .on('touchmove', this._onTouchMove)\r\n            .on('touchend', this._onTouchEnd);\r\n    }\r\n\r\n    _onTouchMove(e) {\r\n        this._move(e.touches[0]);\r\n    }\r\n\r\n    _onTouchEnd(e) {\r\n        if (e.touches.length === 0) {\r\n            this._end(e.changedTouches[0]);\r\n        }\r\n        helper(document)\r\n            .off('touchmove', this._onTouchMove)\r\n            .off('touchend', this._onTouchEnd);\r\n    }\r\n\r\n}","import {\n    arrMap\n} from '../util/util';\n\nimport Clone from './clone';\n\nexport default function clone(options) {\n    if (this.length) {\n        return arrMap.call(this, item => {\n            return new Clone(item, options);\n        });\n    }\n}","import Helper from './Helper';\r\nimport drag from './transform/index';\r\nimport clone from './clone/index';\r\n\r\nexport default class Subjx extends Helper {\r\n\r\n    constructor(params) {\n        super(params);\n    }\r\n\r\n    drag() {\n        return drag.call(this, ...arguments);\n    }\r\n\r\n    clone() {\n        return clone.call(this, ...arguments);\n    }\r\n\n}","/* @license\r\n * Move/Rotate/Resize tool\r\n * Released under the MIT license, 2018-2019\r\n * Karen Sarksyan\r\n * nichollascarter@gmail.com\r\n*/\r\n\r\nimport '../style/subjx.css';\r\nimport Subjx from './core/Subjx';\r\nimport Observable from './core/observable/Observable';\r\n\r\nexport { Subjx, Observable };\r\n\r\nexport default function subjx(params) {\r\n    return new Subjx(params);\r\n}\r\n\r\nObject.defineProperty(subjx, 'createObservable', {\r\n    value: () => {\r\n        return new Observable();\r\n    }\r\n});"],"sourceRoot":""}